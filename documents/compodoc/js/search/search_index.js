var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.468,1,0.915]],["body/components/App.html",[0,0.856,1,1.766,2,1.324,3,0.621,4,0.516,5,1.598,6,1.367,7,1.598,8,0.516,9,2.276,10,0.621,11,2.485,12,1.826,13,3.759,14,3.759,15,3.759,16,2.477,17,3.759,18,3.759,19,1.367,20,2.649,21,2.097,22,2.765,23,4.196,24,4.196,25,2.765,26,4.196,27,1.826,28,1.826,29,1.826,30,2.097,31,3.759,32,2.097,33,3.759,34,1.73,35,0.061,36,0.865,37,1.367,38,1.367,39,2.276,40,2.865,41,1.888,42,2.341,43,1.598,44,2.865,45,2.865,46,1.888,47,2.865,48,1.267,49,1.888,50,2.276,51,0.815,52,0.249,53,3.759,54,2.485,55,3.759,56,1.598,57,2.097,58,1.794,59,1.598,60,2.485,61,1.598,62,0.815,63,1.598,64,1.174,65,1.598,66,0.621,67,1.598,68,0.865,69,1.367,70,1.598,71,0.043,72,0.043]],["title/components/DownloadResumeButton.html",[0,0.468,29,1.064]],["body/components/DownloadResumeButton.html",[0,0.834,1,1.665,2,1.245,3,0.566,4,0.47,5,1.456,6,1.245,7,1.456,8,0.47,10,0.766,19,1.245,20,2.579,21,1.971,22,2.639,27,1.07,28,1.07,29,1.895,30,1.971,32,1.971,34,1.512,35,0.061,36,0.788,37,1.245,38,1.245,42,1.456,43,1.456,48,1.576,49,2.639,50,3.673,51,0.766,52,0.227,54,1.971,56,1.456,57,1.971,58,1.685,59,1.456,60,2.394,61,1.456,62,0.869,63,1.456,64,2.038,65,1.456,66,0.869,67,1.456,68,0.788,69,1.245,70,1.456,71,0.04,72,0.04,73,3.182,74,2.073,75,1.685,76,1.685,77,3.533,78,2.828,79,3.533,80,2.806,81,2.328,82,2.806,83,1.971,84,1.448,85,2.806,86,4.005,87,3.533,88,3.533,89,0.47,90,0.909,91,1.209,92,4.292,93,0.671,94,2.609,95,2.683,96,0.909,97,2.609,98,1.685,99,1.245,100,0.671,101,0.47,102,0.671,103,1.971,104,3.533,105,3.533,106,2.609,107,3.533,108,0.909,109,1.642,110,2.609,111,0.671,112,1.245,113,2.609,114,3.533]],["title/classes/Language.html",[52,0.226,66,0.563]],["body/classes/Language.html",[3,0.486,4,0.404,8,0.404,10,0.689,12,0.918,35,0.061,51,0.486,52,0.195,62,1.093,66,1.138,71,0.036,72,0.036,89,0.404,90,0.817,91,1.474,93,0.576,96,1.212,98,1.516,99,1.119,100,0.576,101,0.85,102,0.576,108,1.191,111,1.034,115,1.249,116,1.779,117,0.918,118,0.789,119,0.918,120,0.918,121,1.476,122,1.779,123,0.689,124,2.056,125,1.767,126,5.015,127,3.149,128,3.192,129,4.019,130,2.648,131,2.648,132,2.094,133,3.149,134,2.138,135,3.177,136,2.459,137,2.242,138,3.502,139,2.239,140,2.242,141,2.242,142,1.772,143,2.524,144,3.192,145,2.239,146,2.239,147,1.772,148,2.239,149,1.632,150,2.239,151,2.239,152,2.239,153,2.094,154,2.094,155,2.524,156,3.177,157,1.416]],["title/injectables/LanguageService.html",[158,0.915,159,1.239]],["body/injectables/LanguageService.html",[0,0.572,2,0.788,3,0.305,4,0.572,8,0.253,10,0.688,11,0.784,12,1.301,34,1.118,35,0.061,36,0.424,37,1.846,38,0.671,51,0.485,52,0.195,54,2.309,62,0.604,66,1.136,71,0.025,72,0.025,76,1.067,82,1.116,83,1.247,84,1.141,89,0.253,90,0.575,91,1.422,93,0.361,96,1.033,98,1.067,99,1.3,100,0.716,101,0.698,102,0.716,108,1.033,109,1.141,111,0.816,112,0.671,117,1.512,118,1.596,119,1.646,120,1.775,121,1.473,122,2.521,123,0.485,124,1.696,125,1.494,134,1.301,140,1.247,141,1.771,142,1.771,149,1.118,157,1.118,158,0.788,159,1.653,160,0.784,161,1.116,162,2.647,163,2.986,164,2.187,165,1.247,166,2.236,167,1.776,168,1.776,169,1.916,170,1.42,171,1.776,172,2.521,173,3.19,174,1.776,175,3.869,176,2.931,177,4.584,178,3.464,179,3.174,180,2.784,181,2.784,182,3.174,183,2.236,184,3.174,185,1.405,186,3.464,187,3.174,188,2.236,189,1.247,190,3.174,191,2.795,192,2.752,193,2.784,194,3.464,195,1.473,196,2.784,197,2.236,198,1.405,199,2.092,200,1.473,201,2.432,202,1.473,203,1.473,204,2.236,205,2.752,206,1.15,207,2.521,208,2.212,209,3.174,210,1.835,211,1.776,212,1.405,213,1.514,214,2.236,215,1.405,216,1.776,217,2.236,218,1.776,219,1.405,220,1.247,221,2.236,222,1.512,223,1.653,224,2.236,225,1.405,226,3.074,227,2.236,228,2.236,229,2.236,230,2.236,231,2.236,232,2.236,233,2.236,234,2.236,235,2.236,236,3.174,237,2.236,238,1.473,239,2.236,240,2.236,241,2.236,242,2.236,243,2.236,244,2.236,245,2.236,246,2.236,247,1.473,248,1.776,249,1.776,250,2.236,251,2.236,252,2.236,253,1.405,254,1.776,255,1.776,256,1.247,257,1.776,258,2.236,259,1.116,260,1.553,261,0.926,262,1.405,263,4.016,264,2.236,265,2.236,266,2.784,267,2.236,268,2.784,269,1.116,270,1.776,271,1.776,272,1.776,273,1.776,274,1.405,275,2.236,276,2.236,277,2.236,278,1.405,279,1.405,280,1.405,281,2.236,282,1.405,283,1.405,284,1.405,285,1.405,286,1.776,287,1.405,288,0.926,289,1.405,290,1.405,291,1.405,292,1.405,293,0.671,294,2.236,295,2.236,296,1.116,297,1.405,298,1.116,299,1.405,300,1.116,301,1.405,302,1.405,303,1.405,304,1.405]],["title/components/LanguageSwitcher.html",[0,0.468,27,1.064]],["body/components/LanguageSwitcher.html",[0,0.768,1,1.55,2,1.041,3,0.439,4,0.365,5,1.129,6,0.966,7,1.129,8,0.365,10,0.757,19,0.966,20,2.376,21,1.648,25,2.299,27,1.746,28,0.83,29,0.83,30,1.648,32,1.648,34,1.55,35,0.061,36,0.611,41,2.807,42,1.947,43,1.129,48,0.611,51,0.641,52,0.176,56,1.129,57,1.648,58,1.41,59,1.129,60,2.14,61,1.129,62,0.924,63,1.129,64,0.83,65,1.129,66,1.135,67,1.129,68,0.611,69,0.966,70,1.129,71,0.033,72,0.033,75,1.41,76,1.83,84,1.572,89,0.365,90,0.76,91,1.388,93,0.521,96,1.049,98,1.41,99,1.041,100,0.76,101,0.629,102,0.76,108,1.16,109,1.43,111,0.76,112,0.966,117,1.211,123,0.641,149,1.041,157,1.041,159,2.151,163,2.971,164,2.032,165,1.648,169,1.946,170,1.746,199,1.947,200,1.947,201,2.807,210,2.528,213,1.83,220,1.648,222,0.83,223,0.966,226,2.347,247,3.03,248,2.772,249,2.347,256,1.648,293,1.41,305,3.384,306,1.334,307,2.347,308,2.347,309,2.347,310,2.347,311,2.347,312,1.947,313,2.772,314,2.772,315,3.489,316,2.347,317,2.347,318,3.047,319,3.836,320,4.26,321,2.955,322,1.608,323,2.955,324,2.024,325,2.515,326,2.024,327,2.347,328,2.955,329,2.024,330,2.347,331,2.955,332,2.955,333,2.347,334,2.024,335,2.024,336,1.608,337,1.608,338,2.024,339,2.024,340,2.024,341,2.024,342,2.347,343,2.955,344,2.955,345,2.955,346,2.347]],["title/classes/Resume.html",[48,0.784,52,0.226]],["body/classes/Resume.html",[3,0.461,4,0.383,8,0.852,10,0.664,16,1.4,35,0.061,48,1.563,51,0.461,52,0.266,62,1.09,64,1.254,66,1.009,71,0.035,72,0.035,75,1.013,78,3.01,89,0.383,90,0.787,91,1.472,93,0.546,96,1.197,98,1.46,99,1.078,100,0.546,101,0.839,102,0.546,108,1.175,111,1.009,115,1.185,117,0.871,118,0.748,119,0.871,120,0.871,123,0.778,124,2.04,125,1.639,127,3.152,130,2.585,131,2.585,132,2.016,133,3.113,134,2.129,136,2.416,137,2.189,140,2.189,141,2.189,142,2.189,147,2.189,149,1.609,153,2.016,154,2.016,157,1.382,206,0.787,347,1.687,348,2.124,349,3.066,350,2.124,351,1.687,352,1.687,353,4.568,354,4.568,355,3.923,356,3.923,357,3.059,358,2.43,359,2.43,360,3.059,361,3.059,362,2.124,363,2.124,364,2.016,365,2.124,366,2.124,367,2.124,368,3.923,369,2.124,370,2.124,371,3.059,372,3.059]],["title/injectables/ResumeService.html",[95,1.449,158,0.915]],["body/injectables/ResumeService.html",[3,0.466,4,0.387,8,0.753,10,0.669,11,1.197,34,1.271,35,0.061,36,0.648,48,1.547,51,0.669,52,0.268,58,1.471,62,0.669,64,1.264,66,1.081,71,0.035,72,0.049,75,1.881,78,2.377,80,3.132,83,2.556,84,1.985,85,2.449,89,0.387,90,0.793,93,0.552,95,2.329,96,1.014,100,0.552,101,0.753,102,0.552,108,0.793,109,1.478,111,0.552,112,1.024,118,1.086,119,1.264,120,1.264,123,0.669,124,1.878,125,1.531,141,1.72,142,1.72,158,1.086,159,2.311,160,1.197,162,2.598,163,2.031,164,2.074,165,1.72,170,1.264,189,1.72,192,3.132,206,1.014,210,2.598,213,1.471,218,2.449,220,1.72,222,0.88,223,1.024,257,2.449,261,1.415,269,2.449,288,2.031,312,2.031,322,1.705,325,1.72,349,1.415,351,2.449,364,2.031,373,1.705,374,4.477,375,3.083,376,3.083,377,2.449,378,3.083,379,3.083,380,3.083,381,3.083,382,3.607,383,3.942,384,3.083,385,2.031,386,3.083,387,3.083,388,3.083,389,2.449,390,2.449,391,2.146,392,3.083,393,3.083,394,3.083,395,3.083,396,2.031,397,3.083,398,3.083,399,3.083,400,3.942,401,3.083,402,3.083,403,3.083,404,3.083,405,3.083,406,3.083,407,3.083,408,3.083,409,2.146,410,2.146,411,2.146,412,3.607,413,3.083,414,3.083,415,3.083,416,3.083,417,3.083,418,2.146,419,2.146,420,2.146,421,2.146,422,2.146,423,2.146,424,2.146,425,2.146]],["title/classes/Theme.html",[52,0.226,68,0.784]],["body/classes/Theme.html",[3,0.458,4,0.381,8,0.381,10,0.661,12,0.866,19,1.007,35,0.061,51,0.458,52,0.184,62,1.112,68,1.568,71,0.035,72,0.035,76,1.007,89,0.381,90,0.783,91,1.458,93,0.543,96,1.195,99,1.073,100,0.543,101,0.838,102,0.543,103,2.411,108,1.173,111,1.006,115,1.178,117,0.866,118,0.744,119,0.866,120,0.866,121,1.392,123,0.661,124,2.038,125,1.761,127,3.21,128,3.108,130,2.578,131,2.578,132,2.008,133,3.006,134,2.112,136,2.544,137,2.183,138,2.42,140,2.411,143,3.108,144,2.42,147,2.314,149,1.607,153,2.008,154,2.008,155,2.42,157,1.378,202,2.008,206,0.783,358,2.42,359,2.42,364,2.578,385,2.008,426,1.677,427,2.112,428,2.112,429,1.677,430,5.082,431,2.112,432,2.112,433,3.913,434,3.046,435,3.046,436,3.913,437,3.913,438,2.112,439,3.108,440,3.108,441,2.112,442,2.112,443,2.112,444,4.561,445,2.112,446,2.112,447,2.112,448,3.046]],["title/injectables/ThemeService.html",[158,0.915,449,1.449]],["body/injectables/ThemeService.html",[3,0.368,4,0.566,6,1.676,8,0.306,10,0.762,11,0.946,12,1.753,34,1.106,35,0.061,36,0.512,51,0.561,52,0.329,62,0.681,68,1.588,71,0.029,72,0.045,83,1.444,84,0.695,89,0.306,90,0.666,91,1.393,93,0.436,96,1.067,99,0.912,100,0.807,101,0.719,102,0.807,108,1.1,109,1.287,111,0.807,117,1.44,118,1.625,119,1.753,120,1.833,123,0.561,124,1.797,125,1.645,134,1.635,136,1.444,149,1.238,157,1.238,158,0.912,160,0.946,162,2.819,164,1.676,165,1.444,167,2.791,168,2.056,169,2.134,170,1.934,171,2.056,172,2.056,173,3.296,174,2.056,176,3.482,189,1.444,191,2.628,199,1.706,202,1.706,203,2.069,206,1.169,208,2.056,211,2.494,213,1.903,216,2.056,222,1.061,223,1.235,238,1.706,254,2.056,255,2.056,256,1.444,261,1.117,270,2.056,271,2.056,272,2.056,273,2.056,288,1.706,293,0.809,296,1.347,325,1.96,389,2.056,390,2.056,439,3.398,440,3.398,449,2.111,450,1.347,451,3.84,452,3.139,453,3.513,454,3.513,455,2.588,456,3.513,457,1.695,458,2.588,459,2.588,460,2.588,461,2.056,462,2.588,463,2.588,464,2.588,465,1.695,466,2.588,467,2.588,468,3.139,469,1.695,470,2.588,471,1.695,472,2.588,473,2.588,474,2.588,475,2.588,476,2.588,477,1.695,478,2.588,479,2.588,480,2.588,481,2.588,482,2.588,483,3.513,484,3.513,485,3.513,486,2.588,487,2.588,488,2.588,489,2.588,490,2.588,491,1.695,492,1.695,493,1.347,494,1.695,495,2.588,496,2.588,497,1.695,498,1.695,499,3.139,500,1.695,501,1.695,502,1.695,503,2.056,504,1.695,505,1.695,506,1.695,507,1.695,508,1.695,509,1.695]],["title/components/ThemeSwitcher.html",[0,0.468,28,1.064]],["body/components/ThemeSwitcher.html",[0,0.811,1,1.545,2,1.033,3,0.435,4,0.361,5,1.118,6,0.956,7,1.118,8,0.361,10,0.752,19,0.956,20,2.368,21,1.636,22,2.286,25,2.286,27,0.822,28,1.565,29,0.822,30,1.636,32,1.636,34,1.545,35,0.061,36,0.605,37,0.956,38,0.956,42,2.267,43,1.118,46,2.797,48,0.605,51,0.636,52,0.174,54,1.636,56,1.118,57,1.636,58,1.399,59,1.118,60,2.13,61,1.118,62,0.828,63,1.118,64,0.822,65,1.118,66,0.435,67,1.118,68,1.588,69,0.956,70,1.118,71,0.033,72,0.033,75,1.399,76,1.399,84,1.202,89,0.361,90,0.754,91,1.385,93,0.515,96,1.045,100,0.754,101,0.688,102,0.754,103,1.636,108,1.092,109,1.422,111,0.754,112,0.956,118,1.033,123,0.636,134,1.422,147,2.13,149,1.345,157,1.033,164,2.025,169,1.822,170,1.74,189,1.636,191,2.963,200,1.933,201,1.933,203,1.933,206,0.754,213,2.145,220,1.636,247,3.023,256,1.636,293,1.399,306,1.321,307,3.033,308,2.33,309,2.33,310,2.33,311,2.33,312,1.933,313,2.756,314,2.756,316,2.33,317,2.33,318,3.033,325,2.368,327,2.33,336,1.592,337,1.592,342,2.33,346,2.33,377,2.33,385,1.933,396,1.933,449,2.508,451,3.572,461,2.33,503,2.33,510,3.372,511,3.818,512,4.245,513,2.933,514,2.004,515,2.933,516,2.933,517,2.004,518,2.004,519,2.933,520,2.004,521,2.933,522,2.004,523,2.004,524,2.933,525,2.004,526,2.004,527,2.004,528,2.004,529,2.004,530,2.933,531,2.933]],["title/coverage.html",[532,2.797]],["body/coverage.html",[0,0.833,1,1.411,8,0.57,9,2.509,27,1.295,28,1.295,29,1.295,35,0.06,41,2.082,46,2.082,48,1.327,49,2.082,52,0.383,66,0.685,68,0.954,71,0.045,72,0.045,73,2.509,74,2.509,95,1.762,101,0.57,116,2.509,137,1.762,158,1.549,159,1.507,161,2.509,206,0.812,305,2.509,306,2.639,347,2.509,373,2.509,426,2.509,449,1.762,450,2.509,510,2.509,532,2.509,533,3.159,534,3.159,535,3.181,536,5.095,537,2.509,538,5.056,539,5.056,540,2.509,541,3.181,542,2.509,543,2.509,544,2.509,545,2.509,546,5.126,547,4.004,548,4.396,549,3.159,550,3.159,551,3.159,552,3.159,553,4.004,554,2.509,555,2.509,556,3.672,557,2.509,558,2.509,559,2.509,560,3.159,561,3.159]],["title/dependencies.html",[562,1.732,563,2.476]],["body/dependencies.html",[35,0.06,36,1.115,37,2.103,38,1.762,39,2.933,71,0.05,72,0.05,259,3.501,260,2.06,493,2.933,563,2.933,564,3.692,565,3.743,566,5.115,567,3.692,568,3.692,569,3.692,570,2.433,571,3.692,572,3.692,573,3.692,574,2.933,575,3.692,576,2.933,577,3.692,578,3.692,579,3.692,580,3.692,581,3.692,582,3.692,583,3.692]],["title/index.html",[89,0.393,584,2.18,585,2.18]],["body/index.html",[0,0.792,2,1.111,4,0.569,12,1.639,16,2.078,35,0.045,69,1.505,71,0.045,72,0.045,81,2.078,125,1.409,169,1.505,170,1.293,195,3.044,205,2.505,206,0.811,207,3.87,222,1.639,238,2.078,260,1.759,293,1.505,298,2.505,333,2.505,352,2.505,396,2.636,429,2.505,565,2.505,570,2.895,586,3.153,587,4.393,588,3.153,589,3.787,590,4,591,3.153,592,3.153,593,4.767,594,4.871,595,3.153,596,4,597,3.153,598,3.153,599,3.153,600,3.153,601,3.153,602,3.153,603,3.153,604,4,605,3.153,606,3.153,607,3.153,608,4.393,609,3.153,610,3.153,611,3.153,612,3.153,613,3.153,614,3.49,615,3.153,616,3.153,617,3.153,618,3.153,619,3.153,620,3.153,621,3.153,622,3.153,623,3.153,624,4,625,4.393,626,3.153,627,3.153,628,3.153,629,3.153,630,3.153,631,4.393,632,3.153,633,4.871,634,3.153,635,4,636,3.153,637,3.153,638,3.153,639,3.153,640,3.153,641,3.153,642,3.153,643,3.153,644,3.153,645,3.153,646,3.153,647,3.153,648,2.078,649,3.153]],["title/modules.html",[650,2.797]],["body/modules.html",[35,0.053,71,0.053,72,0.053,650,3.287]],["title/overview.html",[648,2.32]],["body/overview.html",[2,1.438,35,0.053,71,0.053,72,0.053,115,2.277,160,2.277,286,3.713,300,3.243,648,2.69]],["title/properties.html",[123,0.676,562,1.732]],["body/properties.html",[35,0.056,71,0.053,72,0.053,81,2.709,123,0.891,651,4.11]],["title/miscellaneous/variables.html",[652,1.732,653,2.476]],["body/miscellaneous/variables.html",[1,1.392,35,0.061,71,0.045,72,0.045,89,0.558,101,0.827,103,1.726,195,2.039,206,1.016,222,2.081,223,2.423,260,1.726,330,2.458,349,2.039,535,2.458,537,3.459,540,3.459,541,2.458,542,3.139,543,3.459,544,2.458,545,3.139,554,2.458,555,3.139,556,2.458,557,3.139,558,3.139,559,3.139,570,2.039,574,2.458,576,2.458,589,2.458,614,2.458,652,2.458,653,2.458,654,4.587,655,3.952,656,3.094,657,3.952,658,3.094,659,3.094,660,3.094,661,3.094,662,3.094,663,3.094,664,3.094,665,3.094,666,3.094,667,3.094,668,3.952,669,3.952,670,3.094,671,3.094,672,3.094,673,3.094,674,3.094,675,3.094,676,3.094,677,3.094,678,3.094,679,3.094,680,3.952,681,3.094,682,3.094,683,3.094,684,3.094,685,3.094,686,3.094,687,3.094,688,3.094,689,3.094,690,3.094,691,3.094,692,3.094,693,3.094]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":651,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":277,"title":{},"body":{"injectables/LanguageService.html":{}}}],["2.3.0",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":565,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":286,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["3/3",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":300,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["5",{"_index":302,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":351,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["active",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":284,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":642,"title":{},"body":{"index.html":{}}}],["allows",{"_index":309,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":473,"title":{},"body":{"injectables/ThemeService.html":{}}}],["anchor",{"_index":398,"title":{},"body":{"injectables/ResumeService.html":{}}}],["angular",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":493,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":43,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/grid",{"_index":338,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":337,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":336,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":55,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":33,"title":{},"body":{"components/App.html":{}}}],["app.shared.download",{"_index":114,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["app.shared.theme",{"_index":531,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["app.title",{"_index":53,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":542,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["application's",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["applicationconfig",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":461,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["array",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":617,"title":{},"body":{"index.html":{}}}],["associated",{"_index":364,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{}}}],["assumes",{"_index":472,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["automatic",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["automatically",{"_index":333,"title":{},"body":{"components/LanguageSwitcher.html":{},"index.html":{}}}],["available",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["back",{"_index":388,"title":{},"body":{"injectables/ResumeService.html":{}}}],["based",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["body",{"_index":466,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":490,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":614,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":615,"title":{},"body":{"index.html":{}}}],["button",{"_index":50,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{}}}],["button'},{'name",{"_index":65,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["button.html",{"_index":87,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.scss",{"_index":88,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts",{"_index":74,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["button.ts:21",{"_index":97,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts:35",{"_index":106,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button/download",{"_index":49,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["calls",{"_index":287,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":294,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":453,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":464,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{}}}],["checks",{"_index":393,"title":{},"body":{"injectables/ResumeService.html":{}}}],["choice",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":639,"title":{},"body":{"index.html":{}}}],["class",{"_index":52,"title":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":589,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["clicked",{"_index":79,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["cloud",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":125,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":282,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":637,"title":{},"body":{"index.html":{}}}],["command",{"_index":631,"title":{},"body":{"index.html":{}}}],["compile",{"_index":616,"title":{},"body":{"index.html":{}}}],["complete",{"_index":610,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":61,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["config",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":478,"title":{},"body":{"injectables/ThemeService.html":{}}}],["const",{"_index":412,"title":{},"body":{"injectables/ResumeService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":494,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":457,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":132,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":322,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(resumeservice",{"_index":94,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["constructor(themeservice",{"_index":514,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":385,"title":{},"body":{"injectables/ResumeService.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":484,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":162,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["core/language/language.model",{"_index":335,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":334,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/resume/resume.service",{"_index":110,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["core/theming/theme.model",{"_index":522,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":523,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["coverage",{"_index":532,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":98,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{}}}],["current",{"_index":84,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currentlanguagesignal",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentresume",{"_index":382,"title":{},"body":{"injectables/ResumeService.html":{}}}],["currenttheme",{"_index":452,"title":{},"body":{"injectables/ThemeService.html":{}}}],["curriculum",{"_index":405,"title":{},"body":{"injectables/ResumeService.html":{}}}],["dark",{"_index":440,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":488,"title":{},"body":{"injectables/ThemeService.html":{}}}],["de",{"_index":406,"title":{},"body":{"injectables/ResumeService.html":{}}}],["default",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":96,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":462,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":563,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detailed",{"_index":645,"title":{},"body":{"index.html":{}}}],["dev",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":590,"title":{},"body":{"index.html":{}}}],["different",{"_index":312,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["directive",{"_index":59,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directly",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["directory",{"_index":619,"title":{},"body":{"index.html":{}}}],["display",{"_index":147,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":308,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":618,"title":{},"body":{"index.html":{}}}],["document",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["document.createelement('a",{"_index":419,"title":{},"body":{"injectables/ResumeService.html":{}}}],["documentation",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":120,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["download",{"_index":64,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["downloaded",{"_index":424,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloading",{"_index":77,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["downloadresume",{"_index":383,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloadresumebutton",{"_index":29,"title":{"components/DownloadResumeButton.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["downloads",{"_index":80,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["during",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":140,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":634,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":636,"title":{},"body":{"index.html":{}}}],["each",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["el",{"_index":404,"title":{},"body":{"injectables/ResumeService.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":143,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":346,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":141,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["enabling",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["encapsulates",{"_index":428,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":633,"title":{},"body":{"index.html":{}}}],["english",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":117,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["es",{"_index":142,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["español",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["execute",{"_index":626,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["exposed",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{}}}],["express",{"_index":576,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":275,"title":{},"body":{"injectables/LanguageService.html":{}}}],["falls",{"_index":387,"title":{},"body":{"injectables/ResumeService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["filepath",{"_index":353,"title":{},"body":{"classes/Resume.html":{}}}],["files",{"_index":603,"title":{},"body":{"index.html":{}}}],["finds",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["flag",{"_index":126,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":481,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":630,"title":{},"body":{"index.html":{}}}],["format",{"_index":361,"title":{},"body":{"classes/Resume.html":{}}}],["found",{"_index":390,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["framework",{"_index":638,"title":{},"body":{"index.html":{}}}],["full",{"_index":327,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["functions",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":608,"title":{},"body":{"index.html":{}}}],["generated",{"_index":588,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":319,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":511,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":128,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":454,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getfilepath",{"_index":355,"title":{},"body":{"classes/Resume.html":{}}}],["getflag",{"_index":129,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":433,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":130,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagecode",{"_index":356,"title":{},"body":{"classes/Resume.html":{}}}],["getlanguagelist",{"_index":320,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getlanguages",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":131,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["gets",{"_index":149,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getters",{"_index":350,"title":{},"body":{"classes/Resume.html":{}}}],["getthemebycode",{"_index":455,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":470,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":512,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":456,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":584,"title":{"index.html":{}},"body":{}}],["handle",{"_index":105,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["handler",{"_index":330,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":167,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["handling",{"_index":375,"title":{},"body":{"injectables/ResumeService.html":{}}}],["hc",{"_index":485,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":613,"title":{},"body":{"index.html":{}}}],["high",{"_index":483,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holding",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{}}}],["holds",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":599,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":358,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["i18n",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":430,"title":{},"body":{"classes/Theme.html":{}}}],["id",{"_index":127,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":137,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":436,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":605,"title":{},"body":{"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"classes/Resume.html":{},"index.html":{}}}],["index",{"_index":89,"title":{"index.html":{}},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":352,"title":{},"body":{"classes/Resume.html":{},"index.html":{}}}],["initialize",{"_index":278,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["initiates",{"_index":107,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["inject",{"_index":492,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":158,"title":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":160,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":463,"title":{},"body":{"injectables/ThemeService.html":{}}}],["instance",{"_index":99,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["integrate",{"_index":166,"title":{},"body":{"injectables/LanguageService.html":{}}}],["integrates",{"_index":380,"title":{},"body":{"injectables/ResumeService.html":{}}}],["internal",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["internally",{"_index":104,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["invoked",{"_index":331,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["iso",{"_index":360,"title":{},"body":{"classes/Resume.html":{}}}],["item",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":627,"title":{},"body":{"index.html":{}}}],["label",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["lang.getcode",{"_index":281,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":344,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":343,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":345,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":66,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language/language.service",{"_index":411,"title":{},"body":{"injectables/ResumeService.html":{}}}],["languagecode",{"_index":354,"title":{},"body":{"classes/Resume.html":{}}}],["languagecodes",{"_index":279,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":163,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["languageservice",{"_index":159,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":27,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":439,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":486,"title":{},"body":{"injectables/ThemeService.html":{}}}],["link",{"_index":418,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.click",{"_index":425,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.download",{"_index":422,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.href",{"_index":420,"title":{},"body":{"injectables/ResumeService.html":{}}}],["list",{"_index":169,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":574,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":459,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":592,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":274,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":497,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":299,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":509,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":377,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["luis",{"_index":400,"title":{},"body":{"injectables/ResumeService.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":165,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":516,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":168,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["matbutton",{"_index":86,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["matbuttonmodule",{"_index":25,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["match",{"_index":389,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["matches",{"_index":82,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":437,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":315,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":314,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":313,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":288,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":90,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":652,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":119,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["models",{"_index":348,"title":{},"body":{"classes/Resume.html":{}}}],["modify",{"_index":602,"title":{},"body":{"index.html":{}}}],["modifying",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["modules",{"_index":650,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":644,"title":{},"body":{"index.html":{}}}],["multilingual",{"_index":376,"title":{},"body":{"injectables/ResumeService.html":{}}}],["multiple",{"_index":378,"title":{},"body":{"injectables/ResumeService.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":609,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":598,"title":{},"body":{"index.html":{}}}],["needed",{"_index":295,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":641,"title":{},"body":{"index.html":{}}}],["new",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":594,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["non",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["nothing",{"_index":276,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":133,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":435,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":118,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":505,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":293,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":597,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":621,"title":{},"body":{"index.html":{}}}],["option",{"_index":427,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":648,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":562,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":649,"title":{},"body":{"index.html":{}}}],["param",{"_index":111,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":349,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":78,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["performance",{"_index":622,"title":{},"body":{"index.html":{}}}],["persist",{"_index":508,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":612,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":586,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":606,"title":{},"body":{"index.html":{}}}],["preference",{"_index":85,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["previous",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["private",{"_index":124,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":620,"title":{},"body":{"index.html":{}}}],["project",{"_index":587,"title":{},"body":{"index.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["property",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["protected",{"_index":318,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":386,"title":{},"body":{"injectables/ResumeService.html":{}}}],["providedin",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":75,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":91,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["re",{"_index":392,"title":{},"body":{"injectables/ResumeService.html":{}}}],["reactive",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["reactively",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["read",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["readable",{"_index":359,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["readonly",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{}}}],["reference",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":646,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":521,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":600,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":501,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":504,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{}}}],["representation",{"_index":432,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":144,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":121,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestresume",{"_index":92,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["resources",{"_index":643,"title":{},"body":{"index.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":48,"title":{"classes/Resume.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["resume's",{"_index":368,"title":{},"body":{"classes/Resume.html":{}}}],["resume(1",{"_index":399,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume(2",{"_index":403,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.getlanguagecode",{"_index":416,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.model",{"_index":410,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_en.pdf",{"_index":402,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_es.pdf",{"_index":408,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumes",{"_index":374,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumeservice",{"_index":95,"title":{"injectables/ResumeService.html":{}},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["retrieve",{"_index":476,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":157,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":108,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["rodriguez",{"_index":407,"title":{},"body":{"injectables/ResumeService.html":{}}}],["rodriguez\\'s",{"_index":401,"title":{},"body":{"injectables/ResumeService.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":63,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":593,"title":{},"body":{"index.html":{}}}],["runner",{"_index":629,"title":{},"body":{"index.html":{}}}],["running",{"_index":596,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":475,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":292,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":460,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":467,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":604,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":611,"title":{},"body":{"index.html":{}}}],["search",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":311,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":325,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selects",{"_index":394,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serve",{"_index":381,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serveonce",{"_index":595,"title":{},"body":{"index.html":{}}}],["server",{"_index":570,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":164,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":321,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":328,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":513,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":519,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/download",{"_index":47,"title":{},"body":{"components/App.html":{}}}],["shared/components/language",{"_index":40,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":45,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":332,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["signal's",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["signal(this.languages[0",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["speed",{"_index":623,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":116,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":145,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":146,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":139,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":135,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":151,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":152,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":148,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":150,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":161,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:105",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:115",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:129",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:33",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:47",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:64",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:96",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/resume/resume.model.ts",{"_index":347,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.model.ts:19",{"_index":362,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:27",{"_index":365,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:35",{"_index":363,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:43",{"_index":357,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:65",{"_index":367,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:74",{"_index":370,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:83",{"_index":369,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:92",{"_index":366,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.service.ts",{"_index":373,"title":{},"body":{"injectables/ResumeService.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.service.ts:28",{"_index":409,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:39",{"_index":384,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:62",{"_index":391,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":426,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:14",{"_index":441,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:21",{"_index":442,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:28",{"_index":438,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:35",{"_index":434,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:56",{"_index":446,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:64",{"_index":447,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:72",{"_index":443,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:80",{"_index":445,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":450,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:106",{"_index":465,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:32",{"_index":491,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:45",{"_index":458,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:70",{"_index":469,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:79",{"_index":477,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:93",{"_index":471,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/shared/components/download",{"_index":73,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["src/app/shared/components/language",{"_index":305,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":510,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":591,"title":{},"body":{"index.html":{}}}],["started",{"_index":585,"title":{"index.html":{}},"body":{}}],["state",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":298,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":495,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":134,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":32,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["subscribe",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["subscribes",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{}}}],["such",{"_index":429,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":640,"title":{},"body":{"index.html":{}}}],["supported",{"_index":122,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":42,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":67,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":316,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":317,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":306,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:31",{"_index":515,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:32",{"_index":323,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:47",{"_index":324,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:49",{"_index":517,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:56",{"_index":326,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:58",{"_index":518,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:67",{"_index":329,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:68",{"_index":520,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher/language",{"_index":41,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":46,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":307,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":138,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["temporary",{"_index":397,"title":{},"body":{"injectables/ResumeService.html":{}}}],["test",{"_index":628,"title":{},"body":{"index.html":{}}}],["testing",{"_index":635,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":632,"title":{},"body":{"index.html":{}}}],["tests",{"_index":625,"title":{},"body":{"index.html":{}}}],["theme",{"_index":68,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":444,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":480,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":482,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":487,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":489,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":503,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["theme.geticon",{"_index":529,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getid",{"_index":530,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":468,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":451,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":449,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":28,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":431,"title":{},"body":{"classes/Theme.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":289,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":498,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":155,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage().getcode",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.set(lang",{"_index":297,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentresume",{"_index":414,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getfilepath",{"_index":421,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getname",{"_index":423,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currenttheme",{"_index":499,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":496,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":507,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":506,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.filepath",{"_index":372,"title":{},"body":{"classes/Resume.html":{}}}],["this.flag",{"_index":156,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":448,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":153,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":524,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.languagecode",{"_index":371,"title":{},"body":{"classes/Resume.html":{}}}],["this.languages",{"_index":290,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":291,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":280,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":341,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.currentlanguagesignal().getname",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":339,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getcode",{"_index":413,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.languageservice.getlanguages",{"_index":340,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":154,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.resumes.find(resume",{"_index":415,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumes[0",{"_index":417,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumeservice.downloadresume",{"_index":113,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["this.themes",{"_index":500,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":502,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":479,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":528,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":526,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().geticon",{"_index":525,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":527,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":304,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":283,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":303,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":285,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage().getcode",{"_index":301,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":474,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":607,"title":{},"body":{"index.html":{}}}],["track",{"_index":342,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":54,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{}}}],["translate/core",{"_index":38,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["translate/http",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/ThemeSwitcher.html":{}}}],["translateservice",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["triggers",{"_index":395,"title":{},"body":{"injectables/ResumeService.html":{}}}],["true",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tslib",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":101,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":76,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":136,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":624,"title":{},"body":{"index.html":{}}}],["update",{"_index":296,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["usage",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["use",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":103,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":310,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["user's",{"_index":83,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["using",{"_index":396,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":653,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":81,"title":{},"body":{"components/DownloadResumeButton.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":379,"title":{},"body":{"injectables/ResumeService.html":{}}}],["visit",{"_index":647,"title":{},"body":{"index.html":{}}}],["void",{"_index":109,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":601,"title":{},"body":{"index.html":{}}}],["window",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["without",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["zone.js",{"_index":582,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                                DownloadResumeButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\nimport { DownloadResumeButton } from \"./shared/components/download-resume-button/download-resume-button\";\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe,\n    TranslateDirective,\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher,\n    DownloadResumeButton\n],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadResumeButton.html":{"url":"components/DownloadResumeButton.html","title":"component - DownloadResumeButton","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DownloadResumeButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/download-resume-button/download-resume-button.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI button for downloading the resume PDF.\nWhen clicked, it downloads the version of the resume that matches the\nuser's current language preference.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-resume-button\n            \n\n\n            \n                imports\n                \n                            MatButton\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-resume-button.html\n            \n\n\n\n            \n                styleUrl\n                ./download-resume-button.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeService: ResumeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadResumeButton.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        resumeService\n                                                  \n                                                        \n                                                                        ResumeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used internally to handle the resume download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestResume\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:35\n                        \n                    \n\n\n            \n                \n                        Initiates the download of the resume PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ResumeService } from '../../../core/resume/resume.service';\nimport { MatButton } from '@angular/material/button';\nimport { TranslatePipe } from \"@ngx-translate/core\";\n\n/**\n * Component that provides a UI button for downloading the resume PDF.\n * \n * When clicked, it downloads the version of the resume that matches the \n * user's current language preference.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-download-resume-button',\n  imports: [MatButton, TranslatePipe],\n  templateUrl: './download-resume-button.html',\n  styleUrl: './download-resume-button.scss'\n})\nexport class DownloadResumeButton {\n\n  /**\n   * Creates an instance of DownloadResumeButton.\n   * \n   * @param {ResumeService} resumeService Used internally to handle the resume download.\n   */\n  constructor(private resumeService: ResumeService) {}\n\n  /**\n   * Initiates the download of the resume PDF.\n   * \n   * @returns {void}\n   */\n  public requestResume(): void {\n    this.resumeService.downloadResume();\n  }\n}\n    \n\n    \n        \n{{ 'app.shared.download-resume-button' | translate }}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'app.shared.download-resume-button\\' | translate }}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadResumeButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Languages Control\" (model domain)\nService to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentLanguage\n                            \n                            \n                                    Public\n                                    Readonly\n                                currentLanguageSignal\n                            \n                            \n                                    Private\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Language to apply. An instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:96\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:115\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.languages[0])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:47\n                        \n                    \n\n            \n                \n                    Signal holding the currently active language as a Language object.\nThis replaces the previous non-reactive property, enabling automatic\nUI updates in any component that subscribes to it.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentLanguageSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentLanguage\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:64\n                        \n                    \n\n            \n                \n                    Read-only reference to the currentLanguage signal.\nExposed for use in components so they can subscribe reactively to\nlanguage changes without directly modifying the signal's value.\nExample usage in a component:\nExample :public label = computed(() => this.languageService.currentLanguageSignal().getName());\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Control Object: \"Languages Control\" (model domain)\n * \n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @private\n   * @type {Language[]}\n   */\n  private languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * Signal holding the currently active language as a `Language` object.\n   *\n   * This replaces the previous non-reactive property, enabling automatic\n   * UI updates in any component that subscribes to it.\n   *\n   * @private\n   * @type {Signal}\n   */\n  private currentLanguage = signal(this.languages[0]);\n\n  /**\n   * Read-only reference to the `currentLanguage` signal.\n   *\n   * Exposed for use in components so they can subscribe reactively to\n   * language changes without directly modifying the signal's value.\n   *\n   * Example usage in a component:\n   * ```ts\n   * public label = computed(() => this.languageService.currentLanguageSignal().getName());\n   * ```\n   *\n   * @public\n   * @readonly\n   * @type {Signal}\n   */\n  public readonly currentLanguageSignal = this.currentLanguage;\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage().getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage().getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 2: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 3: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage();\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - The new `Language` to apply. An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage() === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage.set(lang);\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage().getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage().getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                getLanguageList\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available languages from the service.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                An array of Language objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.languageService.currentLanguageSignal().getName())\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:32\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\nAutomatically updates when the language changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * Automatically updates when the language changes.\n   * @protected\n   * @type {Signal}\n   */\n  protected label = computed(() => this.languageService.currentLanguageSignal().getName());\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Gets the full list of available languages from the service.\n   *\n   * @returns {Language[]} An array of `Language` objects.\n   */\n  public getLanguageList(): Language[] {\n    return this.languageService.getLanguages();\n  }\n\n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label() }}\n\n\n\n  @for (lang of getLanguageList(); track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label() }}  @for (lang of getLanguageList(); track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Resume\" (model domain)\nThis class models the properties of a resume, including its ID, name,\nlanguage code, and file path. It provides public getters to access\nthis information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                languageCode\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFilePath\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLanguageCode\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, languageCode: string, filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.model.ts:43\n                            \n                        \n\n                \n                    \n                            Creates a new Resume instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier for the resume.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Human-readable name for the resume.\n\n                                                        \n                                                \n                                                \n                                                        languageCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language code of the resume (ISO format).\n\n                                                        \n                                                \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to the PDF file for download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:43\n                        \n                    \n\n            \n                \n                    Path to the PDF file for this resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:19\n                        \n                    \n\n            \n                \n                    Unique identifier for the resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:35\n                        \n                    \n\n            \n                \n                    Language code associated with the resume (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:27\n                        \n                    \n\n            \n                \n                    Display name of the resume.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:92\n                        \n                    \n\n\n            \n                \n                        Gets the file path to the resume PDF.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The file path to the PDF.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the resume.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The resume's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the language code of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en', 'es').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:74\n                        \n                    \n\n\n            \n                \n                        Gets the name of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The resume's display name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Resume {\n  \n  /**\n   * Unique identifier for the resume.\n   * \n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code associated with the resume (e.g., 'en', 'es').\n   * \n   * @private\n   * @type {string}\n   */\n  private languageCode: string;\n\n  /**\n   * Path to the PDF file for this resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private filePath: string;\n\n  /**\n   * Creates a new Resume instance.\n   * \n   * @param {number} id Unique identifier for the resume.\n   * @param {string} name Human-readable name for the resume.\n   * @param {string} languageCode Language code of the resume (ISO format).\n   * @param {string} filePath Path to the PDF file for download.\n   */\n  constructor(id: number, name: string, languageCode: string, filePath: string) {\n    this.id = id;\n    this.name = name;\n    this.languageCode = languageCode;\n    this.filePath = filePath;\n  }\n\n  /**\n   * Gets the unique ID of the resume.\n   * \n   * @returns {number} The resume's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the name of the resume.\n   * \n   * @returns {string} The resume's display name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the language code of the resume.\n   * \n   * @returns {string} The language code (e.g., 'en', 'es').\n   */\n  public getLanguageCode(): string {\n    return this.languageCode;\n  }\n\n  /**\n   * Gets the file path to the resume PDF.\n   * \n   * @returns {string} The file path to the PDF.\n   */\n  public getFilePath(): string {\n    return this.filePath;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumeService.html":{"url":"injectables/ResumeService.html","title":"injectable - ResumeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Resumes Control\" (model domain)\nService for handling multilingual resume file access and downloads.\nThis service provides logic to manage multiple versions of a resume\nin different languages. It integrates with the LanguageService to\nserve the resume matching the user's current language.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentResume\n                            \n                            \n                                    Private\n                                resumes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.service.ts:39\n                            \n                        \n\n                \n                    \n                            Constructs the ResumeService.\nInitializes the current resume based on the language code provided by\nthe LanguageService. Falls back to the first resume if no match is found.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that provides the current language code.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadResume\n                        \n                    \n                \n            \n            \n                \ndownloadResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Downloads the resume PDF corresponding to the user's current language.\nThis method re-checks the user's current language, selects the matching\nresume, and triggers a download using a temporary anchor element.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentResume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Resume\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:39\n                        \n                    \n\n            \n                \n                    The resume currently selected based on the user's language preference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resumes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:28\n                        \n                    \n\n            \n                \n                    Array of available resumes, each associated with a language code.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resume } from './resume.model';\nimport { LanguageService } from '../language/language.service';\n\n/**\n * Control Object: \"Resumes Control\" (model domain)\n *\n * Service for handling multilingual resume file access and downloads.\n * \n * This service provides logic to manage multiple versions of a resume\n * in different languages. It integrates with the LanguageService to \n * serve the resume matching the user's current language.\n *\n * @export\n * @class ResumeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  /**\n   * Array of available resumes, each associated with a language code.\n   * \n   * @private\n   * @type {Resume[]}\n   */\n  private resumes = [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ];\n\n  /**\n   * The resume currently selected based on the user's language preference.\n   * \n   * @private\n   * @type {Resume}\n   */\n  private currentResume: Resume;\n\n  /**\n   * Constructs the ResumeService.\n   * \n   * Initializes the current resume based on the language code provided by\n   * the LanguageService. Falls back to the first resume if no match is found.\n   * \n   * @param {LanguageService} languageService Service that provides the current language code.\n   */\n  constructor(private languageService: LanguageService) { \n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n  }\n\n  /**\n   * Downloads the resume PDF corresponding to the user's current language.\n   * \n   * This method re-checks the user's current language, selects the matching\n   * resume, and triggers a download using a temporary anchor element.\n   * \n   * @returns {void}\n   */\n  downloadResume(): void {\n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n    const link = document.createElement('a');\n    link.href = this.currentResume.getFilePath(); // Path to your PDF file\n    link.download = this.currentResume.getName(); // Name of the downloaded file\n    link.click();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Theme\" (model domain)\nRepresents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:35\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (Material icon name or emoji).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:28\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:35\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:14\n                        \n                    \n\n            \n                \n                    Unique identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:21\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:72\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n   /**\n   * Unique identifier for the theme.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   * @private\n   * @type {string}\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Themes Control\" (model domain)\nService to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:45\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:45\n                        \n                    \n\n            \n                \n                    The currently active theme as a Theme object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:32\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Themes Control\" (model domain),\nwhich holds a list of available themes as Entity Objects \"Theme\" (model domain).\nList of available themes for the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Control Object: \"Themes Control\" (model domain)\n * \n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * The attribute of the Control Object \"Themes Control\" (model domain),\n   * which holds a list of available themes as Entity Objects \"Theme\" (model domain).\n   *\n   * List of available themes for the application.\n   * \n   * @private\n   * @type {Theme[]}\n   * \n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme as a Theme object.\n   *\n   * @private\n   * @type {Theme}\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns {Theme[]} A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param {string} code - The code of the theme to retrieve.\n   * @returns {Theme} The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   *\n   * @param {Theme} theme - The new `Theme` to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's themes.\nDisplays the current theme and allows the user to select a different one\nfrom the list of available themes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:58\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:68\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n/**\n * Component that provides a UI for switching the application's themes.\n * \n * Displays the current theme and allows the user to select a different one\n * from the list of available themes.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, TranslatePipe],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param {ThemeService} themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getIcon();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns {Theme[]} An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param {Theme} theme The selected theme.\n   * @returns {void}\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getIcon();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n\n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ 'app.shared.theme.' + theme.getCode() | translate }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ \\'app.shared.theme.\\' + theme.getCode() | translate }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.model.ts\n            \n            class\n            Resume\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.service.ts\n            \n            injectable\n            ResumeService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/download-resume-button/download-resume-button.ts\n            \n            component\n            DownloadResumeButton\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
