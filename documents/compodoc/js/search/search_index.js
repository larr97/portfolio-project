var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.022,1,0.595]],["body/components/App.html",[0,0.04,1,1.194,2,0.856,3,0.421,4,0.355,5,0.93,6,0.827,7,0.93,8,0.355,9,2.543,10,0.733,11,2.972,12,2.319,13,4.126,14,4.126,15,4.126,16,2.865,17,4.126,18,4.126,19,0.827,20,1.684,21,1.23,22,4.625,23,2.458,24,4.625,25,1.158,26,1.158,27,3.773,28,1.23,29,4.126,30,1.23,31,4.126,32,1.114,33,0.045,34,0.567,35,2.193,36,3.118,37,2.165,38,1.379,39,1.469,40,3.118,41,3.118,42,2.165,43,0.558,44,0.177,45,1.088,46,1.088,47,1.158,48,1.088,49,0.93,50,1.23,51,1.095,52,0.93,53,1.468,54,0.93,55,0.558,56,0.93,57,0.93,58,0.733,59,0.93,60,0.93,61,0.733,62,0.733,63,0.567,64,0.93,65,0.93,66,0.421,67,0.93,68,0.733,69,0.827,70,0.93,71,0.93,72,0.567,73,0.827,74,0.93,75,0.031,76,0.031]],["title/components/Blog.html",[0,0.022,47,0.674]],["body/components/Blog.html",[0,0.037,1,1.193,2,0.907,3,0.461,4,0.388,5,1.016,6,0.904,7,1.016,8,0.388,19,0.904,20,1.706,21,1.304,23,2.566,25,0.802,26,0.802,27,3.939,28,1.304,30,1.304,32,1.057,33,0.045,34,0.619,35,1.811,38,1.016,39,1.605,43,0.461,44,0.194,45,0.802,46,0.802,47,1.319,48,0.802,49,1.016,50,1.304,51,1.16,52,1.016,53,1.519,54,1.016,55,0.591,56,1.016,57,1.016,58,0.802,59,1.016,60,1.016,61,0.802,62,0.802,63,0.619,64,1.016,65,1.016,66,0.461,67,1.016,68,0.802,69,0.904,70,1.016,71,1.016,72,0.619,73,0.904,74,1.016,75,0.033,76,0.033,77,2.78,78,3.939,79,4.373,80,4.373,81,2.78,82,2.324,83,4.373,84,1.637,85,3.567,86,3.567,87,3.567]],["title/components/BlogPost.html",[0,0.022,58,0.674]],["body/components/BlogPost.html",[0,0.037,1,1.199,2,0.928,3,0.477,4,0.402,5,1.053,6,0.937,7,1.053,8,0.402,19,0.937,20,1.715,21,1.053,25,0.831,26,0.831,28,1.333,30,1.333,32,0.733,33,0.044,34,0.642,38,1.053,43,0.477,44,0.201,45,0.831,46,0.831,47,1.353,48,0.831,49,1.053,50,1.333,51,1.187,52,1.053,53,1.539,54,1.053,55,0.604,56,1.053,57,1.053,58,1.214,59,1.053,60,1.053,61,0.831,62,0.831,63,0.642,64,1.053,65,1.053,66,0.477,67,1.053,68,0.831,69,0.937,70,1.053,71,1.053,72,0.642,73,0.937,74,1.053,75,0.034,76,0.034,82,1.876,87,4.438,88,2.88,89,2.88,90,2.88,91,4.472,92,4.472,93,3.53,94,3.53]],["title/components/Docs.html",[0,0.022,48,0.674]],["body/components/Docs.html",[0,0.038,1,1.203,2,0.944,3,0.49,4,0.413,5,1.081,6,0.962,7,1.081,8,0.413,19,0.962,20,1.721,21,1.081,25,0.853,26,0.853,28,1.356,30,1.356,32,0.752,33,0.044,34,0.659,38,1.081,43,0.49,44,0.206,45,0.853,46,0.853,47,1.07,48,1.322,49,1.081,50,1.356,51,1.207,52,1.081,53,1.554,54,1.081,55,0.615,56,1.081,57,1.081,58,0.853,59,1.081,60,1.081,61,0.853,62,0.853,63,0.659,64,1.081,65,1.081,66,0.49,67,1.081,68,0.853,69,0.962,70,1.081,71,1.081,72,0.659,73,0.962,74,1.081,75,0.035,76,0.035,82,2.417,95,2.958,96,4.548,97,4.548]],["title/components/DownloadResumeButton.html",[0,0.022,61,0.674]],["body/components/DownloadResumeButton.html",[0,0.038,1,1.155,2,0.78,3,0.367,4,0.309,5,0.809,6,0.72,7,0.809,8,0.309,10,0.884,19,0.72,20,1.647,21,1.12,25,0.639,26,0.639,28,1.12,30,1.12,32,0.965,33,0.045,34,0.493,38,0.809,39,1.279,43,0.508,44,0.154,45,0.639,46,0.639,47,0.884,48,0.639,49,0.809,50,1.12,51,0.997,52,0.809,53,1.386,54,0.809,55,0.582,56,0.809,57,0.809,58,0.639,59,0.809,60,0.809,61,1.188,62,1.289,63,1.052,64,0.809,65,0.809,66,0.582,67,0.809,68,0.639,69,0.72,70,0.809,71,0.809,72,0.493,73,0.72,74,0.809,75,0.029,76,0.029,98,3.515,99,2.992,100,2.214,101,1.996,102,1.996,103,3.507,104,3.757,105,3.229,106,3.757,107,3.065,108,2.609,109,3.065,110,2.268,111,1.576,112,3.065,113,4.308,114,2.992,115,3.757,116,3.757,117,0.563,118,1.12,119,1.613,120,4.65,121,0.72,122,2.714,123,3.186,124,0.997,125,2.714,126,1.77,127,1.406,128,0.72,129,0.639,130,0.809,131,1.996,132,3.757,133,3.757,134,2.714,135,3.757,136,1.12,137,1.807,138,2.714,139,1.442,140,1.442,141,0.809,142,1.279,143,2.714,144,3.757,145,2.268]],["title/components/Home.html",[0,0.022,45,0.674]],["body/components/Home.html",[0,0.037,1,1.193,2,0.905,3,0.459,4,0.387,5,1.012,6,0.901,7,1.012,8,0.387,19,0.901,20,1.705,21,1.301,25,0.799,26,0.799,28,1.301,30,1.301,32,1,33,0.045,34,0.617,38,1.012,43,0.459,44,0.193,45,1.267,46,0.799,47,1.026,48,0.799,49,1.012,50,1.301,51,1.158,52,1.012,53,1.517,54,1.012,55,0.59,56,1.012,57,1.012,58,0.799,59,1.012,60,1.012,61,1.197,62,0.799,63,0.876,64,1.012,65,1.012,66,0.459,67,1.012,68,0.799,69,0.901,70,1.012,71,1.012,72,0.617,73,0.901,74,1.012,75,0.033,76,0.033,99,2.358,103,2.358,114,3.347,139,1.804,140,1.804,145,3.071,146,2.77,147,4.362,148,4.362,149,3.395,150,4.362,151,4.362]],["title/classes/Language.html",[44,0.163,66,0.387]],["body/classes/Language.html",[3,0.325,4,0.274,8,0.274,10,0.811,12,1.132,33,0.045,43,0.325,44,0.137,55,0.756,66,0.789,75,0.026,76,0.026,84,2.083,117,0.499,118,1.028,119,2.024,121,0.638,124,1.382,126,1.625,127,1.291,128,0.638,129,1.226,130,0.717,136,1.525,141,1.314,152,1.451,153,1.961,154,1.132,155,1.008,156,1.132,157,1.132,158,1.669,159,1.961,160,0.915,161,2.335,162,5.565,163,3.671,164,3.594,165,4.406,166,3.059,167,3.059,168,2.394,169,3.671,170,2.434,171,3.448,172,2.58,173,2.341,174,3.961,175,2.403,176,2.66,177,2.66,178,2.082,179,2.813,180,3.594,181,2.403,182,2.403,183,1.832,184,2.403,185,2.146,186,2.403,187,2.403,188,2.403,189,2.394,190,2.394,191,2.813,192,3.448,193,1.848]],["title/injectables/LanguageService.html",[194,1.203,195,1.523]],["body/injectables/LanguageService.html",[0,0.018,2,0.498,3,0.202,4,0.393,8,0.17,10,0.811,11,0.903,12,1.624,32,0.715,33,0.045,34,0.272,43,0.325,44,0.137,55,0.407,66,0.788,75,0.018,76,0.018,84,1.746,102,1.276,109,1.22,110,1.45,111,1.263,117,0.31,118,0.716,119,1.95,121,0.397,124,1.169,126,1.131,127,1.509,128,0.799,129,0.997,130,0.897,136,1.313,137,1.263,139,2.251,140,0.794,141,1.028,142,0.704,145,2.744,154,1.899,155,2.098,156,2.075,157,2.245,158,1.668,159,2.811,160,0.637,161,1.907,170,1.446,176,1.45,177,2.081,178,2.081,185,1.446,193,1.446,194,1.007,195,2.006,196,0.903,197,1.22,198,3.058,199,3.472,200,2.689,201,1.45,202,2.402,203,1.959,204,1.959,205,2.34,206,1.778,207,1.959,208,2.811,209,3.593,210,1.959,211,4.236,212,3.288,213,5.061,214,3.775,215,3.446,216,3.01,217,3.01,218,3.446,219,2.402,220,3.446,221,1.495,222,3.775,223,3.446,224,2.402,225,1.276,226,3.446,227,3.238,228,3.079,229,3.01,230,3.775,231,1.45,232,3.01,233,2.402,234,1.495,235,2.081,236,1.668,237,2.434,238,1.668,239,1.668,240,2.402,241,2.621,242,1.648,243,2.455,244,3.446,245,2.09,246,1.959,247,1.495,248,1.831,249,2.402,250,1.495,251,1.959,252,2.402,253,1.668,254,1.495,255,1.45,256,2.402,257,1.691,258,1.778,259,2.402,260,1.495,261,2.941,262,2.402,263,2.402,264,2.402,265,2.402,266,1.959,267,2.402,268,2.402,269,2.402,270,1.959,271,3.446,272,2.402,273,1.668,274,2.402,275,2.402,276,2.402,277,2.402,278,2.402,279,2.402,280,2.402,281,1.038,282,1.668,283,1.959,284,1.959,285,2.402,286,2.402,287,2.402,288,1.495,289,1.959,290,1.668,291,1.45,292,1.668,293,2.402,294,1.22,295,1.817,296,1.038,297,1.495,298,4.404,299,2.402,300,2.402,301,3.01,302,2.402,303,3.01,304,1.22,305,1.959,306,1.959,307,1.959,308,1.959,309,1.495,310,2.402,311,2.402,312,2.402,313,1.495,314,1.495,315,1.495,316,2.402,317,1.495,318,1.495,319,1.495,320,1.495,321,1.959,322,1.495,323,1.038,324,1.495,325,1.495,326,1.495,327,1.495,328,0.794,329,2.402,330,2.402,331,1.038,332,1.495,333,1.22,334,1.495,335,1.495,336,1.495,337,1.495,338,1.495,339,1.495]],["title/components/LanguageSwitcher.html",[0,0.022,25,0.674]],["body/components/LanguageSwitcher.html",[0,0.035,1,1.104,2,0.648,3,0.284,4,0.239,5,0.626,6,0.557,7,0.626,8,0.239,10,0.878,19,0.557,20,1.57,21,0.932,23,1.983,25,1.089,26,0.494,28,0.932,30,0.932,32,0.995,33,0.045,34,0.382,37,3.215,38,1.113,39,0.99,43,0.422,44,0.119,45,0.494,46,0.494,47,0.735,48,0.494,49,0.626,50,0.932,51,0.829,52,0.626,53,1.232,54,0.626,55,0.626,56,0.626,57,0.626,58,0.494,59,0.626,60,0.626,61,0.494,62,0.494,63,0.382,64,0.626,65,0.626,66,0.785,67,0.626,68,0.494,69,0.557,70,0.626,71,0.626,72,0.382,73,0.557,74,0.626,75,0.024,76,0.024,101,1.661,102,2.196,111,1.734,117,0.436,118,0.932,119,1.885,121,0.557,124,1.172,126,1.472,127,1.17,128,0.829,129,0.878,130,0.932,136,1.469,137,1.565,141,0.932,142,0.99,154,1.472,160,0.829,185,1.311,193,1.311,195,2.618,199,3.421,200,2.461,201,1.887,205,2.347,206,2.182,235,1.887,236,2.17,237,2.796,245,2.87,248,2.196,255,1.887,257,0.881,258,0.99,261,2.17,282,3.496,283,3.044,284,2.549,291,1.887,328,1.661,340,3.777,341,1.459,342,2.549,343,1.887,344,2.549,345,2.549,346,2.549,347,2.17,348,3.044,349,3.044,350,3.732,351,2.549,352,2.549,353,3.371,354,4.133,355,4.63,356,3.125,357,1.714,358,3.125,359,2.101,360,2.975,361,2.101,362,2.549,363,3.125,364,2.101,365,2.549,366,3.125,367,3.125,368,2.17,369,2.101,370,2.101,371,1.714,372,1.714,373,2.101,374,2.101,375,2.101,376,2.101,377,2.549,378,3.125,379,3.125,380,3.125,381,2.549]],["title/components/ProjectDetail.html",[0,0.022,68,0.674]],["body/components/ProjectDetail.html",[0,0.039,1,1.153,2,0.774,3,0.363,4,0.306,5,1.45,6,0.713,7,0.801,8,0.306,10,0.632,19,0.713,20,1.645,21,0.801,25,0.632,26,0.632,28,1.112,30,1.112,32,0.774,33,0.045,34,0.488,35,1.428,38,0.801,43,0.363,44,0.153,45,0.632,46,0.632,47,0.878,48,0.632,49,0.801,50,1.112,51,0.99,52,0.801,53,1.38,54,0.801,55,0.68,56,0.801,57,0.801,58,0.632,59,0.801,60,0.801,61,0.632,62,0.632,63,0.488,64,0.801,65,0.801,66,0.363,67,0.801,68,1.238,69,1.492,70,0.801,71,0.801,72,0.488,73,0.713,74,0.801,75,0.028,76,0.028,82,1.982,111,1.565,117,0.558,121,1.137,124,1.137,128,1.291,160,0.99,161,1.798,225,1.982,235,2.795,237,2.252,241,2.59,257,1.565,258,2.181,261,3.585,266,3.777,270,3.043,290,2.59,331,2.59,343,2.252,368,2.59,382,3.777,383,3.777,384,2.192,385,3.043,386,3.043,387,3.731,388,4.63,389,5.345,390,3.731,391,3.777,392,3.731,393,3.731,394,5.034,395,5.163,396,3.731,397,3.731,398,3.043,399,2.976,400,3.731,401,2.687,402,3.731,403,2.192,404,2.687,405,2.687]],["title/components/Projects.html",[0,0.022,46,0.674]],["body/components/Projects.html",[0,0.039,1,1.152,2,0.77,3,0.361,4,0.304,5,0.795,6,0.708,7,0.795,8,0.304,10,1.004,19,0.708,20,1.643,21,1.107,23,2.268,25,0.628,26,0.628,28,1.107,30,1.107,32,0.958,33,0.045,34,0.485,35,1.418,38,0.795,39,1.257,43,0.361,44,0.152,45,0.628,46,1.314,47,0.873,48,0.628,49,0.795,50,1.107,51,0.985,52,0.795,53,1.376,54,0.795,55,0.696,56,0.795,57,0.795,58,0.628,59,0.795,60,0.795,61,0.628,62,0.628,63,0.485,64,0.795,65,0.795,66,0.361,67,0.795,68,0.628,69,1.449,70,0.795,71,0.795,72,0.485,73,0.708,74,0.795,75,0.028,76,0.028,78,3.482,81,2.176,82,1.972,85,3.028,86,3.028,103,2.578,117,0.554,118,1.107,121,0.708,124,0.985,126,1.749,127,1.39,128,0.985,129,0.873,130,1.107,131,1.972,136,0.795,137,1.119,141,1.107,142,1.257,170,1.791,172,1.972,173,1.972,183,1.972,231,2.241,253,2.578,281,2.578,292,2.578,343,2.241,385,3.028,386,3.028,391,3.765,406,2.176,407,3.712,408,3.712,409,3.028,410,3.712,411,3.712,412,5.023,413,3.765,414,3.712,415,3.712,416,3.712,417,2.668,418,5.337,419,2.668,420,3.712,421,3.712,422,2.668,423,3.712,424,3.712,425,3.712,426,2.668,427,3.712,428,3.712,429,3.712,430,3.028]],["title/classes/Resume.html",[44,0.163,63,0.521]],["body/classes/Resume.html",[3,0.307,4,0.259,8,0.595,10,0.78,16,1.579,33,0.045,43,0.307,44,0.188,55,0.754,62,0.78,63,1.046,66,0.695,75,0.025,76,0.025,84,1.924,101,1.209,105,3.5,117,0.472,118,0.988,119,2.022,121,0.604,124,1.364,126,1.561,127,1.24,128,0.604,129,1.209,130,0.678,136,1.503,141,1.28,152,1.373,154,1.072,155,0.954,156,1.072,157,1.072,160,1.037,161,2.316,163,3.674,166,2.982,167,2.982,168,2.301,169,3.626,170,2.423,172,2.532,173,2.282,176,2.593,177,2.593,178,2.593,183,2.282,185,2.114,189,2.301,190,2.301,193,1.802,242,1.108,399,1.579,431,1.855,432,2.275,433,3.569,434,2.275,435,1.855,436,5.04,437,5.04,438,4.294,439,4.294,440,3.313,441,2.703,442,2.703,443,3.313,444,3.313,445,2.275,446,2.275,447,2.301,448,2.275,449,2.275,450,2.275,451,4.294,452,2.275,453,2.275,454,3.313,455,3.313]],["title/injectables/ResumeService.html",[123,1.731,194,1.203]],["body/injectables/ResumeService.html",[3,0.311,4,0.262,8,0.522,10,0.786,11,1.388,32,0.816,33,0.045,34,0.418,43,0.451,44,0.19,51,0.886,55,0.451,62,0.786,63,1.034,66,0.747,75,0.025,76,0.036,84,1.79,101,2.294,105,2.731,107,3.521,110,3.052,111,2.249,112,2.725,117,0.477,118,0.996,121,0.61,123,2.768,124,1.145,128,0.61,129,1.079,130,0.686,136,0.996,137,1.65,141,0.686,142,1.083,155,1.401,156,1.574,157,1.574,160,0.886,161,2.121,177,2.017,178,2.017,194,1.401,195,2.849,196,1.388,198,2.997,199,2.319,200,2.541,201,2.017,206,1.574,225,1.775,228,3.521,242,1.443,245,2.997,248,1.775,253,2.319,255,2.017,257,0.965,258,1.083,292,2.319,296,1.597,304,2.725,323,2.319,347,2.319,357,1.876,360,2.017,399,2.319,433,1.597,447,2.319,456,1.876,457,4.935,458,3.34,459,3.34,460,2.725,461,3.34,462,3.34,463,3.34,464,3.34,465,3.933,466,4.317,467,3.34,468,2.319,469,3.34,470,3.34,471,3.34,472,2.725,473,2.725,474,2.3,475,3.34,476,3.34,477,3.34,478,3.34,479,2.319,480,3.34,481,3.34,482,3.34,483,4.317,484,3.34,485,3.34,486,3.34,487,3.34,488,3.34,489,3.34,490,3.34,491,3.34,492,2.3,493,2.3,494,2.3,495,3.933,496,3.34,497,3.34,498,3.34,499,3.34,500,3.34,501,2.3,502,2.3,503,2.3,504,2.3,505,2.3,506,2.3,507,2.3,508,2.3]],["title/classes/Theme.html",[44,0.163,72,0.521]],["body/classes/Theme.html",[3,0.306,4,0.258,8,0.258,10,0.776,12,1.065,19,0.6,33,0.045,43,0.306,44,0.129,55,0.77,72,1.049,75,0.025,76,0.025,84,2.076,102,1.201,117,0.469,118,0.984,119,2,121,0.6,124,1.362,127,1.235,128,0.6,129,1.207,130,0.674,131,2.526,136,1.5,141,1.277,152,1.365,154,1.065,155,0.948,156,1.065,157,1.065,158,1.57,160,0.875,161,2.313,163,3.746,164,3.493,166,2.973,167,2.973,168,2.291,169,3.494,170,2.402,172,2.674,173,2.275,174,2.691,176,2.87,179,3.493,180,2.691,183,2.42,185,2.111,189,2.291,190,2.291,191,2.691,193,1.796,238,2.291,242,1.103,441,2.691,442,2.691,447,2.973,468,2.291,509,1.844,510,2.261,511,2.261,512,1.844,513,5.643,514,2.261,515,2.261,516,4.282,517,3.299,518,3.299,519,4.282,520,4.282,521,2.261,522,3.493,523,3.493,524,2.261,525,2.261,526,2.261,527,5.032,528,2.261,529,2.261,530,2.261,531,3.299]],["title/injectables/ThemeService.html",[194,1.203,532,1.731]],["body/injectables/ThemeService.html",[3,0.243,4,0.387,6,1.014,8,0.205,10,0.899,11,1.087,12,2.213,32,0.705,33,0.045,34,0.327,43,0.376,44,0.235,55,0.459,72,1.063,75,0.021,76,0.033,84,1.929,110,1.679,111,0.755,117,0.374,118,0.829,119,1.905,121,0.478,124,1.207,127,1.041,128,0.901,129,1.027,130,1.013,136,1.401,137,1.425,141,1.013,154,1.8,155,2.134,156,2.213,157,2.32,160,0.738,161,2.022,170,1.831,172,1.478,185,1.603,193,1.603,194,1.167,196,1.087,198,3.262,200,2.03,201,1.679,203,3.116,204,2.268,205,2.617,206,2.455,207,2.268,208,2.268,209,3.71,210,2.268,212,3.933,225,1.478,227,3.03,235,1.679,238,1.931,239,2.359,242,1.675,243,2.268,246,2.771,248,2.319,251,2.268,257,1.167,258,1.31,273,1.931,289,2.268,290,1.931,291,1.679,296,1.25,305,2.268,306,2.268,307,2.268,308,2.268,323,1.931,328,0.957,331,1.25,360,2.306,398,2.268,403,1.469,472,2.268,473,2.268,522,3.832,523,3.832,532,2.493,533,1.469,534,4.363,535,3.397,536,3.82,537,3.82,538,2.781,539,3.82,540,1.801,541,2.781,542,2.781,543,2.781,544,2.268,545,2.781,546,2.781,547,1.801,548,2.781,549,2.781,550,3.397,551,1.801,552,2.781,553,1.801,554,2.781,555,2.781,556,2.781,557,2.781,558,2.781,559,1.801,560,2.781,561,2.781,562,2.781,563,2.781,564,2.781,565,3.82,566,3.82,567,3.82,568,2.781,569,2.781,570,2.781,571,2.781,572,2.781,573,1.801,574,1.469,575,1.801,576,2.781,577,2.781,578,1.801,579,1.801,580,3.397,581,1.801,582,1.801,583,1.801,584,2.268,585,1.801,586,1.801,587,1.801,588,1.801,589,1.801,590,1.801]],["title/components/ThemeSwitcher.html",[0,0.022,26,0.674]],["body/components/ThemeSwitcher.html",[0,0.037,1,1.102,2,0.644,3,0.281,4,0.237,5,0.62,6,0.552,7,0.62,8,0.237,10,0.873,19,0.552,20,1.566,21,0.925,23,1.971,25,0.489,26,0.968,28,0.925,30,0.925,32,0.992,33,0.045,34,0.378,38,1.312,39,0.98,42,3.203,43,0.419,44,0.118,45,0.489,46,0.489,47,0.73,48,0.489,49,0.62,50,0.925,51,0.823,52,0.62,53,1.226,54,0.62,55,0.556,56,0.62,57,0.62,58,0.489,59,0.62,60,0.62,61,0.489,62,0.489,63,0.378,64,0.62,65,0.62,66,0.281,67,0.62,68,0.489,69,0.552,70,0.62,71,0.62,72,1.062,73,0.552,74,0.62,75,0.024,76,0.024,101,1.648,102,1.648,111,1.301,114,2.576,117,0.432,118,0.925,119,1.88,121,0.552,124,1.167,128,0.823,129,0.968,130,0.925,131,1.648,136,1.375,137,1.556,139,1.105,140,1.105,141,0.925,142,0.98,145,1.873,155,1.301,160,0.823,170,1.556,183,2.185,185,1.725,193,1.301,200,2.451,205,2.185,206,2.173,225,1.648,227,3.411,236,2.154,237,1.873,239,2.154,242,1.037,248,2.61,255,1.873,282,3.487,291,1.873,328,1.648,341,1.444,342,3.355,343,1.873,344,2.53,345,2.53,346,2.53,347,2.154,348,3.026,349,3.026,351,2.53,352,2.53,353,3.355,360,2.785,362,2.53,371,1.696,372,1.696,377,2.53,381,2.53,460,2.53,468,2.154,479,2.154,532,2.966,534,4.007,544,2.53,584,2.53,591,3.763,592,4.112,593,4.613,594,3.102,595,2.079,596,3.102,597,3.102,598,2.079,599,2.079,600,3.102,601,2.079,602,3.102,603,2.079,604,2.079,605,3.102,606,2.079,607,2.079,608,2.079,609,2.079,610,2.079,611,3.102,612,3.102]],["title/coverage.html",[613,3.182]],["body/coverage.html",[0,0.043,1,0.874,8,0.366,9,2.622,25,0.756,26,0.756,33,0.045,37,2.232,42,2.232,44,0.267,45,0.756,46,0.756,47,0.756,48,0.756,58,0.756,61,0.756,63,0.853,66,0.434,68,0.756,72,0.584,75,0.032,76,0.032,77,2.622,88,2.622,89,2.622,90,2.622,95,2.622,98,2.622,99,2.232,100,2.622,123,1.941,129,0.756,146,2.622,153,2.622,173,1.708,194,1.97,195,1.708,197,2.622,242,1.074,340,2.622,341,2.923,382,2.622,383,2.622,384,2.622,406,2.622,431,2.622,456,2.622,509,2.622,532,1.941,533,2.622,591,2.622,613,2.622,614,3.214,615,3.214,616,3.434,617,5.597,618,2.622,619,5.706,620,5.706,621,2.622,622,3.434,623,2.622,624,2.622,625,2.622,626,2.622,627,5.706,628,4.21,629,4.695,630,3.214,631,3.214,632,3.214,633,3.214,634,4.21,635,4.21,636,2.622,637,2.622,638,4.064,639,2.622,640,2.622,641,2.622,642,3.214,643,3.214]],["title/dependencies.html",[644,1.957,645,2.81]],["body/dependencies.html",[33,0.045,34,0.741,35,2.167,75,0.037,76,0.037,139,2.597,140,2.167,294,3.987,295,2.462,574,3.326,645,3.326,646,4.077,647,4.27,648,5.696,649,4.077,650,4.077,651,4.077,652,2.831,653,4.077,654,4.077,655,4.077,656,3.326,657,4.077,658,3.326,659,4.077,660,4.077,661,4.077,662,4.077,663,4.077,664,4.077,665,4.077]],["title/index.html",[117,0.498,666,2.4,667,2.4]],["body/index.html",[0,0.037,2,0.715,4,0.393,12,2.075,16,2.393,33,0.033,69,1.288,73,0.914,75,0.033,76,0.033,84,1.649,108,2.393,205,1.831,206,1.623,231,3.088,241,2.393,242,1.152,257,1.847,273,2.393,281,3.754,295,2.08,328,1.831,333,2.811,368,2.393,409,2.811,413,2.811,430,2.811,435,2.811,479,3.058,512,2.811,647,2.811,652,3.37,668,3.445,669,3.445,670,4.312,671,4.404,672,3.445,673,3.445,674,5.285,675,5.406,676,3.445,677,4.404,678,3.445,679,3.445,680,3.445,681,3.445,682,3.445,683,3.445,684,3.445,685,4.404,686,3.445,687,3.445,688,4.853,689,3.445,690,3.445,691,3.445,692,3.445,693,3.445,694,3.959,695,3.445,696,3.445,697,3.445,698,3.445,699,3.445,700,3.445,701,3.445,702,3.445,703,3.445,704,4.404,705,4.853,706,3.445,707,3.445,708,3.445,709,3.445,710,3.445,711,4.853,712,3.445,713,5.406,714,3.445,715,4.404,716,3.445,717,3.445,718,3.445,719,3.445,720,3.445,721,3.445,722,3.445,723,3.445,724,3.445,725,3.445,726,3.445,727,2.393]],["title/modules.html",[728,3.182]],["body/modules.html",[33,0.04,75,0.04,76,0.04,728,3.761]],["title/overview.html",[727,2.708]],["body/overview.html",[2,0.943,33,0.04,75,0.04,76,0.04,152,2.743,196,2.743,321,4.248,727,3.155,729,4.544]],["title/properties.html",[160,0.914,644,1.957]],["body/properties.html",[33,0.042,75,0.04,76,0.04,108,3.178,160,1.215,730,4.577]],["title/miscellaneous/variables.html",[731,1.957,732,2.81]],["body/miscellaneous/variables.html",[1,0.902,33,0.045,75,0.033,76,0.033,117,0.701,129,1.194,131,1.794,231,2.039,242,1.453,257,2.368,258,2.659,295,2.039,365,2.755,433,2.345,616,2.755,618,3.922,621,3.922,622,2.755,623,3.546,624,3.922,625,2.755,626,3.546,636,2.755,637,3.546,638,2.755,639,3.546,640,3.546,641,3.546,652,2.345,656,2.755,658,2.755,670,2.755,694,2.755,731,2.755,732,2.755,733,5.076,734,4.347,735,3.377,736,4.347,737,3.377,738,3.377,739,3.377,740,3.377,741,3.377,742,3.377,743,3.377,744,3.377,745,3.377,746,3.377,747,4.347,748,4.347,749,3.377,750,3.377,751,3.377,752,3.377,753,3.377,754,3.377,755,3.377,756,3.377,757,3.377,758,3.377,759,4.347,760,3.377,761,3.377,762,3.377,763,3.377,764,3.377,765,3.377,766,3.377,767,3.377,768,3.377,769,3.377,770,3.377,771,3.377,772,3.377]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":730,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":299,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":729,"title":{},"body":{"overview.html":{}}}],["10/10",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":312,"title":{},"body":{"injectables/LanguageService.html":{}}}],["2.3.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":647,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":321,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["3/3",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":335,"title":{},"body":{"injectables/LanguageService.html":{}}}],["4/4",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":337,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":399,"title":{},"body":{"components/ProjectDetail.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["activatedroute",{"_index":394,"title":{},"body":{"components/ProjectDetail.html":{}}}],["active",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":74,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":319,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":722,"title":{},"body":{"index.html":{}}}],["allows",{"_index":344,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":555,"title":{},"body":{"injectables/ThemeService.html":{}}}],["anchor",{"_index":481,"title":{},"body":{"injectables/ResumeService.html":{}}}],["angular",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{},"components/Projects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":574,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":39,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/card",{"_index":81,"title":{},"body":{"components/Blog.html":{},"components/Projects.html":{}}}],["angular/material/grid",{"_index":373,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":372,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":371,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":40,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":294,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":151,"title":{},"body":{"components/Home.html":{}}}],["app.html",{"_index":29,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.shared.download",{"_index":144,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["app.shared.theme",{"_index":612,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["app.title",{"_index":150,"title":{},"body":{"components/Home.html":{}}}],["appconfig",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["application's",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["applicationconfig",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":544,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["area",{"_index":411,"title":{},"body":{"components/Projects.html":{}}}],["array",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":697,"title":{},"body":{"index.html":{}}}],["associated",{"_index":447,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{}}}],["assumes",{"_index":554,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":289,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["australian",{"_index":427,"title":{},"body":{"components/Projects.html":{}}}],["automatic",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{}}}],["automatically",{"_index":368,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"index.html":{}}}],["available",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["back",{"_index":471,"title":{},"body":{"injectables/ResumeService.html":{}}}],["based",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["blog",{"_index":47,"title":{"components/Blog.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["blog'},{'name",{"_index":57,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["blog.html",{"_index":79,"title":{},"body":{"components/Blog.html":{}}}],["blog.scss",{"_index":80,"title":{},"body":{"components/Blog.html":{}}}],["blogpost",{"_index":58,"title":{"components/BlogPost.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["body",{"_index":548,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":572,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":295,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":694,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":695,"title":{},"body":{"index.html":{}}}],["button",{"_index":103,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/Projects.html":{}}}],["button'},{'name",{"_index":64,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["button.html",{"_index":115,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.scss",{"_index":116,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts",{"_index":100,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["button.ts:21",{"_index":125,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts:35",{"_index":134,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button/download",{"_index":99,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"coverage.html":{}}}],["calls",{"_index":322,"title":{},"body":{"injectables/LanguageService.html":{}}}],["card",{"_index":408,"title":{},"body":{"components/Projects.html":{}}}],["change",{"_index":329,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":536,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":546,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":300,"title":{},"body":{"injectables/LanguageService.html":{}}}],["checks",{"_index":476,"title":{},"body":{"injectables/ResumeService.html":{}}}],["choice",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":719,"title":{},"body":{"index.html":{}}}],["class",{"_index":44,"title":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":152,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":670,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["clickable",{"_index":410,"title":{},"body":{"components/Projects.html":{}}}],["clicked",{"_index":106,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["cloud",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":84,"title":{},"body":{"components/Blog.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":317,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":717,"title":{},"body":{"index.html":{}}}],["command",{"_index":711,"title":{},"body":{"index.html":{}}}],["compile",{"_index":696,"title":{},"body":{"index.html":{}}}],["complete",{"_index":690,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":54,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["computed",{"_index":283,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["config",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":560,"title":{},"body":{"injectables/ThemeService.html":{}}}],["const",{"_index":495,"title":{},"body":{"injectables/ResumeService.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":575,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":540,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":168,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":357,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["constructor(private",{"_index":142,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(resumeservice",{"_index":122,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["constructor(router",{"_index":417,"title":{},"body":{"components/Projects.html":{}}}],["constructor(themeservice",{"_index":595,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":468,"title":{},"body":{"injectables/ResumeService.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":566,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["core/language/language.model",{"_index":370,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":369,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/resume/resume.service",{"_index":138,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["core/theming/theme.model",{"_index":603,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":604,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{}}}],["coverage",{"_index":613,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":126,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{}}}],["current",{"_index":111,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currentlanguagesignal",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentresume",{"_index":465,"title":{},"body":{"injectables/ResumeService.html":{}}}],["currenttheme",{"_index":535,"title":{},"body":{"injectables/ThemeService.html":{}}}],["curriculum",{"_index":488,"title":{},"body":{"injectables/ResumeService.html":{}}}],["custom",{"_index":93,"title":{},"body":{"components/BlogPost.html":{}}}],["dark",{"_index":523,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":570,"title":{},"body":{"injectables/ThemeService.html":{}}}],["de",{"_index":489,"title":{},"body":{"injectables/ResumeService.html":{}}}],["default",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":124,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":545,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":645,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detail",{"_index":391,"title":{},"body":{"components/ProjectDetail.html":{},"components/Projects.html":{}}}],["detail'},{'name",{"_index":70,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["detail.html",{"_index":392,"title":{},"body":{"components/ProjectDetail.html":{}}}],["detail.scss",{"_index":393,"title":{},"body":{"components/ProjectDetail.html":{}}}],["detail.ts",{"_index":384,"title":{},"body":{"components/ProjectDetail.html":{},"coverage.html":{}}}],["detail.ts:22",{"_index":401,"title":{},"body":{"components/ProjectDetail.html":{}}}],["detail.ts:27",{"_index":396,"title":{},"body":{"components/ProjectDetail.html":{}}}],["detail/project",{"_index":383,"title":{},"body":{"components/ProjectDetail.html":{},"coverage.html":{}}}],["detailed",{"_index":724,"title":{},"body":{"index.html":{}}}],["details",{"_index":385,"title":{},"body":{"components/ProjectDetail.html":{},"components/Projects.html":{}}}],["dev",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":671,"title":{},"body":{"index.html":{}}}],["different",{"_index":347,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["directive",{"_index":52,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":73,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directly",{"_index":278,"title":{},"body":{"injectables/LanguageService.html":{}}}],["directory",{"_index":699,"title":{},"body":{"index.html":{}}}],["display",{"_index":183,"title":{},"body":{"classes/Language.html":{},"components/Projects.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":343,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":698,"title":{},"body":{"index.html":{}}}],["docs",{"_index":48,"title":{"components/Docs.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["docs'},{'name",{"_index":60,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["docs.html",{"_index":96,"title":{},"body":{"components/Docs.html":{}}}],["docs.scss",{"_index":97,"title":{},"body":{"components/Docs.html":{}}}],["document",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["document.createelement('a",{"_index":502,"title":{},"body":{"injectables/ResumeService.html":{}}}],["documentation",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":157,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["download",{"_index":62,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["downloaded",{"_index":507,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloading",{"_index":104,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["downloadresume",{"_index":466,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloadresumebutton",{"_index":61,"title":{"components/DownloadResumeButton.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["downloads",{"_index":107,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["during",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamically",{"_index":400,"title":{},"body":{"components/ProjectDetail.html":{}}}],["e.g",{"_index":176,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":714,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":716,"title":{},"body":{"index.html":{}}}],["each",{"_index":292,"title":{},"body":{"injectables/LanguageService.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{}}}],["el",{"_index":487,"title":{},"body":{"injectables/ResumeService.html":{}}}],["element",{"_index":51,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":179,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":381,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":177,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["enabling",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{}}}],["encapsulates",{"_index":511,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":713,"title":{},"body":{"index.html":{}}}],["english",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":154,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["es",{"_index":178,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["español",{"_index":287,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":281,"title":{},"body":{"injectables/LanguageService.html":{},"components/Projects.html":{},"index.html":{}}}],["execute",{"_index":706,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["exposed",{"_index":274,"title":{},"body":{"injectables/LanguageService.html":{}}}],["express",{"_index":658,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extracted",{"_index":402,"title":{},"body":{"components/ProjectDetail.html":{}}}],["fallback",{"_index":310,"title":{},"body":{"injectables/LanguageService.html":{}}}],["falls",{"_index":470,"title":{},"body":{"injectables/ResumeService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["filepath",{"_index":436,"title":{},"body":{"classes/Resume.html":{}}}],["files",{"_index":684,"title":{},"body":{"index.html":{}}}],["finds",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":304,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["flag",{"_index":162,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":563,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":710,"title":{},"body":{"index.html":{}}}],["format",{"_index":444,"title":{},"body":{"classes/Resume.html":{}}}],["found",{"_index":473,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["framework",{"_index":718,"title":{},"body":{"index.html":{}}}],["full",{"_index":362,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["functions",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gallery",{"_index":407,"title":{},"body":{"components/Projects.html":{}}}],["generate",{"_index":688,"title":{},"body":{"index.html":{}}}],["generated",{"_index":669,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":354,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":592,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":164,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":537,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getfilepath",{"_index":438,"title":{},"body":{"classes/Resume.html":{}}}],["getflag",{"_index":165,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":516,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":166,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagecode",{"_index":439,"title":{},"body":{"classes/Resume.html":{}}}],["getlanguagelist",{"_index":355,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getlanguages",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":167,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["gets",{"_index":185,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getters",{"_index":434,"title":{},"body":{"classes/Resume.html":{}}}],["getthemebycode",{"_index":538,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":552,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":593,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":539,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":666,"title":{"index.html":{}},"body":{}}],["gotodetail",{"_index":416,"title":{},"body":{"components/Projects.html":{}}}],["gotodetail(name",{"_index":421,"title":{},"body":{"components/Projects.html":{}}}],["group",{"_index":86,"title":{},"body":{"components/Blog.html":{},"components/Projects.html":{}}}],["handle",{"_index":133,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["handler",{"_index":365,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["handling",{"_index":458,"title":{},"body":{"injectables/ResumeService.html":{}}}],["hc",{"_index":567,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":693,"title":{},"body":{"index.html":{}}}],["herding",{"_index":85,"title":{},"body":{"components/Blog.html":{},"components/Projects.html":{}}}],["high",{"_index":565,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holding",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["holds",{"_index":290,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{},"injectables/ThemeService.html":{}}}],["home",{"_index":45,"title":{"components/Home.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["home'},{'name",{"_index":65,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["home.html",{"_index":147,"title":{},"body":{"components/Home.html":{}}}],["home.scss",{"_index":148,"title":{},"body":{"components/Home.html":{}}}],["html",{"_index":50,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":680,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":441,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["i18n",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":513,"title":{},"body":{"classes/Theme.html":{}}}],["id",{"_index":163,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":173,"title":{},"body":{"classes/Language.html":{},"components/Projects.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":519,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":409,"title":{},"body":{"components/Projects.html":{},"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"classes/Resume.html":{},"index.html":{}}}],["index",{"_index":117,"title":{"index.html":{}},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":435,"title":{},"body":{"classes/Resume.html":{},"index.html":{}}}],["initialize",{"_index":313,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["initiates",{"_index":135,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["inject",{"_index":403,"title":{},"body":{"components/ProjectDetail.html":{},"injectables/ThemeService.html":{}}}],["inject(activatedroute",{"_index":397,"title":{},"body":{"components/ProjectDetail.html":{}}}],["injectable",{"_index":194,"title":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":398,"title":{},"body":{"components/ProjectDetail.html":{},"injectables/ThemeService.html":{}}}],["instance",{"_index":127,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["integrate",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{}}}],["integrates",{"_index":463,"title":{},"body":{"injectables/ResumeService.html":{}}}],["internal",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["internally",{"_index":132,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["invoked",{"_index":366,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["iso",{"_index":443,"title":{},"body":{"classes/Resume.html":{}}}],["item",{"_index":293,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":707,"title":{},"body":{"index.html":{}}}],["label",{"_index":282,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["lang.getcode",{"_index":316,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":379,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":378,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":380,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":66,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":285,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":286,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language/language.service",{"_index":494,"title":{},"body":{"injectables/ResumeService.html":{}}}],["languagecode",{"_index":437,"title":{},"body":{"classes/Resume.html":{}}}],["languagecodes",{"_index":314,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["languageservice",{"_index":195,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":25,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["learn",{"_index":429,"title":{},"body":{"components/Projects.html":{}}}],["legend",{"_index":49,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":522,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":568,"title":{},"body":{"injectables/ThemeService.html":{}}}],["link",{"_index":501,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.click",{"_index":508,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.download",{"_index":505,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.href",{"_index":503,"title":{},"body":{"injectables/ResumeService.html":{}}}],["list",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":656,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":542,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":673,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":309,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":578,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":334,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":590,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":460,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["luis",{"_index":483,"title":{},"body":{"injectables/ResumeService.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":597,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["matbutton",{"_index":113,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["matbuttonmodule",{"_index":23,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["matcardmodule",{"_index":78,"title":{},"body":{"components/Blog.html":{},"components/Projects.html":{}}}],["match",{"_index":472,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["matches",{"_index":109,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{}}}],["matching",{"_index":76,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":520,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":350,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":349,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":348,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":323,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":118,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":731,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":156,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["models",{"_index":432,"title":{},"body":{"classes/Resume.html":{}}}],["modify",{"_index":683,"title":{},"body":{"index.html":{}}}],["modifying",{"_index":279,"title":{},"body":{"injectables/LanguageService.html":{}}}],["modules",{"_index":728,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":430,"title":{},"body":{"components/Projects.html":{},"index.html":{}}}],["multilingual",{"_index":459,"title":{},"body":{"injectables/ResumeService.html":{}}}],["multiple",{"_index":461,"title":{},"body":{"injectables/ResumeService.html":{}}}],["name",{"_index":55,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":689,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":679,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":412,"title":{},"body":{"components/Projects.html":{}}}],["navigation",{"_index":420,"title":{},"body":{"components/Projects.html":{}}}],["needed",{"_index":330,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":721,"title":{},"body":{"index.html":{}}}],["new",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":675,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":139,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["non",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{}}}],["nothing",{"_index":311,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":169,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":518,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":155,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":291,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":586,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":328,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":678,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":701,"title":{},"body":{"index.html":{}}}],["option",{"_index":510,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":130,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":727,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":644,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":413,"title":{},"body":{"components/Projects.html":{},"index.html":{}}}],["param",{"_index":141,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameter",{"_index":388,"title":{},"body":{"components/ProjectDetail.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":433,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":105,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["performance",{"_index":702,"title":{},"body":{"index.html":{}}}],["persist",{"_index":589,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":692,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":668,"title":{},"body":{"index.html":{}}}],["post",{"_index":87,"title":{},"body":{"components/Blog.html":{},"components/BlogPost.html":{}}}],["post'},{'name",{"_index":59,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["post.html",{"_index":91,"title":{},"body":{"components/BlogPost.html":{}}}],["post.scss",{"_index":92,"title":{},"body":{"components/BlogPost.html":{}}}],["post.ts",{"_index":90,"title":{},"body":{"components/BlogPost.html":{},"coverage.html":{}}}],["post/blog",{"_index":89,"title":{},"body":{"components/BlogPost.html":{},"coverage.html":{}}}],["powerful",{"_index":686,"title":{},"body":{"index.html":{}}}],["preference",{"_index":112,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["previous",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{}}}],["private",{"_index":161,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/ProjectDetail.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":700,"title":{},"body":{"index.html":{}}}],["project",{"_index":69,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["projectdetail",{"_index":68,"title":{"components/ProjectDetail.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["projectname",{"_index":395,"title":{},"body":{"components/ProjectDetail.html":{}}}],["projects",{"_index":46,"title":{"components/Projects.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["projects'},{'name",{"_index":71,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["projects.html",{"_index":414,"title":{},"body":{"components/Projects.html":{}}}],["projects.scss",{"_index":415,"title":{},"body":{"components/Projects.html":{}}}],["projects/portfolio",{"_index":424,"title":{},"body":{"components/Projects.html":{}}}],["properties",{"_index":160,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["property",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{}}}],["protected",{"_index":353,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":469,"title":{},"body":{"injectables/ResumeService.html":{}}}],["providedin",{"_index":296,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":101,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":119,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["python",{"_index":83,"title":{},"body":{"components/Blog.html":{}}}],["re",{"_index":475,"title":{},"body":{"injectables/ResumeService.html":{}}}],["reactive",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{}}}],["reactively",{"_index":276,"title":{},"body":{"injectables/LanguageService.html":{}}}],["read",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{}}}],["readable",{"_index":442,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["readonly",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{}}}],["reads",{"_index":387,"title":{},"body":{"components/ProjectDetail.html":{}}}],["reference",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":725,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":602,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":681,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":582,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":585,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaces",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["representation",{"_index":515,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":180,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":158,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestresume",{"_index":120,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["resources",{"_index":723,"title":{},"body":{"index.html":{}}}],["results",{"_index":75,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":63,"title":{"classes/Resume.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["resume's",{"_index":451,"title":{},"body":{"classes/Resume.html":{}}}],["resume(1",{"_index":482,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume(2",{"_index":486,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.getlanguagecode",{"_index":499,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.model",{"_index":493,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_en.pdf",{"_index":485,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_es.pdf",{"_index":491,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumes",{"_index":457,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumeservice",{"_index":123,"title":{"injectables/ResumeService.html":{}},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["retrieve",{"_index":558,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":193,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":136,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["rodriguez",{"_index":490,"title":{},"body":{"injectables/ResumeService.html":{}}}],["rodriguez\\'s",{"_index":484,"title":{},"body":{"injectables/ResumeService.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":56,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["route",{"_index":389,"title":{},"body":{"components/ProjectDetail.html":{}}}],["router",{"_index":418,"title":{},"body":{"components/Projects.html":{}}}],["routerlink",{"_index":27,"title":{},"body":{"components/App.html":{},"components/Blog.html":{}}}],["routeroutlet",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":674,"title":{},"body":{"index.html":{}}}],["runner",{"_index":709,"title":{},"body":{"index.html":{}}}],["running",{"_index":677,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":557,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":327,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":543,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":549,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":685,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":691,"title":{},"body":{"index.html":{}}}],["search",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":346,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":360,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["selects",{"_index":477,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serve",{"_index":464,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serveonce",{"_index":676,"title":{},"body":{"index.html":{}}}],["server",{"_index":652,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":621,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":356,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":363,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":594,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":600,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/download",{"_index":149,"title":{},"body":{"components/Home.html":{}}}],["shared/components/language",{"_index":36,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":41,"title":{},"body":{"components/App.html":{}}}],["shepherd",{"_index":428,"title":{},"body":{"components/Projects.html":{}}}],["showing",{"_index":367,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{}}}],["signal's",{"_index":280,"title":{},"body":{"injectables/LanguageService.html":{}}}],["signal(this.languages[0",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{}}}],["slug",{"_index":425,"title":{},"body":{"components/Projects.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["specific",{"_index":386,"title":{},"body":{"components/ProjectDetail.html":{},"components/Projects.html":{}}}],["speed",{"_index":703,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":153,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":181,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":182,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":175,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":171,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":187,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":188,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":184,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":186,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:104",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:114",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:128",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:33",{"_index":288,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:47",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:63",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:95",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/resume/resume.model.ts",{"_index":431,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.model.ts:19",{"_index":445,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:27",{"_index":448,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:35",{"_index":446,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:43",{"_index":440,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:65",{"_index":450,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:74",{"_index":453,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:83",{"_index":452,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:92",{"_index":449,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.service.ts",{"_index":456,"title":{},"body":{"injectables/ResumeService.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.service.ts:28",{"_index":492,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:39",{"_index":467,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:62",{"_index":474,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":509,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:14",{"_index":524,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:21",{"_index":525,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:28",{"_index":521,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:35",{"_index":517,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:56",{"_index":529,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:64",{"_index":530,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:72",{"_index":526,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:80",{"_index":528,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":533,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:106",{"_index":547,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:32",{"_index":573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:45",{"_index":541,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:70",{"_index":551,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:79",{"_index":559,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:93",{"_index":553,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/pages/blog/blog",{"_index":88,"title":{},"body":{"components/BlogPost.html":{},"coverage.html":{}}}],["src/app/pages/blog/blog.ts",{"_index":77,"title":{},"body":{"components/Blog.html":{},"coverage.html":{}}}],["src/app/pages/docs/docs.ts",{"_index":95,"title":{},"body":{"components/Docs.html":{},"coverage.html":{}}}],["src/app/pages/home/home.ts",{"_index":146,"title":{},"body":{"components/Home.html":{},"coverage.html":{}}}],["src/app/pages/projects/project",{"_index":382,"title":{},"body":{"components/ProjectDetail.html":{},"coverage.html":{}}}],["src/app/pages/projects/projects.ts",{"_index":406,"title":{},"body":{"components/Projects.html":{},"coverage.html":{}}}],["src/app/pages/projects/projects.ts:17",{"_index":419,"title":{},"body":{"components/Projects.html":{}}}],["src/app/pages/projects/projects.ts:35",{"_index":422,"title":{},"body":{"components/Projects.html":{}}}],["src/app/shared/components/download",{"_index":98,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["src/app/shared/components/language",{"_index":340,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":591,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":672,"title":{},"body":{"index.html":{}}}],["started",{"_index":667,"title":{"index.html":{}},"body":{}}],["state",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":298,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":333,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":301,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":302,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":576,"title":{},"body":{"injectables/ThemeService.html":{}}}],["stores",{"_index":390,"title":{},"body":{"components/ProjectDetail.html":{}}}],["string",{"_index":170,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/Projects.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["subscribe",{"_index":275,"title":{},"body":{"injectables/LanguageService.html":{}}}],["subscribes",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{}}}],["such",{"_index":512,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":720,"title":{},"body":{"index.html":{}}}],["supported",{"_index":159,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":38,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":67,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":351,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":352,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":341,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:31",{"_index":596,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:32",{"_index":358,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:47",{"_index":359,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:49",{"_index":598,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:56",{"_index":361,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:58",{"_index":599,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:67",{"_index":364,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:68",{"_index":601,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher/language",{"_index":37,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":42,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":342,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":174,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":28,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["temporary",{"_index":480,"title":{},"body":{"injectables/ResumeService.html":{}}}],["test",{"_index":708,"title":{},"body":{"index.html":{}}}],["testing",{"_index":715,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":712,"title":{},"body":{"index.html":{}}}],["tests",{"_index":705,"title":{},"body":{"index.html":{}}}],["theme",{"_index":72,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":527,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":562,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":564,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":569,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":571,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":584,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["theme.geticon",{"_index":610,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getid",{"_index":611,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":550,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":534,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":532,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":26,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":514,"title":{},"body":{"classes/Theme.html":{}}}],["this.activatedroute.params.subscribe((params",{"_index":404,"title":{},"body":{"components/ProjectDetail.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":324,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":579,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":191,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage().getcode",{"_index":303,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.set(lang",{"_index":332,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentresume",{"_index":497,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getfilepath",{"_index":504,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getname",{"_index":506,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currenttheme",{"_index":580,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":577,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":588,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":587,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.filepath",{"_index":455,"title":{},"body":{"classes/Resume.html":{}}}],["this.flag",{"_index":192,"title":{},"body":{"classes/Language.html":{}}}],["this.gotodetail('portfolio",{"_index":423,"title":{},"body":{"components/Projects.html":{}}}],["this.icon",{"_index":531,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":189,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":605,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.languagecode",{"_index":454,"title":{},"body":{"classes/Resume.html":{}}}],["this.languages",{"_index":325,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":326,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":315,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":376,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.currentlanguagesignal().getname",{"_index":284,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":374,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getcode",{"_index":496,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.languageservice.getlanguages",{"_index":375,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":190,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.projectname.set(params['name",{"_index":405,"title":{},"body":{"components/ProjectDetail.html":{}}}],["this.resumes.find(resume",{"_index":498,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumes[0",{"_index":500,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumeservice.downloadresume",{"_index":143,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["this.router.navigate(['/projects",{"_index":426,"title":{},"body":{"components/Projects.html":{}}}],["this.themes",{"_index":581,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":583,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":561,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":609,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":607,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().geticon",{"_index":606,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":608,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":339,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":318,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":338,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":320,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage().getcode",{"_index":336,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":556,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":687,"title":{},"body":{"index.html":{}}}],["track",{"_index":377,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":145,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{}}}],["translate/core",{"_index":140,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["translate/http",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["translatehttploader",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":114,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/ThemeSwitcher.html":{}}}],["translateservice",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["triggers",{"_index":478,"title":{},"body":{"injectables/ResumeService.html":{}}}],["true",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":297,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tslib",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":129,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":305,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":102,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":307,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":172,"title":{},"body":{"classes/Language.html":{},"components/Projects.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":704,"title":{},"body":{"index.html":{}}}],["update",{"_index":331,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["use",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{},"components/ProjectDetail.html":{},"index.html":{}}}],["used",{"_index":131,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/Projects.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":345,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["user's",{"_index":110,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["using",{"_index":479,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":53,"title":{},"body":{"components/App.html":{},"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/DownloadResumeButton.html":{},"components/Home.html":{},"components/LanguageSwitcher.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":732,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":108,"title":{},"body":{"components/DownloadResumeButton.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":462,"title":{},"body":{"injectables/ResumeService.html":{}}}],["visit",{"_index":726,"title":{},"body":{"index.html":{}}}],["void",{"_index":137,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/Projects.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":682,"title":{},"body":{"index.html":{}}}],["window",{"_index":306,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":308,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["without",{"_index":277,"title":{},"body":{"injectables/LanguageService.html":{}}}],["works",{"_index":82,"title":{},"body":{"components/Blog.html":{},"components/BlogPost.html":{},"components/Docs.html":{},"components/ProjectDetail.html":{},"components/Projects.html":{}}}],["works!custom",{"_index":94,"title":{},"body":{"components/BlogPost.html":{}}}],["zone.js",{"_index":664,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\nimport { RouterLink } from '@angular/router';\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher,\n    RouterLink\n],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n\n  \n  Home\n  Projects\n  Blog\n  Docs\n  \n  \n\n  \n  \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Home  Projects  Blog  Docs          '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Blog.html":{"url":"components/Blog.html","title":"component - Blog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Blog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog/blog.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./blog.html\n            \n\n\n\n            \n                styleUrl\n                ./blog.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-blog',\n  imports: [ MatCardModule, MatButtonModule, RouterLink ],\n  templateUrl: './blog.html',\n  styleUrl: './blog.scss'\n})\nexport class Blog {}\n    \n\n    \n        blog works!\n\n\n  \n    Python Code\n    Herding group\n  \n  \n    Post\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'blog works!      Python Code    Herding group        Post  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Blog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogPost.html":{"url":"components/BlogPost.html","title":"component - BlogPost","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlogPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog/blog-post/blog-post.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog-post\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./blog-post.html\n            \n\n\n\n            \n                styleUrl\n                ./blog-post.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-post',\n  imports: [],\n  templateUrl: './blog-post.html',\n  styleUrl: './blog-post.scss'\n})\nexport class BlogPost {}\n    \n\n    \n        blog-post works!\n\nCustom Blog Post\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'blog-post works!Custom Blog Post'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlogPost'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Docs.html":{"url":"components/Docs.html","title":"component - Docs","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Docs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/docs/docs.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-docs\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./docs.html\n            \n\n\n\n            \n                styleUrl\n                ./docs.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-docs',\n  imports: [],\n  templateUrl: './docs.html',\n  styleUrl: './docs.scss'\n})\nexport class Docs {\n\n}\n\n    \n\n    \n        docs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'docs works!'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Docs'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadResumeButton.html":{"url":"components/DownloadResumeButton.html","title":"component - DownloadResumeButton","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DownloadResumeButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/download-resume-button/download-resume-button.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI button for downloading the resume PDF.\nWhen clicked, it downloads the version of the resume that matches the\nuser's current language preference.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-resume-button\n            \n\n\n            \n                imports\n                \n                            MatButton\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-resume-button.html\n            \n\n\n\n            \n                styleUrl\n                ./download-resume-button.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeService: ResumeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadResumeButton.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        resumeService\n                                                  \n                                                        \n                                                                        ResumeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used internally to handle the resume download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestResume\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:35\n                        \n                    \n\n\n            \n                \n                        Initiates the download of the resume PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ResumeService } from '../../../core/resume/resume.service';\nimport { MatButton } from '@angular/material/button';\nimport { TranslatePipe } from \"@ngx-translate/core\";\n\n/**\n * Component that provides a UI button for downloading the resume PDF.\n * \n * When clicked, it downloads the version of the resume that matches the \n * user's current language preference.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-download-resume-button',\n  imports: [MatButton, TranslatePipe],\n  templateUrl: './download-resume-button.html',\n  styleUrl: './download-resume-button.scss'\n})\nexport class DownloadResumeButton {\n\n  /**\n   * Creates an instance of DownloadResumeButton.\n   * \n   * @param {ResumeService} resumeService Used internally to handle the resume download.\n   */\n  constructor(private resumeService: ResumeService) {}\n\n  /**\n   * Initiates the download of the resume PDF.\n   * \n   * @returns {void}\n   */\n  public requestResume(): void {\n    this.resumeService.downloadResume();\n  }\n}\n    \n\n    \n        \n{{ 'app.shared.download-resume-button' | translate }}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'app.shared.download-resume-button\\' | translate }}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadResumeButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Home.html":{"url":"components/Home.html","title":"component - Home","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Home\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n            \n                imports\n                \n                                DownloadResumeButton\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.html\n            \n\n\n\n            \n                styleUrl\n                ./home.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DownloadResumeButton } from \"../../shared/components/download-resume-button/download-resume-button\";\nimport { TranslatePipe } from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-home',\n  imports: [\n    DownloadResumeButton,\n    TranslatePipe\n  ],\n  templateUrl: './home.html',\n  styleUrl: './home.scss'\n})\nexport class Home {}\n    \n\n    \n        {{ 'app.title' | translate }}\n{{ 'app.hello' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'app.title\\' | translate }}{{ \\'app.hello\\' | translate }}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Home'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the language.\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language code.\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Flag symbol.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id Unique identifier.\n   * @param {string} name Name of the language.\n   * @param {string} code Language code.\n   * @param {string} flag Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Languages Control\" (model domain)\nService to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentLanguage\n                            \n                            \n                                    Public\n                                    Readonly\n                                currentLanguageSignal\n                            \n                            \n                                    Private\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:63\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ngx-translate service instance.\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The Angular Title service to set the document title.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:128\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nmapped to the \"language.model\" (source code domain).\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new Language to apply. An instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The language code to search for.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(this.languages[0])\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:47\n                        \n                    \n\n            \n                \n                    Signal holding the currently active language as a Language object.\nThis replaces the previous non-reactive property, enabling automatic\nUI updates in any component that subscribes to it.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentLanguageSignal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentLanguage\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:63\n                        \n                    \n\n            \n                \n                    Read-only reference to the currentLanguage signal.\nExposed for use in components so they can subscribe reactively to\nlanguage changes without directly modifying the signal's value.\nExample :public label = computed(() => this.languageService.currentLanguageSignal().getName());\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, signal } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Control Object: \"Languages Control\" (model domain)\n * \n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @private\n   * @type {Language[]}\n   */\n  private languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * Signal holding the currently active language as a `Language` object.\n   *\n   * This replaces the previous non-reactive property, enabling automatic\n   * UI updates in any component that subscribes to it.\n   *\n   * @private\n   * @type {Signal}\n   */\n  private currentLanguage = signal(this.languages[0]);\n\n  /**\n   * Read-only reference to the `currentLanguage` signal.\n   *\n   * Exposed for use in components so they can subscribe reactively to\n   * language changes without directly modifying the signal's value.\n   * \n   * ```ts\n   * public label = computed(() => this.languageService.currentLanguageSignal().getName());\n   * ```\n   * \n   * @public\n   * @readonly\n   * @type {Signal}\n   */\n  public readonly currentLanguageSignal = this.currentLanguage;\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate The ngx-translate service instance.\n   * @param {Title} titleService The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage().getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage().getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 2: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 3: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage();\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang The new `Language` to apply. An instance of the Entity Object \"Language\" (model domain),\n   * mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage() === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage.set(lang);\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage().getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage().getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                getLanguageList\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available languages from the service.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                An array of Language objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Default value : computed(() => this.languageService.currentLanguageSignal().getName())\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:32\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\nAutomatically updates when the language changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, computed, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * Automatically updates when the language changes.\n   * @protected\n   * @type {Signal}\n   */\n  protected label = computed(() => this.languageService.currentLanguageSignal().getName());\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Gets the full list of available languages from the service.\n   *\n   * @returns {Language[]} An array of `Language` objects.\n   */\n  public getLanguageList(): Language[] {\n    return this.languageService.getLanguages();\n  }\n\n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label() }}\n\n\n\n  @for (lang of getLanguageList(); track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label() }}  @for (lang of getLanguageList(); track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetail.html":{"url":"components/ProjectDetail.html","title":"component - ProjectDetail","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/projects/project-detail/project-detail.ts\n\n\n\n    \n        Description\n    \n    \n        The ProjectDetail component displays details for a specific project.\nIt reads the project :name parameter from the route and stores it\nin a reactive signal for use in the template.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-detail\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./project-detail.html\n            \n\n\n\n            \n                styleUrl\n                ./project-detail.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activatedRoute\n                            \n                            \n                                projectName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/projects/project-detail/project-detail.ts:27\n                            \n                        \n\n                \n                    \n                            Initializes the ProjectDetail component.\nSubscribes to route parameter changes and updates projectName.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activatedRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(ActivatedRoute)\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-detail/project-detail.ts:27\n                        \n                    \n\n            \n                \n                    ActivatedRoute is injected to access route parameters dynamically.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal('')\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/projects/project-detail/project-detail.ts:22\n                        \n                    \n\n            \n                \n                    Holds the current project name extracted from the route parameters.\nThis is a reactive signal so the template will automatically update\nwhen the value changes.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject, signal } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * The ProjectDetail component displays details for a specific project.\n * It reads the project `:name` parameter from the route and stores it\n * in a reactive signal for use in the template.\n */\n@Component({\n  selector: 'app-project-detail',\n  imports: [],\n  templateUrl: './project-detail.html',\n  styleUrl: './project-detail.scss'\n})\nexport class ProjectDetail {\n  \n  /**\n   * Holds the current project name extracted from the route parameters.\n   * This is a reactive signal so the template will automatically update\n   * when the value changes.\n   */\n  projectName = signal('');\n  \n  /**\n   * ActivatedRoute is injected to access route parameters dynamically.\n   */\n  private activatedRoute = inject(ActivatedRoute);\n  \n  /**\n   * Initializes the ProjectDetail component.\n   * Subscribes to route parameter changes and updates `projectName`.\n   */\n  constructor() {\n    // Access route parameters\n    this.activatedRoute.params.subscribe((params) => {\n      this.projectName.set(params['name']);\n    });\n  }\n\n}\n    \n\n    \n        project-detail works!\n\n{{ projectName() }}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-detail works!{{ projectName() }}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetail'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Projects.html":{"url":"components/Projects.html","title":"component - Projects","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Projects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/projects/projects.ts\n\n\n\n    \n        Description\n    \n    \n        The Projects component displays a gallery of projects.\nEach project card includes a button or clickable area that navigates\nto the corresponding project detail page.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n\n            \n                imports\n                \n                            MatCardModule\n                            MatButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/projects/projects.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of the Projects component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router used for navigation to project details.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDetail\n                        \n                    \n                \n            \n            \n                \ngoToDetail(name: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/projects/projects.ts:35\n                        \n                    \n\n\n            \n                \n                        Navigates to the detail page of a specific project.\nExample :this.goToDetail('portfolio');\n// Navigates to /projects/portfolio\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The unique identifier (slug) of the project to display.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n/**\n * The Projects component displays a gallery of projects.\n * Each project card includes a button or clickable area that navigates\n * to the corresponding project detail page.\n */\n@Component({\n  selector: 'app-projects',\n  imports: [ MatCardModule, MatButtonModule ],\n  templateUrl: './projects.html',\n  styleUrl: './projects.scss'\n})\nexport class Projects {\n\n  /**\n   * Creates an instance of the Projects component.\n   *\n   * @param router Angular Router used for navigation to project details.\n   */\n  constructor(private router: Router) {}\n\n  /**\n   * Navigates to the detail page of a specific project.\n   *\n   * @param name The unique identifier (slug) of the project to display.\n   *\n   * @example\n   * this.goToDetail('portfolio');\n   * // Navigates to /projects/portfolio\n   */\n  goToDetail(name: String) {\n    this.router.navigate(['/projects', name]);\n  }\n  \n}\n    \n\n    \n        projects works!\n\n\n  \n     Australian Shepherd\n    Herding group\n  \n  \n    Learn More\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'projects works!       Australian Shepherd    Herding group        Learn More  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Projects'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Resume\" (model domain)\nThis class models the properties of a resume, including its ID, name,\nlanguage code, and file path. It provides public getters to access\nthis information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                languageCode\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFilePath\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLanguageCode\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, languageCode: string, filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.model.ts:43\n                            \n                        \n\n                \n                    \n                            Creates a new Resume instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier for the resume.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Human-readable name for the resume.\n\n                                                        \n                                                \n                                                \n                                                        languageCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language code of the resume (ISO format).\n\n                                                        \n                                                \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to the PDF file for download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:43\n                        \n                    \n\n            \n                \n                    Path to the PDF file for this resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:19\n                        \n                    \n\n            \n                \n                    Unique identifier for the resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:35\n                        \n                    \n\n            \n                \n                    Language code associated with the resume (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:27\n                        \n                    \n\n            \n                \n                    Display name of the resume.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:92\n                        \n                    \n\n\n            \n                \n                        Gets the file path to the resume PDF.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The file path to the PDF.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the resume.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The resume's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the language code of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en', 'es').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:74\n                        \n                    \n\n\n            \n                \n                        Gets the name of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The resume's display name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Resume {\n  \n  /**\n   * Unique identifier for the resume.\n   * \n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code associated with the resume (e.g., 'en', 'es').\n   * \n   * @private\n   * @type {string}\n   */\n  private languageCode: string;\n\n  /**\n   * Path to the PDF file for this resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private filePath: string;\n\n  /**\n   * Creates a new Resume instance.\n   * \n   * @param {number} id Unique identifier for the resume.\n   * @param {string} name Human-readable name for the resume.\n   * @param {string} languageCode Language code of the resume (ISO format).\n   * @param {string} filePath Path to the PDF file for download.\n   */\n  constructor(id: number, name: string, languageCode: string, filePath: string) {\n    this.id = id;\n    this.name = name;\n    this.languageCode = languageCode;\n    this.filePath = filePath;\n  }\n\n  /**\n   * Gets the unique ID of the resume.\n   * \n   * @returns {number} The resume's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the name of the resume.\n   * \n   * @returns {string} The resume's display name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the language code of the resume.\n   * \n   * @returns {string} The language code (e.g., 'en', 'es').\n   */\n  public getLanguageCode(): string {\n    return this.languageCode;\n  }\n\n  /**\n   * Gets the file path to the resume PDF.\n   * \n   * @returns {string} The file path to the PDF.\n   */\n  public getFilePath(): string {\n    return this.filePath;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumeService.html":{"url":"injectables/ResumeService.html","title":"injectable - ResumeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Resumes Control\" (model domain)\nService for handling multilingual resume file access and downloads.\nThis service provides logic to manage multiple versions of a resume\nin different languages. It integrates with the LanguageService to\nserve the resume matching the user's current language.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentResume\n                            \n                            \n                                    Private\n                                resumes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.service.ts:39\n                            \n                        \n\n                \n                    \n                            Constructs the ResumeService.\nInitializes the current resume based on the language code provided by\nthe LanguageService. Falls back to the first resume if no match is found.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that provides the current language code.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadResume\n                        \n                    \n                \n            \n            \n                \ndownloadResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Downloads the resume PDF corresponding to the user's current language.\nThis method re-checks the user's current language, selects the matching\nresume, and triggers a download using a temporary anchor element.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentResume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Resume\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:39\n                        \n                    \n\n            \n                \n                    The resume currently selected based on the user's language preference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resumes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:28\n                        \n                    \n\n            \n                \n                    Array of available resumes, each associated with a language code.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resume } from './resume.model';\nimport { LanguageService } from '../language/language.service';\n\n/**\n * Control Object: \"Resumes Control\" (model domain)\n *\n * Service for handling multilingual resume file access and downloads.\n * \n * This service provides logic to manage multiple versions of a resume\n * in different languages. It integrates with the LanguageService to \n * serve the resume matching the user's current language.\n *\n * @export\n * @class ResumeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  /**\n   * Array of available resumes, each associated with a language code.\n   * \n   * @private\n   * @type {Resume[]}\n   */\n  private resumes = [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ];\n\n  /**\n   * The resume currently selected based on the user's language preference.\n   * \n   * @private\n   * @type {Resume}\n   */\n  private currentResume: Resume;\n\n  /**\n   * Constructs the ResumeService.\n   * \n   * Initializes the current resume based on the language code provided by\n   * the LanguageService. Falls back to the first resume if no match is found.\n   * \n   * @param {LanguageService} languageService Service that provides the current language code.\n   */\n  constructor(private languageService: LanguageService) { \n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n  }\n\n  /**\n   * Downloads the resume PDF corresponding to the user's current language.\n   * \n   * This method re-checks the user's current language, selects the matching\n   * resume, and triggers a download using a temporary anchor element.\n   * \n   * @returns {void}\n   */\n  downloadResume(): void {\n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n    const link = document.createElement('a');\n    link.href = this.currentResume.getFilePath(); // Path to your PDF file\n    link.download = this.currentResume.getName(); // Name of the downloaded file\n    link.click();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Theme\" (model domain)\nRepresents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:35\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique numeric ID for the theme.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Display name of the theme.\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Internal code used to identify the theme.\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Icon representing the theme (Material icon name or emoji).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:28\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:35\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:14\n                        \n                    \n\n            \n                \n                    Unique identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:21\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:72\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n   /**\n   * Unique identifier for the theme.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   * @private\n   * @type {string}\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   *\n   * @param id Unique numeric ID for the theme.\n   * @param name Display name of the theme.\n   * @param code Internal code used to identify the theme.\n   * @param icon Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Themes Control\" (model domain)\nService to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:45\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected reference to the DOM document object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The new Theme to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The code of the theme to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:45\n                        \n                    \n\n            \n                \n                    The currently active theme as a Theme object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:32\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Themes Control\" (model domain),\nwhich holds a list of available themes as Entity Objects \"Theme\" (model domain).\nList of available themes for the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Control Object: \"Themes Control\" (model domain)\n * \n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * The attribute of the Control Object \"Themes Control\" (model domain),\n   * which holds a list of available themes as Entity Objects \"Theme\" (model domain).\n   *\n   * List of available themes for the application.\n   * \n   * @private\n   * @type {Theme[]}\n   * \n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme as a Theme object.\n   *\n   * @private\n   * @type {Theme}\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns {Theme[]} A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param {string} code The code of the theme to retrieve.\n   * @returns {Theme} The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   *\n   * @param {Theme} theme The new `Theme` to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's themes.\nDisplays the current theme and allows the user to select a different one\nfrom the list of available themes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:58\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:68\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n/**\n * Component that provides a UI for switching the application's themes.\n * \n * Displays the current theme and allows the user to select a different one\n * from the list of available themes.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, TranslatePipe],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param {ThemeService} themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getIcon();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns {Theme[]} An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param {Theme} theme The selected theme.\n   * @returns {void}\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getIcon();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n\n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ 'app.shared.theme.' + theme.getCode() | translate }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ \\'app.shared.theme.\\' + theme.getCode() | translate }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'Blog', 'selector': 'app-blog'},{'name': 'BlogPost', 'selector': 'app-blog-post'},{'name': 'Docs', 'selector': 'app-docs'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'Home', 'selector': 'app-home'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ProjectDetail', 'selector': 'app-project-detail'},{'name': 'Projects', 'selector': 'app-projects'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.model.ts\n            \n            class\n            Resume\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.service.ts\n            \n            injectable\n            ResumeService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/pages/blog/blog-post/blog-post.ts\n            \n            component\n            BlogPost\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/blog/blog.ts\n            \n            component\n            Blog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/docs/docs.ts\n            \n            component\n            Docs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.ts\n            \n            component\n            Home\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/projects/project-detail/project-detail.ts\n            \n            component\n            ProjectDetail\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/pages/projects/projects.ts\n            \n            component\n            Projects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/download-resume-button/download-resume-button.ts\n            \n            component\n            DownloadResumeButton\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
