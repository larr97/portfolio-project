var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.599,1,0.881]],["body/components/App.html",[0,1.081,1,1.666,2,1.503,3,0.787,4,0.645,5,1.652,6,1.367,7,1.652,8,0.645,9,2.034,10,0.787,11,2.594,12,1.235,13,3.449,14,3.449,15,3.449,16,2.684,17,3.449,18,3.449,19,1.367,20,2.696,21,2.18,22,3.859,23,3.859,24,3.859,25,2.439,26,3.859,27,1.788,28,1.788,29,2.18,30,3.449,31,2.18,32,3.449,33,1.947,34,0.073,35,0.949,36,1.652,37,1.652,38,2.034,39,2.614,40,1.652,41,2.439,42,1.652,43,2.614,44,2.614,45,1.652,46,1.038,47,0.405,48,3.449,49,3.193,50,3.449,51,3.449,52,1.652,53,2.18,54,2.18,55,1.652,56,2.594,57,1.652,58,1.038,59,1.652,60,0.787,61,1.652,62,0.787,63,1.367,64,1.652,65,0.051,66,0.051]],["title/classes/Language.html",[47,0.376,60,0.731]],["body/classes/Language.html",[3,0.587,4,0.481,8,0.481,10,0.847,12,0.587,34,0.073,46,0.587,47,0.302,58,1.394,60,1.456,65,0.041,66,0.041,67,1.232,68,1.516,69,1.232,70,1.019,71,1.516,72,1.516,73,1.232,74,1.516,75,0.481,76,0.694,77,2.408,78,2.007,79,4.605,80,3.398,81,1.022,82,1.623,83,2.816,84,3.619,85,2.816,86,2.816,87,0.708,88,2.19,89,3.398,90,1.747,91,1.562,92,2.815,93,1.779,94,1.472,95,0.708,96,1.061,97,0.708,98,2.528,99,2.287,100,3.112,101,1.949,102,2.287,103,2.816,104,2.19,105,2.19,106,2.816,107,1.949,108,1.949,109,1.779,110,1.949,111,1.839,112,1.533,113,1.949,114,1.949,115,1.949,116,1.314,117,2.19,118,2.19,119,2.19,120,2.815,121,1.314]],["title/injectables/LanguageService.html",[122,1.057,123,1.269]],["body/injectables/LanguageService.html",[3,0.403,4,0.737,8,0.33,10,0.899,11,0.846,12,0.899,33,1.301,34,0.073,35,0.486,36,2.29,37,0.846,46,0.637,47,0.328,49,3.01,58,0.791,60,1.461,65,0.031,66,0.031,69,2.186,70,2.15,71,2.692,72,3.01,73,1.338,74,2.324,75,0.33,76,0.522,77,0.7,78,1.726,81,0.769,82,1.493,87,0.486,90,1.084,91,1.316,93,1.338,94,1.809,95,0.954,96,0.853,97,0.954,102,1.338,103,2.324,104,2.324,111,1.301,112,1.365,116,1.084,121,1.084,122,0.922,123,1.701,124,0.846,125,1.041,126,2.234,127,1.338,128,3.199,129,2.117,130,1.647,131,1.647,132,1.637,133,1.418,134,1.647,135,1.647,136,2.324,137,2.924,138,1.647,139,3.624,140,2.692,141,4.272,142,2.375,143,2.627,144,2.627,145,2.986,146,2.117,147,2.986,148,1.338,149,3.253,150,2.986,151,2.117,152,1.338,153,2.986,154,2.555,155,3.253,156,2.627,157,3.253,158,1.338,159,2.627,160,2.117,161,1.338,162,1.647,163,1.647,164,1.887,165,1.338,166,1.338,167,2.117,168,2.044,169,1.217,170,1.041,171,2.627,172,2.986,173,2.324,174,1.373,175,1.338,176,1.561,177,2.117,178,1.338,179,1.647,180,2.117,181,2.117,182,1.338,183,1.647,184,2.117,185,1.701,186,1.338,187,2.117,188,2.117,189,2.117,190,2.117,191,1.338,192,2.117,193,2.986,194,2.117,195,1.647,196,1.647,197,2.117,198,1.041,199,1.373,200,1.041,201,0.846,202,3.757,203,2.117,204,2.117,205,2.627,206,2.117,207,2.627,208,1.041,209,1.647,210,1.647,211,1.647,212,1.647,213,1.338,214,1.647,215,2.117,216,1.647,217,1.338,218,1.338,219,1.338,220,2.117,221,1.338,222,1.338,223,1.338,224,1.338,225,1.338,226,2.117,227,1.338,228,1.041,229,1.338,230,2.627,231,1.338,232,1.338,233,1.338,234,1.373,235,0.583,236,2.117,237,2.117,238,1.041,239,1.041,240,1.041,241,1.338,242,1.338,243,1.338,244,1.338,245,1.338]],["title/components/LanguageSwitcher.html",[0,0.599,27,1.057]],["body/components/LanguageSwitcher.html",[0,0.962,1,1.416,2,1.163,3,0.546,4,0.447,5,1.146,6,0.948,7,1.146,8,0.447,10,0.954,19,0.948,20,2.356,21,1.687,25,2.003,27,1.699,28,0.79,29,1.687,31,1.687,33,1.757,34,0.073,35,0.658,40,2.464,41,2.003,42,1.146,46,0.804,47,0.281,52,1.146,53,1.687,54,1.687,55,1.146,56,2.21,57,1.146,58,1.174,59,1.146,60,1.448,61,1.146,62,0.546,63,0.948,64,1.146,65,0.039,66,0.039,69,1.687,75,0.447,76,0.659,81,0.97,82,1.416,87,0.658,90,1.151,91,1.354,93,1.687,94,1.396,95,0.97,96,0.962,97,0.97,112,1.416,116,0.97,121,0.658,123,2.163,126,1.828,127,1.687,128,3.22,132,1.624,133,1.699,142,2.615,163,2.077,164,2.21,173,2.721,174,1.657,176,1.828,201,1.146,234,1.828,235,1.163,246,3.034,247,1.146,248,2.67,249,2.21,250,2.077,251,2.077,252,2.077,253,2.67,254,2.077,255,2.67,256,2.466,257,2.466,258,3.169,259,2.077,260,2.077,261,3.286,262,3.728,263,3.497,264,2.67,265,1.813,266,2.67,267,1.813,268,2.615,269,2.67,270,1.813,271,2.077,272,2.67,273,1.813,274,2.67,275,1.813,276,1.813,277,1.813,278,1.41,279,1.41,280,1.813,281,1.813,282,1.813,283,2.077,284,1.813,285,1.813,286,1.813,287,3.169,288,2.077,289,2.67,290,2.67,291,2.077]],["title/classes/Theme.html",[47,0.376,62,0.731]],["body/classes/Theme.html",[3,0.567,4,0.465,8,0.465,10,0.827,12,0.567,19,0.985,34,0.073,46,0.567,47,0.292,58,1.425,62,1.441,65,0.04,66,0.04,67,1.191,73,1.191,75,0.465,76,0.678,77,2.322,78,2.008,80,3.489,81,0.998,82,1.613,83,2.772,85,2.772,86,2.772,87,0.684,88,2.137,89,3.176,90,1.714,91,1.549,94,1.436,95,0.684,96,0.934,97,0.684,98,2.644,99,2.251,100,2.137,102,2.498,105,2.772,106,2.137,109,2.393,111,1.823,112,1.519,116,1.294,117,2.137,118,2.137,119,2.137,121,1.294,165,1.736,169,0.827,249,1.191,292,1.466,293,1.884,294,2.498,295,1.884,296,1.466,297,3.649,298,1.884,299,1.884,300,3.562,301,2.747,302,2.137,303,3.562,304,3.562,305,3.562,306,1.884,307,2.772,308,2.772,309,3.562,310,1.884,311,1.884,312,2.747,313,2.747,314,1.884,315,4.183,316,1.884,317,1.884,318,1.884,319,2.747]],["title/injectables/ThemeService.html",[122,1.057,320,1.269]],["body/injectables/ThemeService.html",[3,0.467,4,0.382,6,1.69,8,0.382,10,0.973,11,0.98,12,1.188,33,1.257,34,0.073,35,0.563,46,0.715,47,0.54,58,1.049,62,1.453,65,0.035,66,0.054,70,1.69,75,0.382,76,0.586,77,2.001,78,1.879,81,0.862,82,1.547,87,0.563,90,1.266,91,1.39,95,1.048,96,0.797,97,1.048,98,1.5,111,1.409,112,1.39,116,1.048,121,1.174,122,1.034,124,0.98,126,1.69,127,1.5,130,2.516,131,1.847,132,1.799,133,1.9,134,1.847,135,1.847,136,1.847,137,3.148,138,1.847,140,3.148,152,1.5,154,2.323,162,1.847,165,1.5,166,1.823,169,1.264,174,1.241,176,1.922,179,1.847,185,1.69,186,1.5,196,1.847,200,1.206,208,1.847,209,1.847,210,1.847,211,1.847,212,1.847,214,1.847,228,1.847,234,0.811,235,0.675,239,1.206,268,2.043,297,1.847,307,3.071,308,3.071,320,1.822,321,1.206,322,3.268,323,2.885,324,3.233,325,3.233,326,2.374,327,3.233,328,1.55,329,2.374,330,2.374,331,2.374,332,1.847,333,2.374,334,2.374,335,1.847,336,2.374,337,1.55,338,2.374,339,2.374,340,2.245,341,1.55,342,2.374,343,1.55,344,2.374,345,2.374,346,2.374,347,2.374,348,2.374,349,2.374,350,2.374,351,1.55,352,2.374,353,2.374,354,2.374,355,2.374,356,2.374,357,2.374,358,2.374,359,3.233,360,3.233,361,3.233,362,2.374,363,2.374,364,2.374,365,2.374,366,2.374,367,1.55,368,1.847,369,1.55,370,1.55,371,1.206,372,1.55,373,2.374,374,2.374,375,1.55,376,1.55,377,2.885,378,1.55,379,1.55,380,1.55,381,2.374,382,1.55,383,1.55,384,1.55,385,1.55,386,1.55,387,1.55]],["title/components/ThemeSwitcher.html",[0,0.599,28,1.057]],["body/components/ThemeSwitcher.html",[0,0.985,1,1.401,2,1.139,3,0.53,4,0.434,5,1.113,6,0.921,7,1.113,8,0.434,10,0.938,12,0.787,19,0.921,20,2.328,21,1.652,25,1.969,27,0.767,28,1.502,29,1.652,31,1.652,33,1.681,34,0.073,35,0.639,41,2.328,42,1.113,45,2.439,46,0.53,47,0.273,52,1.113,53,1.652,54,1.652,55,1.113,56,2.179,57,1.113,58,1.038,59,1.113,60,0.53,61,1.113,62,1.461,63,0.921,64,1.113,65,0.038,66,0.038,70,1.366,75,0.434,76,0.645,81,0.949,82,1.522,87,0.639,90,0.949,91,1.338,95,0.949,96,0.769,97,0.949,109,2.179,111,1.502,112,1.338,116,0.949,121,0.949,126,2.018,132,1.502,133,1.681,142,1.969,152,1.652,154,2.696,164,1.652,166,1.652,169,1.162,174,1.366,176,2.145,183,2.033,195,2.033,201,1.113,234,1.366,235,1.502,247,1.113,249,1.652,250,2.683,251,2.033,252,2.033,254,2.033,256,2.425,257,2.425,259,2.033,260,2.033,261,3.262,268,2.179,278,1.37,279,1.37,283,2.033,288,2.683,291,2.033,294,1.652,302,2.033,320,2.192,322,3.193,332,2.033,340,2.033,388,3.003,389,2.613,390,2.613,391,2.613,392,2.613,393,2.613,394,2.613,395,2.613,396,3.448,397,3.859,398,2.613,399,1.761,400,2.613,401,2.033,402,2.613,403,2.613,404,1.761,405,1.761,406,2.613,407,2.613,408,1.761,409,2.613,410,2.613,411,1.761,412,1.761,413,1.761,414,1.761,415,1.761,416,1.761,417,3.116,418,2.613]],["title/coverage.html",[419,2.553]],["body/coverage.html",[0,1.009,1,1.355,8,0.729,9,2.299,27,1.287,28,1.287,34,0.072,40,1.867,45,1.867,47,0.578,60,0.889,62,0.889,65,0.055,66,0.055,68,2.299,96,0.729,99,1.867,122,1.626,123,1.545,125,2.299,169,0.889,246,2.299,247,2.359,292,2.299,320,1.545,321,2.299,388,2.299,419,2.299,420,2.954,421,2.954,422,2.904,423,4.728,424,2.299,425,4.693,426,4.693,427,2.299,428,2.904,429,2.299,430,2.299,431,2.299,432,2.299,433,4.65,434,3.732,435,3.732,436,3.732,437,3.732,438,2.299,439,2.299,440,3.344,441,2.299,442,2.299,443,2.299,444,2.954,445,2.954]],["title/dependencies.html",[446,1.589,447,2.265]],["body/dependencies.html",[34,0.073,35,1.222,36,2.555,37,2.126,38,2.618,65,0.06,66,0.06,198,3.146,199,1.759,371,2.618,447,2.618,448,3.364,449,3.373,450,4.724,451,3.364,452,3.364,453,3.364,454,2.126,455,3.364,456,3.364,457,3.364,458,2.618,459,3.364,460,2.618,461,3.364,462,3.364,463,3.364,464,3.364,465,3.364,466,3.364,467,3.364]],["title/index.html",[75,0.504,468,2.042,469,2.042]],["body/index.html",[0,0.988,2,1.231,4,0.697,12,1.092,16,2.198,34,0.053,63,1.477,65,0.053,66,0.053,78,1.58,132,1.231,133,1.231,158,2.672,168,2.198,169,0.85,170,3.481,185,1.896,199,1.477,235,1.231,240,2.198,296,2.198,335,2.198,368,2.198,401,2.822,449,2.198,454,2.532,470,2.824,471,4.006,472,2.824,473,3.402,474,2.198,475,3.626,476,2.824,477,2.824,478,4.372,479,4.474,480,2.824,481,3.626,482,2.824,483,2.824,484,2.824,485,2.824,486,2.824,487,2.824,488,2.824,489,2.824,490,3.626,491,2.824,492,2.824,493,4.006,494,2.824,495,2.824,496,2.824,497,2.824,498,2.824,499,3.117,500,2.824,501,2.824,502,2.824,503,2.824,504,2.824,505,2.824,506,2.824,507,2.824,508,2.824,509,3.626,510,4.006,511,2.824,512,2.824,513,2.824,514,2.824,515,2.824,516,4.006,517,2.824,518,4.474,519,2.824,520,3.626,521,2.824,522,2.824,523,2.824,524,2.824,525,2.824,526,2.824,527,2.824,528,2.824,529,2.824,530,2.824,531,2.824,532,2.824,533,2.824,534,1.785,535,2.824]],["title/modules.html",[536,2.553]],["body/modules.html",[34,0.064,65,0.064,66,0.064,536,2.977]],["title/overview.html",[534,2.074]],["body/overview.html",[2,1.642,34,0.064,65,0.064,66,0.064,67,2.381,124,2.381,216,2.932,238,3.363,534,2.381]],["title/properties.html",[76,0.718,446,1.589]],["body/properties.html",[34,0.067,65,0.064,66,0.064,76,0.937,474,2.954,537,3.797]],["title/miscellaneous/variables.html",[538,1.589,539,2.265]],["body/miscellaneous/variables.html",[1,1.3,34,0.073,65,0.053,66,0.053,75,0.682,96,1.035,158,1.748,169,1.077,185,2.445,186,2.956,199,1.446,271,2.152,294,1.748,422,2.152,424,3.086,427,3.086,428,2.152,429,2.784,430,3.086,431,2.152,432,2.784,438,2.152,439,2.784,440,2.152,441,2.784,442,2.784,443,2.784,454,1.748,458,2.152,460,2.152,473,2.152,499,2.152,538,2.152,539,2.152,540,4.194,541,3.578,542,2.766,543,3.578,544,2.766,545,2.766,546,2.766,547,2.766,548,2.766,549,2.766,550,2.766,551,2.766,552,2.766,553,2.766,554,3.578,555,3.578,556,2.766,557,2.766,558,2.766,559,2.766,560,2.766,561,2.766,562,2.766,563,2.766,564,2.766,565,2.766,566,3.578,567,2.766,568,2.766,569,2.766,570,2.766,571,2.766,572,2.766,573,2.766,574,2.766,575,2.766,576,2.766,577,2.766,578,2.766,579,2.766,580,2.766]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":537,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["2.3.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":449,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["4",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["activate",{"_index":410,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["active",{"_index":154,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":64,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":527,"title":{},"body":{"index.html":{}}}],["allows",{"_index":252,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":345,"title":{},"body":{"injectables/ThemeService.html":{}}}],["angular",{"_index":158,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":371,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":42,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/grid",{"_index":280,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":279,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":278,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":43,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":38,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":50,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":30,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":32,"title":{},"body":{"components/App.html":{}}}],["app.title",{"_index":48,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["application's",{"_index":163,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["applicationconfig",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":332,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":340,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["array",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":502,"title":{},"body":{"index.html":{}}}],["associated",{"_index":309,"title":{},"body":{"classes/Theme.html":{}}}],["assumes",{"_index":344,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{}}}],["automatically",{"_index":485,"title":{},"body":{"index.html":{}}}],["available",{"_index":133,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["based",{"_index":155,"title":{},"body":{"injectables/LanguageService.html":{}}}],["between",{"_index":389,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["body",{"_index":338,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":366,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":499,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":500,"title":{},"body":{"index.html":{}}}],["button",{"_index":51,"title":{},"body":{"components/App.html":{}}}],["calls",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":144,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":160,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":162,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":324,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":336,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choice",{"_index":136,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":524,"title":{},"body":{"index.html":{}}}],["class",{"_index":47,"title":{"classes/Language.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":473,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":78,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":522,"title":{},"body":{"index.html":{}}}],["command",{"_index":516,"title":{},"body":{"index.html":{}}}],["compile",{"_index":501,"title":{},"body":{"index.html":{}}}],["complete",{"_index":495,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":424,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":352,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":372,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":328,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":88,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":265,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["constructor(private",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(themeservice",{"_index":399,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":148,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":302,"title":{},"body":{"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":360,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{}}}],["core/language/language.model",{"_index":277,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":276,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/theming/theme.model",{"_index":411,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":412,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["coverage",{"_index":419,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":93,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["current",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":143,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currenttheme",{"_index":323,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dark",{"_index":308,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":364,"title":{},"body":{"injectables/ThemeService.html":{}}}],["default",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":156,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":91,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":333,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":447,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detailed",{"_index":531,"title":{},"body":{"index.html":{}}}],["dev",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":475,"title":{},"body":{"index.html":{}}}],["different",{"_index":255,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["directive",{"_index":55,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":63,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directory",{"_index":504,"title":{},"body":{"index.html":{}}}],["display",{"_index":109,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":251,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":503,"title":{},"body":{"index.html":{}}}],["document",{"_index":140,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["documentation",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":72,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["dropdown",{"_index":392,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["during",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":102,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":519,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":521,"title":{},"body":{"index.html":{}}}],["each",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["element",{"_index":54,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":105,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":291,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":103,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["encapsulates",{"_index":295,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":518,"title":{},"body":{"index.html":{}}}],["english",{"_index":157,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":69,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["es",{"_index":104,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["español",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["execute",{"_index":511,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["express",{"_index":460,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["files",{"_index":489,"title":{},"body":{"index.html":{}}}],["finds",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["flag",{"_index":79,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":357,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":515,"title":{},"body":{"index.html":{}}}],["found",{"_index":347,"title":{},"body":{"injectables/ThemeService.html":{}}}],["framework",{"_index":523,"title":{},"body":{"index.html":{}}}],["full",{"_index":406,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["functions",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":493,"title":{},"body":{"index.html":{}}}],["generated",{"_index":472,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":263,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":396,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":83,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":145,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":325,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getflag",{"_index":84,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":300,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":85,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":146,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguages",{"_index":147,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":86,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["gets",{"_index":111,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getthemebycode",{"_index":326,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":342,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":397,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":327,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":468,"title":{"index.html":{}},"body":{}}],["handler",{"_index":271,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":130,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["hc",{"_index":361,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":498,"title":{},"body":{"index.html":{}}}],["high",{"_index":359,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holds",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{}}}],["html",{"_index":53,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":484,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":312,"title":{},"body":{"classes/Theme.html":{}}}],["i18n",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":297,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["id",{"_index":80,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":99,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":304,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":368,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":530,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initialized",{"_index":354,"title":{},"body":{"injectables/ThemeService.html":{}}}],["initializes",{"_index":152,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["inject",{"_index":369,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":122,"title":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["instance",{"_index":94,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["integrate",{"_index":129,"title":{},"body":{"injectables/LanguageService.html":{}}}],["integrates",{"_index":394,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["internal",{"_index":165,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["invoked",{"_index":272,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["item",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":512,"title":{},"body":{"index.html":{}}}],["label",{"_index":261,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["lang.getcode",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":290,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":289,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":287,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":60,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagecodes",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagelist",{"_index":262,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["languages",{"_index":128,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["languageservice",{"_index":123,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":27,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":52,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":307,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":362,"title":{},"body":{"injectables/ThemeService.html":{}}}],["list",{"_index":132,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":458,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":477,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":137,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":375,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":387,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":403,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":127,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":402,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":131,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matbuttonmodule",{"_index":25,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["match",{"_index":346,"title":{},"body":{"injectables/ThemeService.html":{}}}],["matches",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":305,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":258,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":257,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":256,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["menu",{"_index":393,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":81,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":538,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["modify",{"_index":488,"title":{},"body":{"index.html":{}}}],["modules",{"_index":536,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":529,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":494,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":483,"title":{},"body":{"index.html":{}}}],["needed",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":526,"title":{},"body":{"index.html":{}}}],["new",{"_index":169,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":479,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["nothing",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":89,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":303,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":70,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":383,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":482,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":506,"title":{},"body":{"index.html":{}}}],["option",{"_index":293,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":97,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":534,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":446,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":535,"title":{},"body":{"index.html":{}}}],["param",{"_index":116,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameters",{"_index":95,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":507,"title":{},"body":{"index.html":{}}}],["persist",{"_index":386,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":134,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":167,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":497,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":470,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":491,"title":{},"body":{"index.html":{}}}],["private",{"_index":77,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":505,"title":{},"body":{"index.html":{}}}],["project",{"_index":471,"title":{},"body":{"index.html":{}}}],["properties",{"_index":76,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["protected",{"_index":142,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":248,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":82,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["readable",{"_index":313,"title":{},"body":{"classes/Theme.html":{}}}],["reference",{"_index":335,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":532,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":409,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":486,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":379,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":382,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representation",{"_index":299,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":106,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":73,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":443,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":528,"title":{},"body":{"index.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":350,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":121,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":112,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":478,"title":{},"body":{"index.html":{}}}],["runner",{"_index":514,"title":{},"body":{"index.html":{}}}],["running",{"_index":481,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":349,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":339,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":490,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":496,"title":{},"body":{"index.html":{}}}],["search",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":254,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":268,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selection",{"_index":395,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["serveonce",{"_index":480,"title":{},"body":{"index.html":{}}}],["server",{"_index":454,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":126,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":159,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":264,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":269,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":153,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":398,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":407,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/language",{"_index":39,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":274,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":275,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["speed",{"_index":508,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":422,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":68,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":107,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":108,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":101,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":92,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":114,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":115,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":110,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":113,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":125,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:106",{"_index":161,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:31",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:41",{"_index":151,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:73",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:82",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:92",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":292,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:10",{"_index":310,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:15",{"_index":311,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:20",{"_index":306,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:25",{"_index":301,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:46",{"_index":317,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:54",{"_index":318,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:62",{"_index":314,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:70",{"_index":316,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":321,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:25",{"_index":367,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:37",{"_index":329,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:62",{"_index":341,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:71",{"_index":351,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:85",{"_index":343,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:97",{"_index":337,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/shared/components/language",{"_index":246,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":388,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":476,"title":{},"body":{"index.html":{}}}],["started",{"_index":469,"title":{"index.html":{}},"body":{}}],["state",{"_index":166,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":373,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":90,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":31,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["such",{"_index":296,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":525,"title":{},"body":{"index.html":{}}}],["supported",{"_index":74,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":41,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":61,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":259,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":260,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":247,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:26",{"_index":400,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:31",{"_index":273,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:38",{"_index":266,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:44",{"_index":404,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:53",{"_index":405,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:55",{"_index":267,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:62",{"_index":408,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:66",{"_index":270,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher/language",{"_index":40,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":45,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":250,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":100,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":29,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["test",{"_index":513,"title":{},"body":{"index.html":{}}}],["testing",{"_index":520,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":517,"title":{},"body":{"index.html":{}}}],["tests",{"_index":510,"title":{},"body":{"index.html":{}}}],["theme",{"_index":62,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":315,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":356,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":358,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":363,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":365,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":381,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getid",{"_index":418,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getname",{"_index":417,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":370,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":322,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":320,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":28,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":298,"title":{},"body":{"classes/Theme.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":376,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":119,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currenttheme",{"_index":377,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":374,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":385,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":384,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.flag",{"_index":120,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":319,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":117,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":283,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["this.languagelist",{"_index":281,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languages",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":286,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":285,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":284,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":282,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":118,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.themes",{"_index":378,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":380,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":353,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":416,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":414,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().getname",{"_index":413,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":415,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":348,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":141,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":150,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":492,"title":{},"body":{"index.html":{}}}],["track",{"_index":288,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":49,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["translateservice",{"_index":149,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":139,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["true",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":249,"title":{},"body":{"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":98,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":509,"title":{},"body":{"index.html":{}}}],["update",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["updated",{"_index":355,"title":{},"body":{"injectables/ThemeService.html":{}}}],["updates",{"_index":164,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":138,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["use",{"_index":168,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":294,"title":{},"body":{"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":253,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["user's",{"_index":135,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["users",{"_index":390,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["using",{"_index":401,"title":{},"body":{"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":539,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":474,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":391,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["visit",{"_index":533,"title":{},"body":{"index.html":{}}}],["void",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":487,"title":{},"body":{"index.html":{}}}],["window",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["zone.js",{"_index":466,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe, \n    TranslateDirective,\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher\n  ],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  Button\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  Button'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                currentLanguage\n                            \n                            \n                                    Protected\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:41\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:31\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @protected\n   * @type {Language[]}\n   */\n  protected languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @protected\n   * @type {Language}\n   */\n  protected currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 3: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 4: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                            \n                                    Protected\n                                languageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:55\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:66\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languageList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                        \n                    \n\n            \n                \n                    List of available languages.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * List of available languages.\n   * @protected\n   * @type {Language[]}\n   */\n  protected languageList: Language[];\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.languageList = this.languageService.getLanguages();\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of languageList; track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of languageList; track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (Material icon name or emoji).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:20\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:25\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:10\n                        \n                    \n\n            \n                \n                    Unique numeric identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:15\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:62\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:70\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:46\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:54\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n  /**\n   * Unique numeric identifier for the theme.\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:37\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:97\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:85\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:37\n                        \n                    \n\n            \n                \n                    The currently active theme.\nInitialized with a default fallback (first in the list) and\nupdated from localStorage if available.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:25\n                        \n                    \n\n            \n                \n                    List of available themes for the application.\nEach theme includes a name, code, and icon.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * List of available themes for the application.\n   * Each theme includes a name, code, and icon.\n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme.\n   * Initialized with a default fallback (first in the list) and\n   * updated from localStorage if available.\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param code - The code of the theme to retrieve.\n   * @returns The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   * \n   * @param theme - The new `Theme` to apply.\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        UI component for switching between available application themes.\nDisplays the current theme and allows users to select a new one via a dropdown menu.\nIntegrates with ThemeService to get the list of themes, track the active theme,\nand apply a new one on selection.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:26\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:44\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:53\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:62\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe theme to activate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:26\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\n\n/**\n * UI component for switching between available application themes.\n * \n * Displays the current theme and allows users to select a new one via a dropdown menu.\n * Integrates with `ThemeService` to get the list of themes, track the active theme,\n * and apply a new one on selection.\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getName();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param theme - The theme to activate.\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getName();\n  }\n\n}\n    \n\n    \n        \n  \n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ theme.getName() }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ theme.getName() }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
