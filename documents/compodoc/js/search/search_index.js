var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.563,1,0.915]],["body/components/App.html",[0,1.027,1,1.763,2,1.531,3,0.615,4,0.511,5,1.583,6,1.354,7,1.583,8,0.511,9,2.254,10,0.615,11,2.476,12,1.819,13,3.735,14,3.735,15,3.735,16,2.462,17,3.735,18,3.735,19,1.354,20,2.642,21,2.084,22,4.176,23,4.176,24,4.176,25,2.752,26,4.176,27,1.819,28,1.819,29,1.819,30,2.084,31,3.735,32,2.084,33,3.735,34,1.726,35,0.061,36,0.857,37,1.87,38,1.87,39,2.254,40,2.837,41,1.87,42,2.33,43,1.583,44,2.837,45,2.837,46,1.87,47,2.837,48,1.261,49,1.87,50,2.254,51,0.81,52,0.247,53,3.735,54,3.526,55,3.735,56,1.583,57,2.084,58,1.782,59,1.583,60,2.476,61,1.583,62,0.81,63,1.583,64,1.163,65,1.583,66,0.615,67,1.583,68,0.857,69,1.354,70,1.583,71,0.042,72,0.042]],["title/components/DownloadResumeButton.html",[0,0.563,29,1.064]],["body/components/DownloadResumeButton.html",[0,1.007,1,1.672,2,1.463,3,0.575,4,0.478,5,1.478,6,1.264,7,1.478,8,0.478,10,0.774,19,1.264,20,2.591,21,1.991,27,1.086,28,1.086,29,1.903,30,1.991,32,1.991,34,1.422,35,0.06,36,0.8,42,1.478,43,1.478,48,1.578,49,2.66,50,3.431,51,0.774,52,0.231,56,1.478,57,1.991,58,1.703,59,1.478,60,2.409,61,1.478,62,0.875,63,1.478,64,2.071,65,1.478,66,0.875,67,1.478,68,0.8,69,1.264,70,1.478,71,0.04,72,0.04,73,3.206,74,2.105,75,1.703,76,1.991,77,3.569,78,2.846,79,3.569,80,2.835,81,2.352,82,2.835,83,1.991,84,1.463,85,2.835,86,4.036,87,3.569,88,3.569,89,0.478,90,0.918,91,1.219,92,4.319,93,0.681,94,2.649,95,2.692,96,0.918,97,2.649,98,1.703,99,1.257,100,0.681,101,0.478,102,0.681,103,1.991,104,3.569,105,3.569,106,2.649,107,3.569,108,0.918,109,1.654,110,2.649,111,0.681,112,1.264,113,2.649]],["title/classes/Language.html",[52,0.226,66,0.563]],["body/classes/Language.html",[3,0.479,4,0.398,8,0.398,10,0.682,12,0.905,35,0.061,51,0.479,52,0.192,62,1.091,66,1.136,71,0.036,72,0.036,89,0.398,90,0.809,91,1.47,93,0.568,96,1.208,98,1.501,99,1.108,100,0.568,101,0.847,102,0.568,108,1.187,111,1.027,114,1.232,115,1.754,116,0.905,117,0.778,118,0.905,119,0.905,120,1.455,121,1.754,122,0.682,123,2.052,124,1.763,125,5.005,126,3.139,127,3.172,128,3.993,129,2.631,130,2.631,131,2.073,132,3.139,133,1.836,134,3.145,135,2.448,136,2.228,137,3.485,138,2.208,139,2.228,140,2.228,141,1.755,142,2.499,143,3.172,144,2.208,145,2.208,146,1.755,147,2.208,148,1.626,149,2.208,150,2.208,151,2.208,152,2.073,153,2.073,154,2.499,155,3.145,156,1.407]],["title/injectables/LanguageService.html",[157,0.915,158,1.239]],["body/injectables/LanguageService.html",[3,0.328,4,0.596,8,0.273,10,0.717,11,0.844,12,1.356,34,1.165,35,0.061,36,0.457,37,2.624,38,0.997,51,0.514,52,0.206,54,3.366,62,0.634,66,1.141,71,0.027,72,0.027,82,1.202,83,1.322,84,1.198,89,0.273,90,0.61,91,1.356,93,0.389,96,1.024,98,1.131,99,1.342,100,0.752,101,0.687,102,0.752,108,1.06,109,1.198,111,0.85,112,0.722,116,1.561,117,1.623,118,1.689,119,1.811,120,1.562,121,2.627,122,0.514,123,1.737,124,1.527,133,1.165,139,1.322,140,1.845,141,1.845,148,1.165,156,1.165,157,0.835,158,1.713,159,0.844,160,1.202,161,2.716,162,3.036,163,2.221,164,1.322,165,2.37,166,1.883,167,1.883,168,1.966,169,1.472,170,1.883,171,2.627,172,3.274,173,1.883,174,3.981,175,3.026,176,4.656,177,2.922,178,2.922,179,3.307,180,2.37,181,3.307,182,1.513,183,3.591,184,3.307,185,2.37,186,1.322,187,3.307,188,2.911,189,2.853,190,2.922,191,3.591,192,1.562,193,2.922,194,2.37,195,1.513,196,1.883,197,1.562,198,2.179,199,1.562,200,1.562,201,2.37,202,2.321,203,1.171,204,0.997,205,2.321,206,3.307,207,2.179,208,1.883,209,1.513,210,1.578,211,2.37,212,1.513,213,1.883,214,2.37,215,1.883,216,1.513,217,1.322,218,2.37,219,1.713,220,1.322,221,2.37,222,2.37,223,2.37,224,2.37,225,1.513,226,1.883,227,1.883,228,1.322,229,1.883,230,2.37,231,1.202,232,1.63,233,0.997,234,4.121,235,2.37,236,2.37,237,2.922,238,2.37,239,2.922,240,1.202,241,1.883,242,1.883,243,1.883,244,1.883,245,1.513,246,2.37,247,2.37,248,2.37,249,1.513,250,1.513,251,1.513,252,2.37,253,1.513,254,1.513,255,1.513,256,1.513,257,1.883,258,1.513,259,0.997,260,1.513,261,2.922,262,1.513,263,1.513,264,1.513,265,0.722,266,2.37,267,2.37,268,1.202,269,1.202,270,1.513,271,1.202,272,1.513,273,1.513,274,1.513,275,1.513]],["title/components/LanguageSwitcher.html",[0,0.563,27,1.064]],["body/components/LanguageSwitcher.html",[0,0.923,1,1.547,2,1.207,3,0.437,4,0.363,5,1.124,6,0.962,7,1.124,8,0.363,10,0.755,19,0.962,20,2.373,21,1.643,25,2.294,27,1.743,28,0.826,29,0.826,30,1.643,32,1.643,34,1.547,35,0.061,36,0.609,41,2.803,42,1.942,43,1.124,48,0.609,51,0.639,52,0.175,56,1.124,57,1.643,58,1.405,59,1.124,60,2.136,61,1.124,62,0.923,63,1.124,64,0.826,65,1.124,66,1.132,67,1.124,68,0.609,69,0.962,70,1.124,71,0.033,72,0.033,75,1.405,76,2.136,84,1.569,89,0.363,90,0.757,91,1.387,93,0.518,96,1.047,98,1.405,99,1.038,100,0.757,101,0.69,102,0.757,108,1.158,109,1.427,111,0.757,112,0.962,116,1.207,122,0.639,133,1.226,148,1.038,156,1.038,158,2.148,162,2.968,163,2.029,164,1.643,168,1.943,169,1.743,197,1.941,198,2.523,207,2.523,210,1.826,217,1.643,228,1.643,265,1.405,276,3.379,277,1.328,278,2.34,279,2.34,280,2.34,281,2.34,282,2.34,283,1.941,284,2.765,285,2.765,286,3.48,287,2.34,288,2.34,289,3.041,290,3.649,291,3.828,292,4.253,293,2.945,294,1.601,295,2.945,296,2.016,297,2.512,298,2.016,299,2.34,300,2.945,301,1.601,302,2.34,303,2.945,304,2.945,305,2.016,306,2.016,307,2.016,308,1.601,309,1.601,310,2.016,311,2.34,312,2.016,313,2.016,314,2.016,315,2.016,316,3.48,317,2.34,318,2.945,319,2.945,320,2.34]],["title/classes/Resume.html",[48,0.784,52,0.226]],["body/classes/Resume.html",[3,0.454,4,0.377,8,0.849,10,0.656,16,1.379,35,0.061,48,1.561,51,0.454,52,0.263,62,1.088,64,1.24,66,1.006,71,0.034,72,0.034,75,0.998,78,2.998,89,0.377,90,0.778,91,1.468,93,0.538,96,1.192,98,1.444,99,1.066,100,0.538,101,0.836,102,0.538,108,1.17,111,1.002,114,1.167,116,0.858,117,0.737,118,0.858,119,0.858,122,0.771,123,2.036,124,1.633,126,3.142,129,2.567,130,2.567,131,1.994,132,3.102,133,1.828,135,2.404,136,2.173,139,2.173,140,2.173,141,2.173,146,2.173,148,1.603,152,1.994,153,1.994,156,1.373,203,0.778,321,1.662,322,2.092,323,3.055,324,2.092,325,1.662,326,1.662,327,4.549,328,4.549,329,3.896,330,3.896,331,3.026,332,2.404,333,2.404,334,3.026,335,3.026,336,2.092,337,2.092,338,1.994,339,2.092,340,2.092,341,2.092,342,3.896,343,2.092,344,2.092,345,3.026,346,3.026]],["title/injectables/ResumeService.html",[95,1.449,157,0.915]],["body/injectables/ResumeService.html",[3,0.459,4,0.381,8,0.748,10,0.662,11,1.18,34,1.26,35,0.061,36,0.639,48,1.544,51,0.662,52,0.265,58,1.455,62,0.662,64,1.25,66,1.079,71,0.035,72,0.049,75,1.868,78,2.357,80,3.11,83,2.545,84,1.979,85,2.423,89,0.381,90,0.784,93,0.544,95,2.316,96,1.007,100,0.544,101,0.748,102,0.544,108,0.784,109,1.466,111,0.544,112,1.009,117,1.074,118,1.25,119,1.25,122,0.662,123,1.87,124,1.524,140,1.701,141,1.701,157,1.074,158,2.304,159,1.18,161,2.58,162,2.01,163,2.063,164,1.701,169,1.25,186,1.701,189,3.11,203,1.007,207,2.58,210,1.455,215,2.423,217,1.701,219,1.009,220,1.18,229,2.423,233,1.394,240,2.423,259,2.01,283,2.01,294,1.68,297,1.701,323,1.394,325,2.423,338,2.01,347,1.68,348,4.457,349,3.05,350,3.05,351,2.423,352,3.05,353,3.05,354,3.05,355,3.05,356,3.577,357,3.915,358,3.05,359,2.01,360,3.05,361,3.05,362,3.05,363,2.423,364,2.423,365,2.115,366,3.05,367,3.05,368,3.05,369,3.05,370,2.01,371,3.05,372,3.05,373,3.05,374,3.915,375,3.05,376,3.05,377,3.05,378,3.05,379,3.05,380,3.05,381,3.05,382,3.05,383,2.115,384,2.115,385,2.115,386,3.577,387,3.05,388,3.05,389,3.05,390,3.05,391,3.05,392,2.115,393,2.115,394,2.115,395,2.115,396,2.115,397,2.115,398,2.115,399,2.115]],["title/classes/Theme.html",[52,0.226,68,0.784]],["body/classes/Theme.html",[3,0.451,4,0.375,8,0.375,10,0.654,12,0.853,19,0.992,35,0.061,51,0.451,52,0.181,62,1.11,68,1.566,71,0.034,72,0.034,76,1.16,89,0.375,90,0.775,91,1.453,93,0.535,96,1.191,99,1.062,100,0.535,101,0.835,102,0.535,103,2.399,108,1.168,111,0.999,114,1.16,116,0.853,117,0.733,118,0.853,119,0.853,120,1.371,122,0.654,123,2.034,124,1.758,126,3.202,127,3.086,129,2.56,130,2.56,131,1.986,132,2.993,133,1.813,135,2.534,136,2.167,137,2.394,139,2.399,142,3.086,143,2.394,146,2.301,148,1.6,152,1.986,153,1.986,154,2.394,156,1.369,199,1.986,203,0.775,332,2.394,333,2.394,338,2.56,359,1.986,400,1.652,401,2.08,402,2.08,403,1.652,404,5.073,405,2.08,406,2.08,407,3.885,408,3.013,409,3.013,410,3.885,411,3.885,412,2.08,413,3.086,414,3.086,415,2.08,416,2.08,417,2.08,418,4.542,419,2.08,420,2.08,421,2.08,422,3.013]],["title/injectables/ThemeService.html",[157,0.915,423,1.449]],["body/injectables/ThemeService.html",[3,0.358,4,0.625,6,1.654,8,0.298,10,0.752,11,0.922,12,1.739,34,1.088,35,0.061,36,0.499,51,0.55,52,0.325,62,0.67,68,1.585,71,0.029,72,0.045,83,1.416,84,0.677,89,0.298,90,0.653,91,1.384,93,0.425,96,1.057,99,0.894,100,0.795,101,0.712,102,0.795,108,1.091,109,1.266,111,0.795,116,1.421,117,1.615,118,1.739,119,1.852,122,0.55,123,1.783,124,1.653,133,1.391,135,1.416,148,1.221,156,1.221,157,0.894,159,0.922,161,2.796,163,1.654,164,1.416,166,2.754,167,2.016,168,2.119,169,1.924,170,2.016,171,2.016,172,3.266,173,2.016,175,3.456,186,1.416,188,2.602,196,2.016,199,1.672,200,2.036,203,1.162,204,1.089,205,2.454,208,2.454,210,1.884,213,2.016,219,1.211,220,1.416,226,2.016,227,2.016,228,1.416,233,1.089,241,2.016,242,2.016,243,2.016,244,2.016,259,1.672,265,0.788,268,1.313,297,1.934,363,2.016,364,2.016,413,3.37,414,3.37,423,2.087,424,1.313,425,3.824,426,3.09,427,3.466,428,3.466,429,2.538,430,3.466,431,1.652,432,2.538,433,2.538,434,2.538,435,2.016,436,2.538,437,2.538,438,2.016,439,2.538,440,1.652,441,2.538,442,2.538,443,3.466,444,1.652,445,2.538,446,1.652,447,2.538,448,2.538,449,2.538,450,2.538,451,2.538,452,1.652,453,2.538,454,2.538,455,2.538,456,2.538,457,2.538,458,3.466,459,3.466,460,3.466,461,2.538,462,2.538,463,2.538,464,2.538,465,2.538,466,1.652,467,1.652,468,1.313,469,1.652,470,2.538,471,2.538,472,1.652,473,1.652,474,3.09,475,1.652,476,1.652,477,1.652,478,2.538,479,1.652,480,1.652,481,1.652,482,1.652,483,1.652,484,1.652]],["title/components/ThemeSwitcher.html",[0,0.563,28,1.064]],["body/components/ThemeSwitcher.html",[0,0.976,1,1.546,2,1.204,3,0.436,4,0.362,5,1.121,6,0.958,7,1.121,8,0.362,10,0.753,19,0.958,20,2.37,21,1.639,25,2.289,27,0.823,28,1.567,29,0.823,30,1.639,32,1.639,34,1.497,35,0.061,36,0.606,42,2.269,43,1.121,46,2.799,48,0.606,51,0.637,52,0.175,56,1.121,57,1.639,58,1.402,59,1.121,60,2.132,61,1.121,62,0.829,63,1.121,64,0.823,65,1.121,66,0.436,67,1.121,68,1.589,69,0.958,70,1.121,71,0.033,72,0.033,75,1.402,76,1.639,84,1.204,89,0.362,90,0.756,91,1.386,93,0.517,96,1.046,100,0.756,101,0.689,102,0.756,103,1.639,108,1.092,109,1.424,111,0.756,112,0.958,117,1.035,122,0.637,133,1.224,146,2.132,148,1.346,156,1.035,163,2.027,168,1.824,169,1.741,186,1.639,188,2.965,197,1.936,198,1.936,200,1.936,203,0.756,210,2.146,217,1.639,228,1.639,265,1.402,277,1.324,278,3.036,279,2.334,280,2.334,281,2.334,282,2.334,283,1.936,284,2.759,285,2.759,287,2.334,288,2.334,289,3.036,290,3.646,297,2.37,299,2.334,301,1.596,308,1.596,309,1.596,311,2.334,317,2.334,320,2.334,351,2.334,359,1.936,370,1.936,423,2.51,425,3.574,435,2.334,485,3.375,486,3.822,487,4.248,488,2.938,489,2.009,490,2.938,491,2.938,492,2.009,493,2.009,494,2.938,495,2.938,496,2.009,497,2.009,498,2.009,499,2.009,500,2.009,501,2.009,502,2.009,503,2.938,504,2.938]],["title/coverage.html",[505,2.797]],["body/coverage.html",[0,1,1,1.404,8,0.565,9,2.49,27,1.285,28,1.285,29,1.285,35,0.06,41,2.066,46,2.066,48,1.323,49,2.066,52,0.381,66,0.68,68,0.947,71,0.045,72,0.045,73,2.49,74,2.49,95,1.749,101,0.565,115,2.49,136,1.749,157,1.543,158,1.496,160,2.49,203,0.806,276,2.49,277,2.626,321,2.49,347,2.49,400,2.49,423,1.749,424,2.49,485,2.49,505,2.49,506,3.135,507,3.135,508,3.166,509,5.088,510,2.49,511,5.049,512,5.049,513,2.49,514,3.166,515,2.49,516,2.49,517,2.49,518,2.49,519,5.121,520,3.985,521,4.381,522,3.985,523,3.135,524,3.135,525,3.985,526,2.49,527,2.49,528,3.662,529,2.49,530,2.49,531,2.49,532,3.135,533,3.135]],["title/dependencies.html",[534,1.732,535,2.476]],["body/dependencies.html",[35,0.06,36,1.111,37,2.898,38,2.424,39,2.922,71,0.05,72,0.05,231,3.494,232,2.052,468,2.922,535,2.922,536,3.678,537,3.737,538,5.112,539,3.678,540,3.678,541,3.678,542,2.424,543,3.678,544,3.678,545,3.678,546,2.922,547,3.678,548,2.922,549,3.678,550,3.678,551,3.678,552,3.678,553,3.678,554,3.678,555,3.678]],["title/index.html",[89,0.393,556,2.18,557,2.18]],["body/index.html",[0,0.949,2,1.283,4,0.564,12,1.631,16,2.062,35,0.045,69,1.493,71,0.045,72,0.045,81,2.062,124,1.402,168,1.493,169,1.283,192,3.036,202,2.486,203,0.805,204,3.204,219,1.899,232,1.746,265,1.493,269,2.486,326,2.486,370,2.623,403,2.486,438,2.486,537,2.486,542,2.885,558,3.129,559,4.377,560,3.129,561,3.778,562,3.98,563,3.129,564,3.129,565,4.756,566,4.862,567,3.129,568,3.98,569,3.129,570,3.129,571,3.129,572,3.129,573,3.129,574,3.129,575,3.129,576,3.129,577,3.98,578,3.129,579,3.129,580,3.129,581,4.377,582,3.129,583,3.129,584,3.129,585,3.129,586,3.129,587,3.477,588,3.129,589,3.129,590,3.129,591,3.129,592,3.129,593,3.129,594,3.129,595,3.129,596,3.129,597,3.98,598,4.377,599,3.129,600,3.129,601,3.129,602,3.129,603,3.129,604,4.377,605,3.129,606,4.862,607,3.129,608,3.98,609,3.129,610,3.129,611,3.129,612,3.129,613,3.129,614,3.129,615,3.129,616,3.129,617,3.129,618,3.129,619,3.129,620,3.129,621,2.062,622,3.129]],["title/modules.html",[623,2.797]],["body/modules.html",[35,0.053,71,0.053,72,0.053,623,3.286]],["title/overview.html",[621,2.32]],["body/overview.html",[2,1.672,35,0.053,71,0.053,72,0.053,114,2.275,159,2.275,257,3.711,271,3.24,621,2.688]],["title/properties.html",[122,0.676,534,1.732]],["body/properties.html",[35,0.056,71,0.053,72,0.053,81,2.707,122,0.891,624,4.107]],["title/miscellaneous/variables.html",[625,1.732,626,2.476]],["body/miscellaneous/variables.html",[1,1.385,35,0.061,71,0.045,72,0.045,89,0.553,101,0.825,103,1.712,192,2.023,203,1.011,219,2.419,220,2.829,232,1.712,302,2.438,323,2.023,508,2.438,510,3.446,513,3.446,514,2.438,515,3.123,516,3.446,517,2.438,518,3.123,526,2.438,527,3.123,528,2.438,529,3.123,530,3.123,531,3.123,542,2.023,546,2.438,548,2.438,561,2.438,587,2.438,625,2.438,626,2.438,627,4.574,628,3.931,629,3.069,630,3.931,631,3.069,632,3.069,633,3.069,634,3.069,635,3.069,636,3.069,637,3.069,638,3.069,639,3.069,640,3.069,641,3.931,642,3.931,643,3.069,644,3.069,645,3.069,646,3.069,647,3.069,648,3.069,649,3.069,650,3.069,651,3.069,652,3.069,653,3.931,654,3.069,655,3.069,656,3.069,657,3.069,658,3.069,659,3.069,660,3.069,661,3.069,662,3.069,663,3.069,664,3.069,665,3.069,666,3.069]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":624,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{}}}],["2.3.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":537,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["3/3",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["5",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":325,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["active",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":615,"title":{},"body":{"index.html":{}}}],["allows",{"_index":280,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":448,"title":{},"body":{"injectables/ThemeService.html":{}}}],["anchor",{"_index":372,"title":{},"body":{"injectables/ResumeService.html":{}}}],["angular",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":468,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":43,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/grid",{"_index":310,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":309,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":308,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":55,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":33,"title":{},"body":{"components/App.html":{}}}],["app.title",{"_index":53,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["application's",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["applicationconfig",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":435,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["array",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":590,"title":{},"body":{"index.html":{}}}],["associated",{"_index":338,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{}}}],["assumes",{"_index":447,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["automatically",{"_index":572,"title":{},"body":{"index.html":{}}}],["available",{"_index":169,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["back",{"_index":362,"title":{},"body":{"injectables/ResumeService.html":{}}}],["based",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["body",{"_index":441,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":465,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":587,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":588,"title":{},"body":{"index.html":{}}}],["button",{"_index":50,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{}}}],["button'},{'name",{"_index":65,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["button.html",{"_index":87,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.scss",{"_index":88,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts",{"_index":74,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["button.ts:20",{"_index":97,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts:34",{"_index":106,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button/download",{"_index":49,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["calls",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":427,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":439,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["checks",{"_index":367,"title":{},"body":{"injectables/ResumeService.html":{}}}],["choice",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":612,"title":{},"body":{"index.html":{}}}],["class",{"_index":52,"title":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":114,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":561,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["clicked",{"_index":79,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["cloud",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":124,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":610,"title":{},"body":{"index.html":{}}}],["command",{"_index":604,"title":{},"body":{"index.html":{}}}],["compile",{"_index":589,"title":{},"body":{"index.html":{}}}],["complete",{"_index":583,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":61,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":453,"title":{},"body":{"injectables/ThemeService.html":{}}}],["const",{"_index":386,"title":{},"body":{"injectables/ResumeService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":469,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":431,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":131,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":294,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(resumeservice",{"_index":94,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["constructor(themeservice",{"_index":489,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":359,"title":{},"body":{"injectables/ResumeService.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":459,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":161,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["core/language/language.model",{"_index":307,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":306,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/resume/resume.service",{"_index":110,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["core/theming/theme.model",{"_index":496,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":497,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["coverage",{"_index":505,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":98,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{}}}],["current",{"_index":84,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentresume",{"_index":356,"title":{},"body":{"injectables/ResumeService.html":{}}}],["currenttheme",{"_index":426,"title":{},"body":{"injectables/ThemeService.html":{}}}],["curriculum",{"_index":379,"title":{},"body":{"injectables/ResumeService.html":{}}}],["dark",{"_index":414,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":463,"title":{},"body":{"injectables/ThemeService.html":{}}}],["de",{"_index":380,"title":{},"body":{"injectables/ResumeService.html":{}}}],["default",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":96,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":436,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":535,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detailed",{"_index":618,"title":{},"body":{"index.html":{}}}],["dev",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":562,"title":{},"body":{"index.html":{}}}],["different",{"_index":283,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["directive",{"_index":59,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directory",{"_index":592,"title":{},"body":{"index.html":{}}}],["display",{"_index":146,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":279,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":591,"title":{},"body":{"index.html":{}}}],["document",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["document.createelement('a",{"_index":393,"title":{},"body":{"injectables/ResumeService.html":{}}}],["documentation",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":119,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["download",{"_index":64,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["downloaded",{"_index":398,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloading",{"_index":77,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["downloadresume",{"_index":357,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloadresumebutton",{"_index":29,"title":{"components/DownloadResumeButton.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["downloads",{"_index":80,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["during",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":139,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":607,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":609,"title":{},"body":{"index.html":{}}}],["each",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["el",{"_index":378,"title":{},"body":{"injectables/ResumeService.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":142,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":320,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":140,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["encapsulates",{"_index":402,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":606,"title":{},"body":{"index.html":{}}}],["english",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":116,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["es",{"_index":141,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["español",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["execute",{"_index":599,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["express",{"_index":548,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["falls",{"_index":361,"title":{},"body":{"injectables/ResumeService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["filepath",{"_index":327,"title":{},"body":{"classes/Resume.html":{}}}],["files",{"_index":576,"title":{},"body":{"index.html":{}}}],["finds",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["flag",{"_index":125,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":456,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":603,"title":{},"body":{"index.html":{}}}],["format",{"_index":335,"title":{},"body":{"classes/Resume.html":{}}}],["found",{"_index":364,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["framework",{"_index":611,"title":{},"body":{"index.html":{}}}],["full",{"_index":299,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["functions",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":581,"title":{},"body":{"index.html":{}}}],["generated",{"_index":560,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":291,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":486,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":127,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":428,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getfilepath",{"_index":329,"title":{},"body":{"classes/Resume.html":{}}}],["getflag",{"_index":128,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":407,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":129,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagecode",{"_index":330,"title":{},"body":{"classes/Resume.html":{}}}],["getlanguagelist",{"_index":292,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getlanguages",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":130,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["gets",{"_index":148,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getters",{"_index":324,"title":{},"body":{"classes/Resume.html":{}}}],["getthemebycode",{"_index":429,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":445,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":487,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":430,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":556,"title":{"index.html":{}},"body":{}}],["handle",{"_index":105,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["handler",{"_index":302,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":166,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["handling",{"_index":349,"title":{},"body":{"injectables/ResumeService.html":{}}}],["hc",{"_index":460,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":586,"title":{},"body":{"index.html":{}}}],["high",{"_index":458,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holds",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":571,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":332,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["i18n",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":404,"title":{},"body":{"classes/Theme.html":{}}}],["id",{"_index":126,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":136,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":410,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":578,"title":{},"body":{"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"classes/Resume.html":{},"index.html":{}}}],["index",{"_index":89,"title":{"index.html":{}},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":326,"title":{},"body":{"classes/Resume.html":{},"index.html":{}}}],["initialize",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["initiates",{"_index":107,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["inject",{"_index":467,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":157,"title":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":159,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":437,"title":{},"body":{"injectables/ThemeService.html":{}}}],["instance",{"_index":99,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["integrate",{"_index":165,"title":{},"body":{"injectables/LanguageService.html":{}}}],["integrates",{"_index":354,"title":{},"body":{"injectables/ResumeService.html":{}}}],["internal",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["internally",{"_index":104,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["invoked",{"_index":303,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["iso",{"_index":334,"title":{},"body":{"classes/Resume.html":{}}}],["item",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":600,"title":{},"body":{"index.html":{}}}],["label",{"_index":290,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["lang.getcode",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":319,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":318,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":316,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":66,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language/language.service",{"_index":385,"title":{},"body":{"injectables/ResumeService.html":{}}}],["languagecode",{"_index":328,"title":{},"body":{"classes/Resume.html":{}}}],["languagecodes",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":162,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["languageservice",{"_index":158,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":27,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":413,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":461,"title":{},"body":{"injectables/ThemeService.html":{}}}],["link",{"_index":392,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.click",{"_index":399,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.download",{"_index":396,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.href",{"_index":394,"title":{},"body":{"injectables/ResumeService.html":{}}}],["list",{"_index":168,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":546,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":433,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":564,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":472,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":484,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":351,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["luis",{"_index":374,"title":{},"body":{"injectables/ResumeService.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":164,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":491,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":167,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["matbutton",{"_index":86,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["matbuttonmodule",{"_index":25,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["match",{"_index":363,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["matches",{"_index":82,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":411,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":286,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":285,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":284,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":90,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":625,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":118,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["models",{"_index":322,"title":{},"body":{"classes/Resume.html":{}}}],["modify",{"_index":575,"title":{},"body":{"index.html":{}}}],["modules",{"_index":623,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":617,"title":{},"body":{"index.html":{}}}],["multilingual",{"_index":350,"title":{},"body":{"injectables/ResumeService.html":{}}}],["multiple",{"_index":352,"title":{},"body":{"injectables/ResumeService.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":582,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":570,"title":{},"body":{"index.html":{}}}],["needed",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":614,"title":{},"body":{"index.html":{}}}],["new",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":566,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["nothing",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":132,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":409,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":117,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":480,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":569,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":594,"title":{},"body":{"index.html":{}}}],["option",{"_index":401,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":621,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":534,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":622,"title":{},"body":{"index.html":{}}}],["param",{"_index":111,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":323,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":78,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["performance",{"_index":595,"title":{},"body":{"index.html":{}}}],["persist",{"_index":483,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":585,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":558,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":579,"title":{},"body":{"index.html":{}}}],["preference",{"_index":85,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["private",{"_index":123,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":593,"title":{},"body":{"index.html":{}}}],["project",{"_index":559,"title":{},"body":{"index.html":{}}}],["properties",{"_index":122,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["protected",{"_index":289,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":360,"title":{},"body":{"injectables/ResumeService.html":{}}}],["providedin",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":75,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":91,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["re",{"_index":366,"title":{},"body":{"injectables/ResumeService.html":{}}}],["readable",{"_index":333,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["reference",{"_index":438,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":619,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":495,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":573,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":476,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":479,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representation",{"_index":406,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":143,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":120,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestresume",{"_index":92,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["resources",{"_index":616,"title":{},"body":{"index.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":48,"title":{"classes/Resume.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["resume's",{"_index":342,"title":{},"body":{"classes/Resume.html":{}}}],["resume(1",{"_index":373,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume(2",{"_index":377,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.getlanguagecode",{"_index":390,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.model",{"_index":384,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_en.pdf",{"_index":376,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_es.pdf",{"_index":382,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumes",{"_index":348,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumeservice",{"_index":95,"title":{"injectables/ResumeService.html":{}},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["retrieve",{"_index":451,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":156,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":108,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["rodriguez",{"_index":381,"title":{},"body":{"injectables/ResumeService.html":{}}}],["rodriguez\\'s",{"_index":375,"title":{},"body":{"injectables/ResumeService.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":63,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":565,"title":{},"body":{"index.html":{}}}],["runner",{"_index":602,"title":{},"body":{"index.html":{}}}],["running",{"_index":568,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":450,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":434,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":442,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":577,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":584,"title":{},"body":{"index.html":{}}}],["search",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":282,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":297,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selects",{"_index":368,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serve",{"_index":355,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serveonce",{"_index":567,"title":{},"body":{"index.html":{}}}],["server",{"_index":542,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":163,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":293,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":300,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":488,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":494,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/download",{"_index":47,"title":{},"body":{"components/App.html":{}}}],["shared/components/language",{"_index":40,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":45,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":304,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":305,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["speed",{"_index":596,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":115,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":144,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":145,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":138,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":134,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":150,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":151,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":147,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":149,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":160,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:108",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:33",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:43",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:75",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:84",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:94",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/resume/resume.model.ts",{"_index":321,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.model.ts:19",{"_index":336,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:27",{"_index":339,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:35",{"_index":337,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:43",{"_index":331,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:65",{"_index":341,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:74",{"_index":344,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:83",{"_index":343,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:92",{"_index":340,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.service.ts",{"_index":347,"title":{},"body":{"injectables/ResumeService.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.service.ts:28",{"_index":383,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:39",{"_index":358,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:62",{"_index":365,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":400,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:14",{"_index":415,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:21",{"_index":416,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:28",{"_index":412,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:35",{"_index":408,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:56",{"_index":420,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:64",{"_index":421,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:72",{"_index":417,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:80",{"_index":419,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":424,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:108",{"_index":440,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:33",{"_index":466,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:46",{"_index":432,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:71",{"_index":444,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:80",{"_index":452,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:94",{"_index":446,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/shared/components/download",{"_index":73,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["src/app/shared/components/language",{"_index":276,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":485,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":563,"title":{},"body":{"index.html":{}}}],["started",{"_index":557,"title":{"index.html":{}},"body":{}}],["state",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":470,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":133,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":32,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["such",{"_index":403,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":613,"title":{},"body":{"index.html":{}}}],["supported",{"_index":121,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":42,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":67,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":287,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":288,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":277,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:30",{"_index":490,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:31",{"_index":295,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:47",{"_index":296,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:48",{"_index":492,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:56",{"_index":298,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:57",{"_index":493,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:67",{"_index":301,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher/language",{"_index":41,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":46,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":278,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":137,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["temporary",{"_index":371,"title":{},"body":{"injectables/ResumeService.html":{}}}],["test",{"_index":601,"title":{},"body":{"index.html":{}}}],["testing",{"_index":608,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":605,"title":{},"body":{"index.html":{}}}],["tests",{"_index":598,"title":{},"body":{"index.html":{}}}],["theme",{"_index":68,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":418,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":455,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":457,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":462,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":464,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":478,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.geticon",{"_index":502,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getid",{"_index":503,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getname",{"_index":504,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":443,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":425,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":423,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":28,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":405,"title":{},"body":{"classes/Theme.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":473,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":154,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentresume",{"_index":388,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getfilepath",{"_index":395,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getname",{"_index":397,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currenttheme",{"_index":474,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":471,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":482,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":481,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.filepath",{"_index":346,"title":{},"body":{"classes/Resume.html":{}}}],["this.flag",{"_index":155,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":422,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":152,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":311,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["this.languagecode",{"_index":345,"title":{},"body":{"classes/Resume.html":{}}}],["this.languages",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":315,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":313,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getcode",{"_index":387,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":312,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":314,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":153,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.resumes.find(resume",{"_index":389,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumes[0",{"_index":391,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumeservice.downloadresume",{"_index":113,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["this.themes",{"_index":475,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":477,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":454,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":501,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":499,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().geticon",{"_index":498,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":500,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":275,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":274,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":449,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":580,"title":{},"body":{"index.html":{}}}],["track",{"_index":317,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":54,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["translate/core",{"_index":38,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["translateservice",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["triggers",{"_index":369,"title":{},"body":{"injectables/ResumeService.html":{}}}],["true",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":101,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":76,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":135,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":597,"title":{},"body":{"index.html":{}}}],["update",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["use",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":103,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":281,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["user's",{"_index":83,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["using",{"_index":370,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":626,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":81,"title":{},"body":{"components/DownloadResumeButton.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":353,"title":{},"body":{"injectables/ResumeService.html":{}}}],["visit",{"_index":620,"title":{},"body":{"index.html":{}}}],["void",{"_index":109,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":574,"title":{},"body":{"index.html":{}}}],["window",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["zone.js",{"_index":554,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                                DownloadResumeButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\nimport { DownloadResumeButton } from \"./shared/components/download-resume-button/download-resume-button\";\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe,\n    TranslateDirective,\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher,\n    DownloadResumeButton\n],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadResumeButton.html":{"url":"components/DownloadResumeButton.html","title":"component - DownloadResumeButton","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DownloadResumeButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/download-resume-button/download-resume-button.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI button for downloading the resume PDF.\nWhen clicked, it downloads the version of the resume that matches the\nuser's current language preference.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-resume-button\n            \n\n\n            \n                imports\n                \n                            MatButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-resume-button.html\n            \n\n\n\n            \n                styleUrl\n                ./download-resume-button.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeService: ResumeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadResumeButton.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        resumeService\n                                                  \n                                                        \n                                                                        ResumeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used internally to handle the resume download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestResume\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:34\n                        \n                    \n\n\n            \n                \n                        Initiates the download of the resume PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ResumeService } from '../../../core/resume/resume.service';\nimport { MatButton } from '@angular/material/button';\n\n/**\n * Component that provides a UI button for downloading the resume PDF.\n * \n * When clicked, it downloads the version of the resume that matches the \n * user's current language preference.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-download-resume-button',\n  imports: [MatButton],\n  templateUrl: './download-resume-button.html',\n  styleUrl: './download-resume-button.scss'\n})\nexport class DownloadResumeButton {\n\n  /**\n   * Creates an instance of DownloadResumeButton.\n   * \n   * @param {ResumeService} resumeService Used internally to handle the resume download.\n   */\n  constructor(private resumeService: ResumeService) {}\n\n  /**\n   * Initiates the download of the resume PDF.\n   * \n   * @returns {void}\n   */\n  public requestResume(): void {\n    this.resumeService.downloadResume();\n  }\n}\n    \n\n    \n        \nDownload Resume\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Download Resume'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadResumeButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Languages Control\" (model domain)\nService to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentLanguage\n                            \n                            \n                                    Private\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Language to apply. An instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:43\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Control Object: \"Languages Control\" (model domain)\n * \n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @private\n   * @type {Language[]}\n   */\n  private languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @private\n   * @type {Language}\n   */\n  private currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 2: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 3: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - The new `Language` to apply. An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                getLanguageList\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available languages from the service.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                An array of Language objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Gets the full list of available languages from the service.\n   *\n   * @returns {Language[]} An array of `Language` objects.\n   */\n  public getLanguageList(): Language[] {\n    return this.languageService.getLanguages();\n  }\n\n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of getLanguageList(); track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of getLanguageList(); track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Resume\" (model domain)\nThis class models the properties of a resume, including its ID, name,\nlanguage code, and file path. It provides public getters to access\nthis information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                languageCode\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFilePath\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLanguageCode\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, languageCode: string, filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.model.ts:43\n                            \n                        \n\n                \n                    \n                            Creates a new Resume instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier for the resume.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Human-readable name for the resume.\n\n                                                        \n                                                \n                                                \n                                                        languageCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language code of the resume (ISO format).\n\n                                                        \n                                                \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to the PDF file for download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:43\n                        \n                    \n\n            \n                \n                    Path to the PDF file for this resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:19\n                        \n                    \n\n            \n                \n                    Unique identifier for the resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:35\n                        \n                    \n\n            \n                \n                    Language code associated with the resume (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:27\n                        \n                    \n\n            \n                \n                    Display name of the resume.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:92\n                        \n                    \n\n\n            \n                \n                        Gets the file path to the resume PDF.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The file path to the PDF.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the resume.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The resume's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the language code of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en', 'es').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:74\n                        \n                    \n\n\n            \n                \n                        Gets the name of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The resume's display name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Resume {\n  \n  /**\n   * Unique identifier for the resume.\n   * \n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code associated with the resume (e.g., 'en', 'es').\n   * \n   * @private\n   * @type {string}\n   */\n  private languageCode: string;\n\n  /**\n   * Path to the PDF file for this resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private filePath: string;\n\n  /**\n   * Creates a new Resume instance.\n   * \n   * @param {number} id Unique identifier for the resume.\n   * @param {string} name Human-readable name for the resume.\n   * @param {string} languageCode Language code of the resume (ISO format).\n   * @param {string} filePath Path to the PDF file for download.\n   */\n  constructor(id: number, name: string, languageCode: string, filePath: string) {\n    this.id = id;\n    this.name = name;\n    this.languageCode = languageCode;\n    this.filePath = filePath;\n  }\n\n  /**\n   * Gets the unique ID of the resume.\n   * \n   * @returns {number} The resume's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the name of the resume.\n   * \n   * @returns {string} The resume's display name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the language code of the resume.\n   * \n   * @returns {string} The language code (e.g., 'en', 'es').\n   */\n  public getLanguageCode(): string {\n    return this.languageCode;\n  }\n\n  /**\n   * Gets the file path to the resume PDF.\n   * \n   * @returns {string} The file path to the PDF.\n   */\n  public getFilePath(): string {\n    return this.filePath;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumeService.html":{"url":"injectables/ResumeService.html","title":"injectable - ResumeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Resumes Control\" (model domain)\nService for handling multilingual resume file access and downloads.\nThis service provides logic to manage multiple versions of a resume\nin different languages. It integrates with the LanguageService to\nserve the resume matching the user's current language.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentResume\n                            \n                            \n                                    Private\n                                resumes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.service.ts:39\n                            \n                        \n\n                \n                    \n                            Constructs the ResumeService.\nInitializes the current resume based on the language code provided by\nthe LanguageService. Falls back to the first resume if no match is found.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that provides the current language code.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadResume\n                        \n                    \n                \n            \n            \n                \ndownloadResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Downloads the resume PDF corresponding to the user's current language.\nThis method re-checks the user's current language, selects the matching\nresume, and triggers a download using a temporary anchor element.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentResume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Resume\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:39\n                        \n                    \n\n            \n                \n                    The resume currently selected based on the user's language preference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resumes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:28\n                        \n                    \n\n            \n                \n                    Array of available resumes, each associated with a language code.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resume } from './resume.model';\nimport { LanguageService } from '../language/language.service';\n\n/**\n * Control Object: \"Resumes Control\" (model domain)\n *\n * Service for handling multilingual resume file access and downloads.\n * \n * This service provides logic to manage multiple versions of a resume\n * in different languages. It integrates with the LanguageService to \n * serve the resume matching the user's current language.\n *\n * @export\n * @class ResumeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  /**\n   * Array of available resumes, each associated with a language code.\n   * \n   * @private\n   * @type {Resume[]}\n   */\n  private resumes = [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ];\n\n  /**\n   * The resume currently selected based on the user's language preference.\n   * \n   * @private\n   * @type {Resume}\n   */\n  private currentResume: Resume;\n\n  /**\n   * Constructs the ResumeService.\n   * \n   * Initializes the current resume based on the language code provided by\n   * the LanguageService. Falls back to the first resume if no match is found.\n   * \n   * @param {LanguageService} languageService Service that provides the current language code.\n   */\n  constructor(private languageService: LanguageService) { \n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n  }\n\n  /**\n   * Downloads the resume PDF corresponding to the user's current language.\n   * \n   * This method re-checks the user's current language, selects the matching\n   * resume, and triggers a download using a temporary anchor element.\n   * \n   * @returns {void}\n   */\n  downloadResume(): void {\n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n    const link = document.createElement('a');\n    link.href = this.currentResume.getFilePath(); // Path to your PDF file\n    link.download = this.currentResume.getName(); // Name of the downloaded file\n    link.click();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Theme\" (model domain)\nRepresents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:35\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (Material icon name or emoji).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:28\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:35\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:14\n                        \n                    \n\n            \n                \n                    Unique identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:21\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:72\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n   /**\n   * Unique identifier for the theme.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   * @private\n   * @type {string}\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Themes Control\" (model domain)\nService to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:46\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\nExample :                     mapped to the \"theme.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply. An instance of the Entity Object \"Theme\" (model domain),\n  mapped to the \"theme.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:46\n                        \n                    \n\n            \n                \n                    The currently active theme as a Theme object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Themes Control\" (model domain),\nwhich holds a list of available themes as Entity Objects \"Theme\" (model domain).\nList of available themes for the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Control Object: \"Themes Control\" (model domain)\n * \n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * The attribute of the Control Object \"Themes Control\" (model domain),\n   * which holds a list of available themes as Entity Objects \"Theme\" (model domain).\n   *\n   * List of available themes for the application.\n   * \n   * @private\n   * @type {Theme[]}\n   * \n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme as a Theme object.\n   *\n   * @private\n   * @type {Theme}\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns {Theme[]} A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param {string} code - The code of the theme to retrieve.\n   * @returns {Theme} The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   *\n   * @param {Theme} theme - The new `Theme` to apply. An instance of the Entity Object \"Theme\" (model domain),\n   *                          mapped to the \"theme.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's themes.\nDisplays the current theme and allows the user to select a different one\nfrom the list of available themes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:30\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:48\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:57\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:30\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\n\n/**\n * Component that provides a UI for switching the application's themes.\n * \n * Displays the current theme and allows the user to select a different one\n * from the list of available themes.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param {ThemeService} themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getIcon();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns {Theme[]} An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param {Theme} theme The selected theme.\n   * @returns {void}\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getIcon();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n\n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ theme.getName() }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ theme.getName() }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.model.ts\n            \n            class\n            Resume\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.service.ts\n            \n            injectable\n            ResumeService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/download-resume-button/download-resume-button.ts\n            \n            component\n            DownloadResumeButton\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
