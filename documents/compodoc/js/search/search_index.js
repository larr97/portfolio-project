var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.736,1,0.914]],["body/components/App.html",[0,1.131,1,1.48,2,0.976,3,0.5,4,0.403,5,0.958,6,2.595,7,0.958,8,0.403,9,0.958,10,1.116,11,2.139,12,1.404,13,1.986,14,1.986,15,1.986,16,1.516,17,1.986,18,1.986,19,0.763,20,2.139,21,1.516,22,2.464,23,2.464,24,2.464,25,1.376,26,1.881,27,1.881,28,1.881,29,2.464,30,1.516,31,1.986,32,1.516,33,1.986,34,0.32,35,0.506,36,1.731,37,2.464,38,2.464,39,0.791,40,1.536,41,2.801,42,2.801,43,1.986,44,3.245,45,0.5,46,1.255,47,2.77,48,2.801,49,3.245,50,1.354,51,1.986,52,0.976,53,0.791,54,1.516,55,1.854,56,2.195,57,2.595,58,1.826,59,1.986,60,1.986,61,0.982,62,0.085,63,1.354,64,0.713,65,0.982,66,1.986,67,1.516,68,1.702,69,1.986,70,1.702,71,0.638,72,1.986,73,1.986,74,1.255,75,1.516,76,2.477,77,1.516,78,1.516,79,1.986,80,1.207,81,1.881,82,1.986,83,1.516,84,1.217,85,2.464,86,1.354,87,1.207,88,1.255,89,1.376,90,1.702,91,1.986,92,1.216,93,1.255,94,1.516,95,1.207,96,1.51,97,1.986,98,0.051,99,1.986,100,1.986,101,1.986,102,1.986,103,1.255,104,1.594,105,3.245,106,1.516,107,1.516,108,1.376,109,1.207,110,1.986,111,1.986,112,1.516,113,1.516,114,1.986,115,1.986,116,2.691,117,1.986,118,1.986,119,2.801,120,2.801,121,2.801,122,1.986,123,1.986,124,2.691,125,1.986,126,1.986,127,1.986,128,1.255,129,1.516,130,1.516,131,1.516,132,2.258,133,1.255,134,0.617,135,0.763,136,0.763,137,0.958,138,1.255,139,0.763,140,1.516,141,0.958,142,0.958,143,0.958,144,0.958,145,1.255,146,1.255,147,0.791,148,1.116,149,1.255,150,1.986,151,2.464,152,1.516,153,1.516,154,1.516,155,1.516,156,1.255,157,1.255,158,1.116,159,2.464,160,1.255,161,1.255,162,2.464,163,1.255,164,1.255,165,0.617,166,1.255,167,1.255,168,0.958,169,1.255,170,1.255,171,1.516,172,1.986,173,1.986,174,1.516,175,1.986,176,2.139,177,1.986,178,1.986,179,0.958,180,1.516,181,1.516,182,0.958,183,2.139,184,0.958,185,0.958,186,0.403,187,0.763,188,0.958,189,0.036]],["title/classes/Language.html",[71,0.451,186,0.736]],["body/classes/Language.html",[3,0.728,4,0.587,8,0.587,10,1.052,12,0.728,34,0.466,35,0.673,36,2.122,39,1.052,40,1.67,45,0.728,50,1.607,52,1.297,53,1.052,61,0.728,62,0.084,63,1.73,64,1.028,65,0.728,68,1.111,71,0.36,86,1.577,89,1.945,92,1.797,95,2.279,96,1.721,98,0.048,147,0.728,148,1.352,158,1.352,186,1.456,189,0.048,190,1.111,191,1.396,192,1.111,193,1.396,194,1.396,195,1.111,196,1.396,197,4.319,198,3.127,199,2.591,200,3.394,201,2.591,202,2.591,203,2.016,204,3.127,205,2.64,206,2.063,207,3.751,208,1.828,209,2.063,210,2.591,211,2.016,212,2.016,213,2.591,214,1.828,215,1.828,216,2.016,217,1.828,218,1.828,219,1.828,220,1.828,221,2.016,222,2.016,223,2.016,224,2.64]],["title/injectables/LanguageService.html",[225,1.127,226,1.127]],["body/injectables/LanguageService.html",[3,0.5,4,0.899,8,0.403,10,1.116,11,0.958,12,1.116,34,0.32,35,0.506,36,0.617,39,0.791,40,1.536,45,0.5,47,2.477,50,1.354,52,0.976,53,1.293,54,1.516,55,1.497,57,2.691,58,1.499,61,0.982,62,0.085,63,0.982,64,0.827,65,0.982,68,2.343,71,0.391,75,1.516,76,2.894,77,1.516,78,1.516,80,1.207,81,1.516,84,1.217,86,1.404,87,1.497,89,1.376,90,1.702,92,1.116,94,1.516,96,1.48,98,0.036,104,1.731,106,1.516,107,1.516,108,1.499,109,1.207,112,1.516,113,0.958,129,1.516,132,1.702,134,0.617,135,2.065,136,0.763,147,0.791,148,1.116,152,1.516,153,1.516,154,1.516,155,1.516,158,1.116,165,0.617,168,0.958,176,2.77,186,1.461,189,0.036,192,1.972,193,2.477,194,2.77,195,1.207,196,2.139,209,1.207,210,2.139,211,2.139,225,0.976,226,1.499,227,1.255,228,0.958,229,3.059,230,1.516,231,2.944,232,1.986,233,1.986,234,1.986,235,1.986,236,2.801,237,3.399,238,4.007,239,2.691,240,2.464,241,2.464,242,2.801,243,1.986,244,2.801,245,1.255,246,3.052,247,2.801,248,1.986,249,2.801,250,3.052,251,2.464,252,3.052,253,1.207,254,2.464,255,1.986,256,1.255,257,1.516,258,2.139,259,1.986,260,1.881,261,0.958,262,2.464,263,2.801,264,2.139,265,1.255,266,1.986,267,1.255,268,1.986,269,1.986,270,1.255,271,1.986,272,1.986,273,1.986,274,1.986,275,1.986,276,1.255,277,1.986,278,2.801,279,1.986,280,1.986,281,0.958,282,1.211,283,1.255,284,0.958,285,3.524,286,1.516,287,1.986,288,2.464,289,1.986,290,2.464,291,1.255,292,1.986,293,1.986,294,1.255,295,1.255,296,1.255,297,1.986,298,1.255,299,1.255,300,1.255,301,1.255,302,1.255,303,1.986,304,1.255,305,1.255,306,1.255,307,2.464,308,1.255,309,1.255,310,1.255,311,1.986,312,1.986,313,0.958,314,0.958,315,1.255,316,1.255,317,1.255,318,1.255,319,1.255]],["title/components/LanguageSwitcher.html",[0,0.736,25,1.127]],["body/components/LanguageSwitcher.html",[0,1.178,1,1.398,2,1.238,3,0.683,4,0.551,5,1.309,6,1.309,7,1.309,8,0.551,10,1.19,19,1.042,20,2.514,21,1.924,25,1.802,26,2.281,27,2.281,28,2.281,30,1.924,32,1.924,34,0.437,35,0.642,39,1.004,40,1.461,45,0.683,50,1.398,52,1.238,53,1.004,55,2.001,58,1.802,61,1.004,62,0.085,63,1.461,64,0.934,65,1.004,71,0.337,83,2.97,86,1.461,87,1.816,90,2.001,92,1.19,98,0.046,104,1.724,132,2.304,134,0.843,139,2.229,140,2.281,142,1.309,143,1.309,144,1.309,147,1.004,148,1.004,158,0.683,165,1.238,171,1.924,174,1.924,179,1.309,180,1.924,181,1.924,182,1.309,183,2.514,184,1.309,185,1.309,186,1.449,187,1.042,188,1.309,189,0.046,192,1.531,226,1.911,229,2.514,230,1.924,231,2.97,239,2.97,257,1.924,258,2.514,264,2.514,284,1.309,320,2.801,321,1.309,322,2.52,323,3.294,324,2.52,325,2.52,326,2.52,327,2.52,328,2.52,329,2.52,330,2.988,331,2.52,332,2.52,333,3.97,334,3.509,335,3.294,336,2.52,337,1.715,338,2.52,339,1.715,340,2.52,341,1.715,342,1.924,343,2.52,344,1.715,345,2.52,346,1.715,347,1.715,348,1.715,349,1.715,350,1.715,351,1.715,352,2.52,353,1.715,354,1.715,355,1.715,356,2.988,357,2.52,358,2.52]],["title/classes/Theme.html",[56,1.127,71,0.451]],["body/classes/Theme.html",[3,0.71,4,0.572,8,0.572,10,1.033,12,0.71,19,1.084,34,0.454,35,0.661,36,2.05,39,1.033,40,1.662,45,0.71,50,1.597,53,1.033,56,2.215,61,0.71,62,0.084,63,1.77,64,0.908,65,0.71,70,2.166,71,0.351,80,1.576,84,0.832,86,1.567,89,1.932,92,1.765,95,2.39,96,1.724,98,0.047,116,2.562,124,1.98,131,3.361,147,0.71,148,1.337,158,1.337,189,0.047,190,1.084,195,1.084,198,3.216,199,2.562,201,2.562,202,2.562,203,1.98,204,2.931,206,2.039,209,2.26,212,2.562,213,1.98,216,2.562,221,1.98,222,1.98,223,1.98,359,1.362,360,1.784,361,1.784,362,1.362,363,3.355,364,2.593,365,2.593,366,3.355,367,3.355,368,1.784,369,1.98,370,3.355,371,2.593,372,1.784,373,1.784,374,2.593,375,2.593,376,1.784,377,3.933,378,1.784,379,1.784,380,1.784,381,2.593]],["title/coverage.html",[382,2.362]],["body/coverage.html",[0,1.144,1,1.419,8,0.915,9,2.176,25,1.4,56,1.4,62,0.083,64,0.726,71,0.701,84,0.915,98,0.065,139,1.732,186,0.915,189,0.065,191,2.176,206,1.732,225,1.4,226,1.4,228,2.176,320,2.176,321,2.176,359,2.176,382,2.176,383,2.851,384,2.851,385,2.72,386,4.454,387,2.176,388,4.423,389,4.423,390,2.176,391,2.72,392,2.176,393,2.176,394,2.176,395,2.176,396,4.276,397,3.563,398,3.563,399,2.851,400,2.176,401,2.176,402,3.109,403,2.176,404,2.176,405,2.176,406,2.851,407,2.851,408,2.851]],["title/dependencies.html",[409,1.476,410,2.098]],["body/dependencies.html",[62,0.084,98,0.069,134,1.55,135,2.304,136,1.917,137,2.409,141,2.409,189,0.069,281,2.895,282,1.55,410,2.409,411,3.155,412,3.104,413,4.431,414,3.155,415,3.155,416,3.155,417,1.917,418,3.155,419,3.155,420,3.155,421,2.409,422,3.155,423,2.409,424,3.155,425,3.155,426,3.155,427,3.155,428,3.155,429,3.155,430,3.155]],["title/index.html",[34,0.492,431,1.933,432,1.933]],["body/index.html",[0,1.206,2,1.301,4,0.85,12,1.355,16,2.022,58,1.301,62,0.062,67,2.022,84,0.85,96,1.355,98,0.062,104,1.301,108,1.671,130,2.022,165,1.301,187,1.61,189,0.062,253,2.409,260,2.022,261,3.203,282,1.301,314,2.022,362,2.022,412,2.022,417,2.283,433,2.649,434,3.757,435,2.649,436,3.401,437,3.13,438,2.022,439,3.401,440,2.649,441,2.649,442,4.1,443,4.196,444,2.649,445,3.401,446,2.649,447,2.649,448,2.649,449,2.649,450,2.649,451,2.649,452,2.649,453,2.649,454,3.401,455,2.649,456,2.649,457,3.757,458,2.649,459,2.649,460,2.649,461,2.649,462,2.649,463,2.868,464,2.649,465,2.649,466,2.649,467,2.649,468,2.649,469,2.649,470,2.649,471,2.649,472,2.649,473,3.401,474,3.757,475,2.649,476,2.649,477,2.649,478,2.649,479,2.649,480,3.757,481,2.649,482,4.196,483,2.649,484,3.401,485,2.649,486,2.649,487,2.649,488,2.649,489,2.649,490,2.649,491,2.649,492,2.649,493,2.649,494,2.649,495,2.649,496,2.649,497,2.649,498,1.61,499,2.649]],["title/modules.html",[500,2.362]],["body/modules.html",[62,0.074,98,0.074,189,0.074,500,2.739]],["title/overview.html",[498,1.88]],["body/overview.html",[2,1.736,62,0.074,98,0.074,189,0.074,190,2.147,225,1.736,286,2.698,313,3.094,498,2.147]],["title/properties.html",[35,0.7,409,1.476]],["body/properties.html",[35,0.907,62,0.078,98,0.074,189,0.074,438,2.718,501,3.561]],["title/miscellaneous/variables.html",[502,1.476,503,2.098]],["body/miscellaneous/variables.html",[1,1.337,34,0.661,62,0.084,64,1.002,70,1.577,84,1.077,98,0.061,108,2.155,109,2.665,189,0.061,253,1.577,282,1.275,342,1.981,369,1.981,385,1.981,387,2.84,390,2.84,391,1.981,392,2.562,393,2.84,394,1.981,395,2.562,400,1.981,401,2.562,402,1.981,403,2.562,404,2.562,405,2.562,417,1.577,421,1.981,423,1.981,437,1.981,463,1.981,502,1.981,503,1.981,504,3.934,505,3.356,506,2.595,507,3.356,508,2.595,509,2.595,510,2.595,511,2.595,512,2.595,513,2.595,514,2.595,515,2.595,516,2.595,517,2.595,518,3.356,519,3.356,520,2.595,521,2.595,522,2.595,523,2.595,524,2.595,525,2.595,526,2.595,527,2.595,528,2.595,529,2.595,530,3.356,531,2.595,532,2.595,533,2.595,534,2.595,535,2.595,536,2.595,537,2.595,538,2.595,539,2.595,540,2.595,541,2.595,542,2.595,543,2.595]]],"invertedIndex":[["",{"_index":62,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":501,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":286,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["1/1",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":313,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["2.3.0",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":412,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":293,"title":{},"body":{"injectables/LanguageService.html":{}}}],["4",{"_index":303,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5",{"_index":317,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":76,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":188,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["add",{"_index":300,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":491,"title":{},"body":{"index.html":{}}}],["allows",{"_index":326,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["always",{"_index":101,"title":{},"body":{"components/App.html":{}}}],["angular",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular's",{"_index":69,"title":{},"body":{"components/App.html":{}}}],["angular/cdk",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":141,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":134,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":142,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/grid",{"_index":349,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":144,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/menu",{"_index":143,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/toolbar",{"_index":145,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":137,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":177,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":33,"title":{},"body":{"components/App.html":{}}}],["app.title",{"_index":175,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"index.html":{}}}],["application's",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["applicationconfig",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":59,"title":{},"body":{"components/App.html":{}}}],["apply",{"_index":85,"title":{},"body":{"components/App.html":{}}}],["array",{"_index":106,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["artifacts",{"_index":466,"title":{},"body":{"index.html":{}}}],["associated",{"_index":370,"title":{},"body":{"classes/Theme.html":{}}}],["assumes",{"_index":99,"title":{},"body":{"components/App.html":{}}}],["attribute",{"_index":277,"title":{},"body":{"injectables/LanguageService.html":{}}}],["automatically",{"_index":449,"title":{},"body":{"index.html":{}}}],["available",{"_index":58,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["based",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["body",{"_index":79,"title":{},"body":{"components/App.html":{}}}],["bootstrap",{"_index":401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":127,"title":{},"body":{"components/App.html":{}}}],["browser",{"_index":282,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":463,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":464,"title":{},"body":{"index.html":{}}}],["button",{"_index":178,"title":{},"body":{"components/App.html":{}}}],["calls",{"_index":304,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":311,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":75,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["changetheme",{"_index":41,"title":{},"body":{"components/App.html":{}}}],["changetheme(theme",{"_index":73,"title":{},"body":{"components/App.html":{}}}],["check",{"_index":287,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choice",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choose",{"_index":488,"title":{},"body":{"index.html":{}}}],["class",{"_index":71,"title":{"classes/Language.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["classes",{"_index":190,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":437,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":96,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"index.html":{}}}],["codes",{"_index":298,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":486,"title":{},"body":{"index.html":{}}}],["command",{"_index":480,"title":{},"body":{"index.html":{}}}],["compile",{"_index":465,"title":{},"body":{"index.html":{}}}],["complete",{"_index":459,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":184,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":45,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["constructor(@inject(document",{"_index":149,"title":{},"body":{"components/App.html":{}}}],["constructor(document",{"_index":46,"title":{},"body":{"components/App.html":{}}}],["constructor(id",{"_index":203,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":337,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["constructor(private",{"_index":284,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["constructor(translate",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":365,"title":{},"body":{"classes/Theme.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contains",{"_index":361,"title":{},"body":{"classes/Theme.html":{}}}],["contrast",{"_index":120,"title":{},"body":{"components/App.html":{}}}],["control",{"_index":278,"title":{},"body":{"injectables/LanguageService.html":{}}}],["core/language/language.model",{"_index":348,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":347,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/theming/theme.model",{"_index":146,"title":{},"body":{"components/App.html":{}}}],["corresponding",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{}}}],["coverage",{"_index":382,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":52,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["current",{"_index":55,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["currentlanguage",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":90,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["currenttheme",{"_index":37,"title":{},"body":{"components/App.html":{}}}],["dark",{"_index":124,"title":{},"body":{"components/App.html":{},"classes/Theme.html":{}}}],["dark_mode",{"_index":125,"title":{},"body":{"components/App.html":{}}}],["default",{"_index":108,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["delegating",{"_index":60,"title":{},"body":{"components/App.html":{}}}],["dependencies",{"_index":410,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["detailed",{"_index":495,"title":{},"body":{"index.html":{}}}],["dev",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":439,"title":{},"body":{"index.html":{}}}],["different",{"_index":329,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["directive",{"_index":182,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["directives",{"_index":187,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["directory",{"_index":468,"title":{},"body":{"index.html":{}}}],["display",{"_index":216,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["displays",{"_index":325,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["dist",{"_index":467,"title":{},"body":{"index.html":{}}}],["document",{"_index":47,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["documentation",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["domain",{"_index":194,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["during",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":209,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":483,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":485,"title":{},"body":{"index.html":{}}}],["each",{"_index":129,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["element",{"_index":181,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["emoji",{"_index":212,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":174,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["en",{"_index":210,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["end",{"_index":482,"title":{},"body":{"index.html":{}}}],["english",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":192,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["es",{"_index":211,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["español",{"_index":275,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["execute",{"_index":475,"title":{},"body":{"index.html":{}}}],["exists",{"_index":102,"title":{},"body":{"components/App.html":{}}}],["export",{"_index":147,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["express",{"_index":423,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":112,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["files",{"_index":453,"title":{},"body":{"index.html":{}}}],["finds",{"_index":94,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["firebase",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":113,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["flag",{"_index":197,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":117,"title":{},"body":{"components/App.html":{}}}],["following",{"_index":479,"title":{},"body":{"index.html":{}}}],["framework",{"_index":487,"title":{},"body":{"index.html":{}}}],["functions",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":457,"title":{},"body":{"index.html":{}}}],["generated",{"_index":435,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":335,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getcode",{"_index":199,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":42,"title":{},"body":{"components/App.html":{}}}],["getflag",{"_index":200,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":363,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":201,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguages",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":202,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["gets",{"_index":89,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["getthemebycode",{"_index":43,"title":{},"body":{"components/App.html":{}}}],["getthemebycode(code",{"_index":91,"title":{},"body":{"components/App.html":{}}}],["getthemes",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["getting",{"_index":431,"title":{"index.html":{}},"body":{}}],["handler",{"_index":342,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":77,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["hc",{"_index":121,"title":{},"body":{"components/App.html":{}}}],["helpbuilding",{"_index":462,"title":{},"body":{"index.html":{}}}],["high",{"_index":119,"title":{},"body":{"components/App.html":{}}}],["holds",{"_index":279,"title":{},"body":{"injectables/LanguageService.html":{}}}],["html",{"_index":180,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["http",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":448,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":374,"title":{},"body":{"classes/Theme.html":{}}}],["i18n",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":131,"title":{},"body":{"components/App.html":{},"classes/Theme.html":{}}}],["id",{"_index":198,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":206,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":367,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":132,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["includes",{"_index":130,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["information",{"_index":494,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":294,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initialized",{"_index":111,"title":{},"body":{"components/App.html":{}}}],["initializes",{"_index":54,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["inject",{"_index":133,"title":{},"body":{"components/App.html":{}}}],["injectable",{"_index":225,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{}}}],["injected",{"_index":66,"title":{},"body":{"components/App.html":{}}}],["instance",{"_index":53,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["integrate",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["internal",{"_index":80,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["invoked",{"_index":343,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["item",{"_index":280,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":476,"title":{},"body":{"index.html":{}}}],["label",{"_index":333,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["lang.getcode",{"_index":297,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":358,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":357,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":356,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":186,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":274,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagecodes",{"_index":295,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagelist",{"_index":334,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["languages",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["languageservice",{"_index":226,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":25,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":179,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["light",{"_index":116,"title":{},"body":{"components/App.html":{},"classes/Theme.html":{}}}],["light_mode",{"_index":122,"title":{},"body":{"components/App.html":{}}}],["list",{"_index":104,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["loader",{"_index":421,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":441,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":57,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["localstorage.getitem('lang",{"_index":291,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":156,"title":{},"body":{"components/App.html":{}}}],["localstorage.setitem('lang",{"_index":315,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":170,"title":{},"body":{"components/App.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["managing",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["manipulation",{"_index":72,"title":{},"body":{"components/App.html":{}}}],["mapped",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matbuttonmodule",{"_index":26,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["match",{"_index":100,"title":{},"body":{"components/App.html":{}}}],["matches",{"_index":302,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matching",{"_index":98,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":371,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":330,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":28,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["matmenumodule",{"_index":27,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["mattoolbarmodule",{"_index":29,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["method",{"_index":305,"title":{},"body":{"injectables/LanguageService.html":{}}}],["methods",{"_index":39,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["miscellaneous",{"_index":502,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":193,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["modify",{"_index":452,"title":{},"body":{"index.html":{}}}],["modules",{"_index":500,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":493,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["namefor",{"_index":458,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":447,"title":{},"body":{"index.html":{}}}],["needed",{"_index":312,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":490,"title":{},"body":{"index.html":{}}}],["new",{"_index":84,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":443,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":135,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["nothing",{"_index":292,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":204,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":366,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":68,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["objects",{"_index":107,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["old",{"_index":164,"title":{},"body":{"components/App.html":{}}}],["one",{"_index":165,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["open",{"_index":446,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":470,"title":{},"body":{"index.html":{}}}],["option",{"_index":360,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":65,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["overview",{"_index":498,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":409,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":499,"title":{},"body":{"index.html":{}}}],["param",{"_index":148,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["parameters",{"_index":61,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["path",{"_index":369,"title":{},"body":{"classes/Theme.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":471,"title":{},"body":{"index.html":{}}}],["persist",{"_index":169,"title":{},"body":{"components/App.html":{}}}],["persisting",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["persists",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":461,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":433,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":455,"title":{},"body":{"index.html":{}}}],["private",{"_index":36,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["production",{"_index":469,"title":{},"body":{"index.html":{}}}],["project",{"_index":434,"title":{},"body":{"index.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"properties.html":{}}}],["protected",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["provide",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":283,"title":{},"body":{"injectables/LanguageService.html":{}}}],["providehttpclient",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":322,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":40,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["readable",{"_index":375,"title":{},"body":{"classes/Theme.html":{}}}],["reference",{"_index":67,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["references",{"_index":496,"title":{},"body":{"index.html":{}}}],["reload",{"_index":450,"title":{},"body":{"index.html":{}}}],["remove",{"_index":163,"title":{},"body":{"components/App.html":{}}}],["renderer",{"_index":48,"title":{},"body":{"components/App.html":{}}}],["renderer2",{"_index":49,"title":{},"body":{"components/App.html":{}}}],["rendermode",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representing",{"_index":213,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":195,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":492,"title":{},"body":{"index.html":{}}}],["results",{"_index":189,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":97,"title":{},"body":{"components/App.html":{}}}],["return",{"_index":158,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["returns",{"_index":86,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["root'},{'name",{"_index":185,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":442,"title":{},"body":{"index.html":{}}}],["runner",{"_index":478,"title":{},"body":{"index.html":{}}}],["running",{"_index":445,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":310,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saving",{"_index":82,"title":{},"body":{"components/App.html":{}}}],["scaffolding",{"_index":454,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":460,"title":{},"body":{"index.html":{}}}],["search",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":328,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["selected",{"_index":83,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["serveonce",{"_index":444,"title":{},"body":{"index.html":{}}}],["server",{"_index":417,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":390,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["set",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":336,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":340,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["shared/components/language",{"_index":138,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":345,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":346,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"index.html":{}}}],["speed",{"_index":472,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:108",{"_index":74,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:41",{"_index":128,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:52",{"_index":51,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:78",{"_index":88,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:87",{"_index":103,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:97",{"_index":93,"title":{},"body":{"components/App.html":{}}}],["src/app/core/language/language.model.ts",{"_index":191,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":214,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":215,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":208,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":205,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":219,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":220,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":217,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":218,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:106",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:31",{"_index":276,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:41",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:73",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:82",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:92",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":359,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:10",{"_index":372,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:15",{"_index":373,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:20",{"_index":368,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:25",{"_index":364,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:46",{"_index":379,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:54",{"_index":380,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:62",{"_index":376,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:70",{"_index":378,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/shared/components/language",{"_index":320,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":440,"title":{},"body":{"index.html":{}}}],["started",{"_index":432,"title":{"index.html":{}},"body":{}}],["state",{"_index":81,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["statements",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":285,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":314,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":288,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":289,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":150,"title":{},"body":{"components/App.html":{}}}],["string",{"_index":92,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{}}}],["styleurl",{"_index":32,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["such",{"_index":362,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":489,"title":{},"body":{"index.html":{}}}],["supported",{"_index":196,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":140,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["switcher.html",{"_index":331,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.scss",{"_index":332,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts",{"_index":321,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:31",{"_index":344,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:38",{"_index":338,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:55",{"_index":339,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:66",{"_index":341,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher/language",{"_index":139,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":324,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["symbol",{"_index":207,"title":{},"body":{"classes/Language.html":{}}}],["table",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["test",{"_index":477,"title":{},"body":{"index.html":{}}}],["testing",{"_index":484,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":481,"title":{},"body":{"index.html":{}}}],["tests",{"_index":474,"title":{},"body":{"index.html":{}}}],["theme",{"_index":56,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["theme's",{"_index":377,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":115,"title":{},"body":{"components/App.html":{}}}],["theme(2",{"_index":118,"title":{},"body":{"components/App.html":{}}}],["theme(3",{"_index":123,"title":{},"body":{"components/App.html":{}}}],["theme(4",{"_index":126,"title":{},"body":{"components/App.html":{}}}],["theme.getcode",{"_index":162,"title":{},"body":{"components/App.html":{}}}],["theme.getid",{"_index":172,"title":{},"body":{"components/App.html":{}}}],["theme.getname",{"_index":173,"title":{},"body":{"components/App.html":{}}}],["themelist",{"_index":38,"title":{},"body":{"components/App.html":{}}}],["themes",{"_index":105,"title":{},"body":{"components/App.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":306,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":157,"title":{},"body":{"components/App.html":{}}}],["this.code",{"_index":223,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":307,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":290,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currenttheme",{"_index":159,"title":{},"body":{"components/App.html":{}}}],["this.currenttheme.getcode",{"_index":151,"title":{},"body":{"components/App.html":{}}}],["this.flag",{"_index":224,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":381,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":221,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":352,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languagelist",{"_index":350,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languages",{"_index":308,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":309,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":296,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":355,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":354,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":353,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":351,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":222,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":167,"title":{},"body":{"components/App.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":166,"title":{},"body":{"components/App.html":{}}}],["this.themelist",{"_index":160,"title":{},"body":{"components/App.html":{}}}],["this.themelist.find(theme",{"_index":161,"title":{},"body":{"components/App.html":{}}}],["this.themelist[0",{"_index":110,"title":{},"body":{"components/App.html":{}}}],["this.titleservice.settitle(title",{"_index":319,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":299,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":318,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":301,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":316,"title":{},"body":{"injectables/LanguageService.html":{}}}],["title",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":456,"title":{},"body":{"index.html":{}}}],["track",{"_index":171,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["translate",{"_index":176,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["translate/core",{"_index":136,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["translateservice",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["true",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":152,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["ui",{"_index":323,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["undefined",{"_index":154,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["unique",{"_index":95,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"classes/Theme.html":{}}}],["unit",{"_index":473,"title":{},"body":{"index.html":{}}}],["update",{"_index":168,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["updated",{"_index":114,"title":{},"body":{"components/App.html":{}}}],["updates",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["updating",{"_index":78,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["use",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":70,"title":{},"body":{"components/App.html":{},"classes/Theme.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":327,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["user's",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{}}}],["using",{"_index":436,"title":{},"body":{"index.html":{}}}],["value",{"_index":109,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":183,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["variable",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":503,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":438,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":497,"title":{},"body":{"index.html":{}}}],["void",{"_index":87,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["whenever",{"_index":451,"title":{},"body":{"index.html":{}}}],["window",{"_index":153,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["window.localstorage",{"_index":155,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["zone.js",{"_index":429,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                                LanguageSwitcher\n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatToolbarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themeList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.ts:52\n                            \n                        \n\n                \n                    \n                            Creates an instance of the App component.\nInitializes the current theme from localStorage if available,\nand applies it by delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular's Renderer2 used for DOM class manipulation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving the selected theme to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:78\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The current Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:97\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code. Assumes a match always exists (! used).\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:87\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themeList[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:52\n                        \n                    \n\n            \n                \n                    The currently active theme.\nInitialized with a default fallback (first in list) and updated from localStorage if available.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themeList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:41\n                        \n                    \n\n            \n                \n                    List of available themes for the application.\nEach theme includes a name, code, and icon.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Renderer2 } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { DOCUMENT } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { Theme } from './core/theming/theme.model';\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe, \n    TranslateDirective,\n    RouterOutlet,\n    LanguageSwitcher,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule\n  ],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n\n  /**\n   * List of available themes for the application.\n   * Each theme includes a name, code, and icon.\n   */\n  private themeList: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme.\n   * Initialized with a default fallback (first in list) and updated from localStorage if available.\n   */\n  private currentTheme = this.themeList[0];\n\n  /**\n   * Creates an instance of the App component.\n   * \n   * Initializes the current theme from localStorage if available,\n   * and applies it by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   * @param renderer - Angular's `Renderer2` used for DOM class manipulation.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document, private renderer: Renderer2) {\n    let storedTheme = this.currentTheme.getCode();\n\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns The current `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns An array of `Theme` objects.\n   */\n  public getThemes(): Theme[] {\n    return this.themeList;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param code - The code of the theme to retrieve.\n   * @returns The `Theme` matching the code. Assumes a match always exists (`!` used).\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themeList.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving the selected theme to localStorage.\n   * \n   * @param theme - The new `Theme` to apply.\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.renderer.removeClass(this.document.body, this.currentTheme.getCode());\n    this.renderer.addClass(this.document.body, theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n    \n  \n  \n    @for (theme of getThemes(); track theme.getId()) {\n      \n        \n        {{ theme.getName() }}\n      \n    } @empty {\n      No themes available\n    }\n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  Button\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        @for (theme of getThemes(); track theme.getId()) {                      {{ theme.getName() }}          } @empty {      No themes available    }    {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  Button'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                currentLanguage\n                            \n                            \n                                    Protected\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:41\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:31\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @protected\n   * @type {Language[]}\n   */\n  protected languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @protected\n   * @type {Language}\n   */\n  protected currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 3: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 4: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                            \n                                    Protected\n                                languageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:55\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:66\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languageList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                        \n                    \n\n            \n                \n                    List of available languages.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * List of available languages.\n   * @protected\n   * @type {Language[]}\n   */\n  protected languageList: Language[];\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.languageList = this.languageService.getLanguages();\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of languageList; track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of languageList; track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a theme option used in the application.\nContains metadata such as ID, name, code, and icon.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (emoji or icon name).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:20\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light-theme\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:25\n                        \n                    \n\n            \n                \n                    Icon name or path associated with the theme (e.g., emoji or material icon name).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:10\n                        \n                    \n\n            \n                \n                    Unique numeric identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:15\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:62\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:70\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:46\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:54\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n  /**\n   * Unique numeric identifier for the theme.\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light-theme\").\n   */\n  private code: string;\n\n  /**\n   * Icon name or path associated with the theme (e.g., emoji or material icon name).\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (emoji or icon name).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
