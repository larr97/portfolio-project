var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.563,1,0.915]],["body/components/App.html",[0,1.028,1,1.763,2,1.533,3,0.616,4,0.512,5,1.585,6,1.356,7,1.585,8,0.512,9,2.258,10,0.616,11,2.478,12,1.82,13,3.74,14,3.74,15,3.74,16,2.464,17,3.74,18,3.74,19,1.356,20,2.643,21,2.086,22,2.755,23,4.18,24,4.18,25,2.755,26,4.18,27,1.82,28,1.82,29,1.82,30,2.086,31,3.74,32,2.086,33,3.74,34,1.727,35,0.061,36,0.858,37,1.356,38,1.356,39,2.258,40,2.842,41,1.873,42,2.332,43,1.585,44,2.842,45,2.842,46,1.873,47,2.842,48,1.262,49,1.873,50,2.258,51,0.811,52,0.247,53,3.74,54,2.478,55,3.74,56,1.585,57,2.086,58,1.784,59,1.585,60,2.478,61,1.585,62,0.811,63,1.585,64,1.165,65,1.585,66,0.616,67,1.585,68,0.858,69,1.356,70,1.585,71,0.042,72,0.042]],["title/components/DownloadResumeButton.html",[0,0.563,29,1.064]],["body/components/DownloadResumeButton.html",[0,1,1,1.661,2,1.439,3,0.561,4,0.466,5,1.442,6,1.233,7,1.442,8,0.466,10,0.761,19,1.233,20,2.572,21,1.958,22,2.626,27,1.059,28,1.059,29,1.89,30,1.958,32,1.958,34,1.506,35,0.061,36,0.78,37,1.233,38,1.233,42,1.442,43,1.442,48,1.574,49,2.626,50,3.662,51,0.761,52,0.225,54,1.958,56,1.442,57,1.958,58,1.675,59,1.442,60,2.385,61,1.442,62,0.864,63,1.442,64,2.035,65,1.442,66,0.864,67,1.442,68,0.78,69,1.233,70,1.442,71,0.04,72,0.04,73,3.166,74,2.053,75,1.675,76,1.958,77,3.51,78,2.817,79,3.51,80,2.788,81,2.313,82,2.788,83,1.958,84,1.439,85,2.788,86,3.985,87,3.51,88,3.51,89,0.466,90,0.903,91,1.203,92,4.275,93,0.665,94,2.585,95,2.677,96,0.903,97,2.585,98,1.675,99,1.237,100,0.665,101,0.466,102,0.665,103,1.958,104,3.51,105,3.51,106,2.585,107,3.51,108,0.903,109,1.634,110,2.585,111,0.665,112,1.233,113,2.585,114,3.51]],["title/classes/Language.html",[52,0.226,66,0.563]],["body/classes/Language.html",[3,0.48,4,0.399,8,0.399,10,0.683,12,0.907,35,0.061,51,0.48,52,0.193,62,1.091,66,1.137,71,0.036,72,0.036,89,0.399,90,0.81,91,1.471,93,0.569,96,1.209,98,1.503,99,1.11,100,0.569,101,0.847,102,0.569,108,1.188,111,1.028,115,1.235,116,1.758,117,0.907,118,0.78,119,0.907,120,0.907,121,1.458,122,1.758,123,0.683,124,2.052,125,1.764,126,5.007,127,3.141,128,3.176,129,3.997,130,2.634,131,2.634,132,2.076,133,3.141,134,1.836,135,3.151,136,2.45,137,2.23,138,3.488,139,2.213,140,2.23,141,2.23,142,1.758,143,2.503,144,3.176,145,2.213,146,2.213,147,1.758,148,2.213,149,1.627,150,2.213,151,2.213,152,2.213,153,2.076,154,2.076,155,2.503,156,3.151,157,1.408]],["title/injectables/LanguageService.html",[158,0.915,159,1.239]],["body/injectables/LanguageService.html",[3,0.329,4,0.597,8,0.274,10,0.719,11,0.847,12,1.358,34,1.167,35,0.061,36,0.458,37,1.902,38,0.724,51,0.516,52,0.207,54,2.366,62,0.635,66,1.141,71,0.027,72,0.027,82,1.206,83,1.326,84,1.2,89,0.274,90,0.611,91,1.357,93,0.391,96,1.025,98,1.134,99,1.344,100,0.753,101,0.688,102,0.753,108,1.061,109,1.2,111,0.852,112,0.724,117,1.563,118,1.624,119,1.691,120,1.812,121,1.566,122,2.632,123,0.516,124,1.739,125,1.529,134,1.167,140,1.326,141,1.848,142,1.848,149,1.167,157,1.167,158,0.837,159,1.716,160,0.847,161,1.206,162,2.719,163,3.038,164,2.223,165,1.326,166,2.377,167,1.888,168,1.888,169,1.969,170,1.474,171,1.888,172,2.632,173,3.278,174,1.888,175,3.986,176,3.03,177,4.659,178,2.928,179,2.928,180,3.313,181,2.377,182,3.313,183,1.518,184,3.596,185,3.313,186,2.377,187,1.326,188,3.313,189,2.914,190,2.857,191,2.928,192,3.596,193,1.566,194,2.928,195,2.377,196,1.518,197,1.888,198,1.566,199,2.183,200,1.566,201,1.566,202,2.377,203,2.326,204,1.172,205,1.206,206,2.326,207,3.313,208,2.183,209,1.888,210,1.518,211,1.581,212,2.377,213,1.518,214,1.888,215,2.377,216,1.888,217,1.518,218,1.326,219,2.377,220,1.716,221,1.326,222,2.377,223,2.377,224,2.377,225,2.377,226,1.518,227,1.888,228,1.888,229,1.326,230,1.888,231,2.377,232,1.206,233,1.634,234,1.001,235,4.126,236,2.377,237,2.377,238,2.928,239,2.377,240,2.928,241,1.206,242,1.888,243,1.888,244,1.888,245,1.888,246,1.518,247,2.377,248,2.377,249,2.377,250,1.518,251,1.518,252,1.518,253,2.377,254,1.518,255,1.518,256,1.518,257,1.518,258,1.888,259,1.518,260,1.001,261,1.518,262,2.928,263,1.518,264,1.518,265,1.518,266,0.724,267,2.377,268,2.377,269,1.206,270,1.206,271,1.518,272,1.206,273,1.518,274,1.518,275,1.518,276,1.518]],["title/components/LanguageSwitcher.html",[0,0.563,27,1.064]],["body/components/LanguageSwitcher.html",[0,0.923,1,1.549,2,1.21,3,0.438,4,0.364,5,1.128,6,0.964,7,1.128,8,0.364,10,0.756,19,0.964,20,2.375,21,1.646,25,2.297,27,1.745,28,0.828,29,0.828,30,1.646,32,1.646,34,1.549,35,0.061,36,0.61,41,2.806,42,1.945,43,1.128,48,0.61,51,0.64,52,0.176,56,1.128,57,1.646,58,1.408,59,1.128,60,2.138,61,1.128,62,0.923,63,1.128,64,0.828,65,1.128,66,1.132,67,1.128,68,0.61,69,0.964,70,1.128,71,0.033,72,0.033,75,1.408,76,2.138,84,1.571,89,0.364,90,0.759,91,1.388,93,0.52,96,1.048,98,1.408,99,1.04,100,0.759,101,0.691,102,0.759,108,1.159,109,1.429,111,0.759,112,0.964,117,1.21,123,0.64,134,1.228,149,1.04,157,1.04,159,2.15,163,2.97,164,2.031,165,1.646,169,1.945,170,1.745,198,1.945,199,2.526,208,2.526,211,1.829,218,1.646,229,1.646,266,1.408,277,3.382,278,1.332,279,2.344,280,2.344,281,2.344,282,2.344,283,2.344,284,1.945,285,2.769,286,2.769,287,3.486,288,2.344,289,2.344,290,3.045,291,3.651,292,3.833,293,4.257,294,2.951,295,1.606,296,2.344,297,2.021,298,2.514,299,2.021,300,2.344,301,2.951,302,2.021,303,2.344,304,2.951,305,2.951,306,2.021,307,2.021,308,2.021,309,1.606,310,1.606,311,2.021,312,2.344,313,2.021,314,2.021,315,2.021,316,2.021,317,3.486,318,2.344,319,2.951,320,2.951,321,2.344]],["title/classes/Resume.html",[48,0.784,52,0.226]],["body/classes/Resume.html",[3,0.455,4,0.378,8,0.849,10,0.658,16,1.382,35,0.061,48,1.561,51,0.455,52,0.264,62,1.089,64,1.243,66,1.006,71,0.034,72,0.034,75,1.001,78,3,89,0.378,90,0.78,91,1.469,93,0.539,96,1.193,98,1.447,99,1.068,100,0.539,101,0.836,102,0.539,108,1.171,111,1.003,115,1.17,117,0.86,118,0.739,119,0.86,120,0.86,123,0.772,124,2.036,125,1.634,127,3.144,130,2.571,131,2.571,132,1.998,133,3.104,134,1.828,136,2.406,137,2.176,140,2.176,141,2.176,142,2.176,147,2.176,149,1.604,153,1.998,154,1.998,157,1.374,204,0.78,322,1.666,323,2.098,324,3.057,325,2.098,326,1.666,327,1.666,328,4.553,329,4.553,330,3.901,331,3.901,332,3.032,333,2.409,334,2.409,335,3.032,336,3.032,337,2.098,338,2.098,339,1.998,340,2.098,341,2.098,342,2.098,343,3.901,344,2.098,345,2.098,346,3.032,347,3.032]],["title/injectables/ResumeService.html",[95,1.449,158,0.915]],["body/injectables/ResumeService.html",[3,0.46,4,0.382,8,0.749,10,0.663,11,1.183,34,1.262,35,0.061,36,0.64,48,1.545,51,0.663,52,0.266,58,1.458,62,0.663,64,1.252,66,1.079,71,0.035,72,0.049,75,1.87,78,2.361,80,3.114,83,2.547,84,1.98,85,2.427,89,0.382,90,0.786,93,0.545,95,2.318,96,1.008,100,0.545,101,0.749,102,0.545,108,0.786,109,1.468,111,0.545,112,1.012,118,1.076,119,1.252,120,1.252,123,0.663,124,1.872,125,1.525,141,1.705,142,1.705,158,1.076,159,2.305,160,1.183,162,2.583,163,2.014,164,2.065,165,1.705,170,1.252,187,1.705,190,3.114,204,1.008,208,2.583,211,1.458,216,2.427,218,1.705,220,1.012,221,1.183,230,2.427,234,1.397,241,2.427,260,2.014,284,2.014,295,1.684,298,1.705,324,1.397,326,2.427,339,2.014,348,1.684,349,4.461,350,3.055,351,3.055,352,2.427,353,3.055,354,3.055,355,3.055,356,3.055,357,3.582,358,3.92,359,3.055,360,2.014,361,3.055,362,3.055,363,3.055,364,2.427,365,2.427,366,2.12,367,3.055,368,3.055,369,3.055,370,3.055,371,2.014,372,3.055,373,3.055,374,3.055,375,3.92,376,3.055,377,3.055,378,3.055,379,3.055,380,3.055,381,3.055,382,3.055,383,3.055,384,2.12,385,2.12,386,2.12,387,3.582,388,3.055,389,3.055,390,3.055,391,3.055,392,3.055,393,2.12,394,2.12,395,2.12,396,2.12,397,2.12,398,2.12,399,2.12,400,2.12]],["title/classes/Theme.html",[52,0.226,68,0.784]],["body/classes/Theme.html",[3,0.452,4,0.376,8,0.376,10,0.655,12,0.855,19,0.995,35,0.061,51,0.452,52,0.181,62,1.111,68,1.566,71,0.034,72,0.034,76,1.163,89,0.376,90,0.776,91,1.454,93,0.536,96,1.191,99,1.064,100,0.536,101,0.835,102,0.536,103,2.401,108,1.169,111,1,115,1.163,117,0.855,118,0.735,119,0.855,120,0.855,121,1.374,123,0.655,124,2.035,125,1.758,127,3.203,128,3.09,130,2.564,131,2.564,132,1.99,133,2.996,134,1.813,136,2.536,137,2.17,138,2.398,140,2.401,143,3.09,144,2.398,147,2.303,149,1.601,153,1.99,154,1.99,155,2.398,157,1.37,200,1.99,204,0.776,333,2.398,334,2.398,339,2.564,360,1.99,401,1.657,402,2.085,403,2.085,404,1.657,405,5.075,406,2.085,407,2.085,408,3.89,409,3.019,410,3.019,411,3.89,412,3.89,413,2.085,414,3.09,415,3.09,416,2.085,417,2.085,418,2.085,419,4.545,420,2.085,421,2.085,422,2.085,423,3.019]],["title/injectables/ThemeService.html",[158,0.915,424,1.449]],["body/injectables/ThemeService.html",[3,0.362,4,0.561,6,1.663,8,0.301,10,0.756,11,0.932,12,1.745,34,1.096,35,0.061,36,0.504,51,0.555,52,0.327,62,0.675,68,1.586,71,0.029,72,0.045,83,1.427,84,0.685,89,0.301,90,0.658,91,1.388,93,0.43,96,1.061,99,0.901,100,0.8,101,0.715,102,0.8,108,1.095,109,1.275,111,0.8,117,1.429,118,1.619,119,1.745,120,1.826,123,0.555,124,1.789,125,1.639,134,1.397,136,1.427,149,1.228,157,1.228,158,0.901,160,0.932,162,2.806,164,1.663,165,1.427,167,2.769,168,2.033,169,2.125,170,1.928,171,2.033,172,2.033,173,3.278,174,2.033,176,3.467,187,1.427,189,2.613,197,2.033,200,1.686,201,2.05,204,1.165,206,2.033,209,2.471,211,1.892,214,2.033,220,1.221,221,1.427,227,2.033,228,2.033,229,1.427,234,1.101,242,2.033,243,2.033,244,2.033,245,2.033,260,1.686,266,0.797,269,1.327,298,1.945,364,2.033,365,2.033,414,3.382,415,3.382,424,2.097,425,1.327,426,3.831,427,3.11,428,3.486,429,3.486,430,2.559,431,3.486,432,1.67,433,2.559,434,2.559,435,2.559,436,2.033,437,2.559,438,2.559,439,2.033,440,2.559,441,1.67,442,2.559,443,2.559,444,3.11,445,1.67,446,2.559,447,1.67,448,2.559,449,2.559,450,2.559,451,2.559,452,2.559,453,1.67,454,2.559,455,2.559,456,2.559,457,2.559,458,2.559,459,3.486,460,3.486,461,3.486,462,2.559,463,2.559,464,2.559,465,2.559,466,2.559,467,1.67,468,1.67,469,1.327,470,1.67,471,2.559,472,2.559,473,1.67,474,1.67,475,3.11,476,1.67,477,1.67,478,1.67,479,2.033,480,1.67,481,1.67,482,1.67,483,1.67,484,1.67,485,1.67]],["title/components/ThemeSwitcher.html",[0,0.563,28,1.064]],["body/components/ThemeSwitcher.html",[0,0.972,1,1.538,2,1.191,3,0.429,4,0.357,5,1.104,6,0.944,7,1.104,8,0.357,10,0.747,19,0.944,20,2.357,21,1.621,22,2.269,25,2.269,27,0.811,28,1.555,29,0.811,30,1.621,32,1.621,34,1.538,35,0.061,36,0.597,37,0.944,38,0.944,42,2.255,43,1.104,46,2.784,48,0.597,51,0.63,52,0.172,54,1.621,56,1.104,57,1.621,58,1.386,59,1.104,60,2.117,61,1.104,62,0.823,63,1.104,64,0.811,65,1.104,66,0.429,67,1.104,68,1.587,69,0.944,70,1.104,71,0.033,72,0.033,75,1.386,76,1.621,84,1.191,89,0.357,90,0.747,91,1.38,93,0.509,96,1.039,100,0.747,101,0.684,102,0.747,103,1.621,108,1.087,109,1.411,111,0.747,112,0.944,118,1.024,123,0.63,134,1.213,147,2.117,149,1.337,157,1.024,164,2.016,169,1.81,170,1.732,187,1.621,189,2.952,198,1.915,199,1.915,201,1.915,204,0.747,211,2.137,218,1.621,229,1.621,266,1.386,278,1.304,279,3.014,280,2.308,281,2.308,282,2.308,283,2.308,284,1.915,285,2.735,286,2.735,288,2.308,289,2.308,290,3.014,291,3.631,296,2.308,298,2.357,300,2.308,309,1.571,310,1.571,312,2.308,318,2.308,321,2.308,352,2.308,360,1.915,371,1.915,424,2.499,426,3.559,436,2.308,479,2.308,486,3.356,487,3.794,488,4.225,489,2.905,490,1.978,491,2.905,492,1.978,493,1.978,494,2.905,495,1.978,496,2.905,497,1.978,498,1.978,499,1.978,500,1.978,501,1.978,502,1.978,503,1.978,504,2.905,505,2.905]],["title/coverage.html",[506,2.797]],["body/coverage.html",[0,1,1,1.405,8,0.566,9,2.494,27,1.287,28,1.287,29,1.287,35,0.06,41,2.069,46,2.069,48,1.324,49,2.069,52,0.381,66,0.681,68,0.948,71,0.045,72,0.045,73,2.494,74,2.494,95,1.751,101,0.566,116,2.494,137,1.751,158,1.544,159,1.498,161,2.494,204,0.807,277,2.494,278,2.628,322,2.494,348,2.494,401,2.494,424,1.751,425,2.494,486,2.494,506,2.494,507,3.139,508,3.139,509,3.168,510,5.089,511,2.494,512,5.051,513,5.051,514,2.494,515,3.168,516,2.494,517,2.494,518,2.494,519,2.494,520,5.122,521,3.988,522,4.383,523,3.988,524,3.139,525,3.139,526,3.988,527,2.494,528,2.494,529,3.664,530,2.494,531,2.494,532,2.494,533,3.139,534,3.139]],["title/dependencies.html",[535,1.732,536,2.476]],["body/dependencies.html",[35,0.06,36,1.111,37,2.099,38,1.756,39,2.924,71,0.05,72,0.05,232,3.495,233,2.053,469,2.924,536,2.924,537,3.681,538,3.738,539,5.112,540,3.681,541,3.681,542,3.681,543,2.426,544,3.681,545,3.681,546,3.681,547,2.924,548,3.681,549,2.924,550,3.681,551,3.681,552,3.681,553,3.681,554,3.681,555,3.681,556,3.681]],["title/index.html",[89,0.393,557,2.18,558,2.18]],["body/index.html",[0,0.95,2,1.284,4,0.565,12,1.633,16,2.065,35,0.045,69,1.495,71,0.045,72,0.045,81,2.065,125,1.403,169,1.495,170,1.284,193,3.037,203,2.489,204,0.806,205,3.863,220,1.901,233,1.748,266,1.495,270,2.489,327,2.489,371,2.625,404,2.489,439,2.489,538,2.489,543,2.886,559,3.133,560,4.38,561,3.133,562,3.78,563,3.984,564,3.133,565,3.133,566,4.758,567,4.863,568,3.133,569,3.984,570,3.133,571,3.133,572,3.133,573,3.133,574,3.133,575,3.133,576,3.133,577,3.133,578,3.984,579,3.133,580,3.133,581,3.133,582,4.38,583,3.133,584,3.133,585,3.133,586,3.133,587,3.133,588,3.479,589,3.133,590,3.133,591,3.133,592,3.133,593,3.133,594,3.133,595,3.133,596,3.133,597,3.133,598,3.984,599,4.38,600,3.133,601,3.133,602,3.133,603,3.133,604,3.133,605,4.38,606,3.133,607,4.863,608,3.133,609,3.984,610,3.133,611,3.133,612,3.133,613,3.133,614,3.133,615,3.133,616,3.133,617,3.133,618,3.133,619,3.133,620,3.133,621,3.133,622,2.065,623,3.133]],["title/modules.html",[624,2.797]],["body/modules.html",[35,0.053,71,0.053,72,0.053,624,3.286]],["title/overview.html",[622,2.32]],["body/overview.html",[2,1.672,35,0.053,71,0.053,72,0.053,115,2.276,160,2.276,258,3.712,272,3.241,622,2.688]],["title/properties.html",[123,0.676,535,1.732]],["body/properties.html",[35,0.056,71,0.053,72,0.053,81,2.707,123,0.891,625,4.108]],["title/miscellaneous/variables.html",[626,1.732,627,2.476]],["body/miscellaneous/variables.html",[1,1.386,35,0.061,71,0.045,72,0.045,89,0.554,101,0.825,103,1.715,193,2.026,204,1.012,220,2.42,221,2.83,233,1.715,303,2.442,324,2.026,509,2.442,511,3.448,514,3.448,515,2.442,516,3.126,517,3.448,518,2.442,519,3.126,527,2.442,528,3.126,529,2.442,530,3.126,531,3.126,532,3.126,543,2.026,547,2.442,549,2.442,562,2.442,588,2.442,626,2.442,627,2.442,628,4.576,629,3.935,630,3.074,631,3.935,632,3.074,633,3.074,634,3.074,635,3.074,636,3.074,637,3.074,638,3.074,639,3.074,640,3.074,641,3.074,642,3.935,643,3.935,644,3.074,645,3.074,646,3.074,647,3.074,648,3.074,649,3.074,650,3.074,651,3.074,652,3.074,653,3.074,654,3.935,655,3.074,656,3.074,657,3.074,658,3.074,659,3.074,660,3.074,661,3.074,662,3.074,663,3.074,664,3.074,665,3.074,666,3.074,667,3.074]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":625,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["2.3.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":538,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["3/3",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["5",{"_index":274,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":326,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["active",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":70,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":616,"title":{},"body":{"index.html":{}}}],["allows",{"_index":281,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":449,"title":{},"body":{"injectables/ThemeService.html":{}}}],["anchor",{"_index":373,"title":{},"body":{"injectables/ResumeService.html":{}}}],["angular",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":469,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":43,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/grid",{"_index":311,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":310,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":309,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":39,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":55,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":33,"title":{},"body":{"components/App.html":{}}}],["app.shared.download",{"_index":114,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["app.shared.theme",{"_index":505,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["app.title",{"_index":53,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["application's",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["applicationconfig",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":436,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["array",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":591,"title":{},"body":{"index.html":{}}}],["associated",{"_index":339,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{}}}],["assumes",{"_index":448,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["automatically",{"_index":573,"title":{},"body":{"index.html":{}}}],["available",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["back",{"_index":363,"title":{},"body":{"injectables/ResumeService.html":{}}}],["based",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["body",{"_index":442,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":466,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":588,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":589,"title":{},"body":{"index.html":{}}}],["button",{"_index":50,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{}}}],["button'},{'name",{"_index":65,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["button.html",{"_index":87,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.scss",{"_index":88,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts",{"_index":74,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["button.ts:21",{"_index":97,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button.ts:35",{"_index":106,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["button/download",{"_index":49,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["calls",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":428,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":440,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["checks",{"_index":368,"title":{},"body":{"injectables/ResumeService.html":{}}}],["choice",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":613,"title":{},"body":{"index.html":{}}}],["class",{"_index":52,"title":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":115,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":562,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["clicked",{"_index":79,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["cloud",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":125,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":611,"title":{},"body":{"index.html":{}}}],["command",{"_index":605,"title":{},"body":{"index.html":{}}}],["compile",{"_index":590,"title":{},"body":{"index.html":{}}}],["complete",{"_index":584,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":61,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":454,"title":{},"body":{"injectables/ThemeService.html":{}}}],["const",{"_index":387,"title":{},"body":{"injectables/ResumeService.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":470,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":432,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":132,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":295,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(resumeservice",{"_index":94,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["constructor(themeservice",{"_index":490,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":360,"title":{},"body":{"injectables/ResumeService.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":460,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":162,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["core/language/language.model",{"_index":308,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":307,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/resume/resume.service",{"_index":110,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["core/theming/theme.model",{"_index":497,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":498,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["coverage",{"_index":506,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":98,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{}}}],["current",{"_index":84,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentresume",{"_index":357,"title":{},"body":{"injectables/ResumeService.html":{}}}],["currenttheme",{"_index":427,"title":{},"body":{"injectables/ThemeService.html":{}}}],["curriculum",{"_index":380,"title":{},"body":{"injectables/ResumeService.html":{}}}],["dark",{"_index":415,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":464,"title":{},"body":{"injectables/ThemeService.html":{}}}],["de",{"_index":381,"title":{},"body":{"injectables/ResumeService.html":{}}}],["default",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":96,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":437,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":536,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detailed",{"_index":619,"title":{},"body":{"index.html":{}}}],["dev",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":563,"title":{},"body":{"index.html":{}}}],["different",{"_index":284,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["directive",{"_index":59,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":69,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directory",{"_index":593,"title":{},"body":{"index.html":{}}}],["display",{"_index":147,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":280,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":592,"title":{},"body":{"index.html":{}}}],["document",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["document.createelement('a",{"_index":394,"title":{},"body":{"injectables/ResumeService.html":{}}}],["documentation",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":120,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["download",{"_index":64,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["downloaded",{"_index":399,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloading",{"_index":77,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["downloadresume",{"_index":358,"title":{},"body":{"injectables/ResumeService.html":{}}}],["downloadresumebutton",{"_index":29,"title":{"components/DownloadResumeButton.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["downloads",{"_index":80,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["during",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":140,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":608,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":610,"title":{},"body":{"index.html":{}}}],["each",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["el",{"_index":379,"title":{},"body":{"injectables/ResumeService.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":143,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":321,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":141,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["encapsulates",{"_index":403,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":607,"title":{},"body":{"index.html":{}}}],["english",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":117,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["es",{"_index":142,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["español",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["execute",{"_index":600,"title":{},"body":{"index.html":{}}}],["export",{"_index":51,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["express",{"_index":549,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["falls",{"_index":362,"title":{},"body":{"injectables/ResumeService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["filepath",{"_index":328,"title":{},"body":{"classes/Resume.html":{}}}],["files",{"_index":577,"title":{},"body":{"index.html":{}}}],["finds",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{}}}],["flag",{"_index":126,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":457,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":604,"title":{},"body":{"index.html":{}}}],["format",{"_index":336,"title":{},"body":{"classes/Resume.html":{}}}],["found",{"_index":365,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["framework",{"_index":612,"title":{},"body":{"index.html":{}}}],["full",{"_index":300,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["functions",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":582,"title":{},"body":{"index.html":{}}}],["generated",{"_index":561,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":292,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":487,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":128,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":429,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getfilepath",{"_index":330,"title":{},"body":{"classes/Resume.html":{}}}],["getflag",{"_index":129,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":408,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":130,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagecode",{"_index":331,"title":{},"body":{"classes/Resume.html":{}}}],["getlanguagelist",{"_index":293,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getlanguages",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":131,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["gets",{"_index":149,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getters",{"_index":325,"title":{},"body":{"classes/Resume.html":{}}}],["getthemebycode",{"_index":430,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":446,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":488,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":431,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":557,"title":{"index.html":{}},"body":{}}],["handle",{"_index":105,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["handler",{"_index":303,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":167,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["handling",{"_index":350,"title":{},"body":{"injectables/ResumeService.html":{}}}],["hc",{"_index":461,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":587,"title":{},"body":{"index.html":{}}}],["high",{"_index":459,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holds",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":572,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":333,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["i18n",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":405,"title":{},"body":{"classes/Theme.html":{}}}],["id",{"_index":127,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":137,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":411,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":579,"title":{},"body":{"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"classes/Resume.html":{},"index.html":{}}}],["index",{"_index":89,"title":{"index.html":{}},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":327,"title":{},"body":{"classes/Resume.html":{},"index.html":{}}}],["initialize",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["initiates",{"_index":107,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["inject",{"_index":468,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":158,"title":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":160,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":438,"title":{},"body":{"injectables/ThemeService.html":{}}}],["instance",{"_index":99,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["integrate",{"_index":166,"title":{},"body":{"injectables/LanguageService.html":{}}}],["integrates",{"_index":355,"title":{},"body":{"injectables/ResumeService.html":{}}}],["internal",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["internally",{"_index":104,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["invoked",{"_index":304,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["iso",{"_index":335,"title":{},"body":{"classes/Resume.html":{}}}],["item",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":601,"title":{},"body":{"index.html":{}}}],["label",{"_index":291,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["lang.getcode",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":320,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":319,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":317,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":66,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language/language.service",{"_index":386,"title":{},"body":{"injectables/ResumeService.html":{}}}],["languagecode",{"_index":329,"title":{},"body":{"classes/Resume.html":{}}}],["languagecodes",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":163,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{}}}],["languageservice",{"_index":159,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":27,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":414,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":462,"title":{},"body":{"injectables/ThemeService.html":{}}}],["link",{"_index":393,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.click",{"_index":400,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.download",{"_index":397,"title":{},"body":{"injectables/ResumeService.html":{}}}],["link.href",{"_index":395,"title":{},"body":{"injectables/ResumeService.html":{}}}],["list",{"_index":169,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":547,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":434,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":565,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":473,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":485,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":352,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["luis",{"_index":375,"title":{},"body":{"injectables/ResumeService.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":165,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":491,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":168,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["matbutton",{"_index":86,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["matbuttonmodule",{"_index":25,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["match",{"_index":364,"title":{},"body":{"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["matches",{"_index":82,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{}}}],["matching",{"_index":72,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":412,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":287,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":286,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":285,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":90,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":626,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":119,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["models",{"_index":323,"title":{},"body":{"classes/Resume.html":{}}}],["modify",{"_index":576,"title":{},"body":{"index.html":{}}}],["modules",{"_index":624,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":618,"title":{},"body":{"index.html":{}}}],["multilingual",{"_index":351,"title":{},"body":{"injectables/ResumeService.html":{}}}],["multiple",{"_index":353,"title":{},"body":{"injectables/ResumeService.html":{}}}],["name",{"_index":62,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":583,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":571,"title":{},"body":{"index.html":{}}}],["needed",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":615,"title":{},"body":{"index.html":{}}}],["new",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":567,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":37,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["nothing",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":133,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":410,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":118,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":481,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":570,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":595,"title":{},"body":{"index.html":{}}}],["option",{"_index":402,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":102,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":622,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":535,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":623,"title":{},"body":{"index.html":{}}}],["param",{"_index":111,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameters",{"_index":100,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":324,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumeService.html":{},"miscellaneous/variables.html":{}}}],["pdf",{"_index":78,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{}}}],["performance",{"_index":596,"title":{},"body":{"index.html":{}}}],["persist",{"_index":484,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":586,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":559,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":580,"title":{},"body":{"index.html":{}}}],["preference",{"_index":85,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{}}}],["private",{"_index":124,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":594,"title":{},"body":{"index.html":{}}}],["project",{"_index":560,"title":{},"body":{"index.html":{}}}],["properties",{"_index":123,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["protected",{"_index":290,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":361,"title":{},"body":{"injectables/ResumeService.html":{}}}],["providedin",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":75,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":91,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["re",{"_index":367,"title":{},"body":{"injectables/ResumeService.html":{}}}],["readable",{"_index":334,"title":{},"body":{"classes/Resume.html":{},"classes/Theme.html":{}}}],["reference",{"_index":439,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":620,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":496,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":574,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":477,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":480,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representation",{"_index":407,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":144,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":121,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestresume",{"_index":92,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["resources",{"_index":617,"title":{},"body":{"index.html":{}}}],["results",{"_index":71,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":48,"title":{"classes/Resume.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["resume's",{"_index":343,"title":{},"body":{"classes/Resume.html":{}}}],["resume(1",{"_index":374,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume(2",{"_index":378,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.getlanguagecode",{"_index":391,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume.model",{"_index":385,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_en.pdf",{"_index":377,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resume/resume_es.pdf",{"_index":383,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumes",{"_index":349,"title":{},"body":{"injectables/ResumeService.html":{}}}],["resumeservice",{"_index":95,"title":{"injectables/ResumeService.html":{}},"body":{"components/DownloadResumeButton.html":{},"injectables/ResumeService.html":{},"coverage.html":{}}}],["retrieve",{"_index":452,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":157,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":108,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["rodriguez",{"_index":382,"title":{},"body":{"injectables/ResumeService.html":{}}}],["rodriguez\\'s",{"_index":376,"title":{},"body":{"injectables/ResumeService.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":63,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":566,"title":{},"body":{"index.html":{}}}],["runner",{"_index":603,"title":{},"body":{"index.html":{}}}],["running",{"_index":569,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":451,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":435,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":443,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":578,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":585,"title":{},"body":{"index.html":{}}}],["search",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":283,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":298,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selects",{"_index":369,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serve",{"_index":356,"title":{},"body":{"injectables/ResumeService.html":{}}}],["serveonce",{"_index":568,"title":{},"body":{"index.html":{}}}],["server",{"_index":543,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":164,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":294,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":301,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":489,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":494,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/download",{"_index":47,"title":{},"body":{"components/App.html":{}}}],["shared/components/language",{"_index":40,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":45,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":305,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":306,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["speed",{"_index":597,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":509,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":116,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":145,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":146,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":139,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":135,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":151,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":152,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":148,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":150,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":161,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:108",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:33",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:43",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:75",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:84",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:94",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/resume/resume.model.ts",{"_index":322,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.model.ts:19",{"_index":337,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:27",{"_index":340,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:35",{"_index":338,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:43",{"_index":332,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:65",{"_index":342,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:74",{"_index":345,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:83",{"_index":344,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.model.ts:92",{"_index":341,"title":{},"body":{"classes/Resume.html":{}}}],["src/app/core/resume/resume.service.ts",{"_index":348,"title":{},"body":{"injectables/ResumeService.html":{},"coverage.html":{}}}],["src/app/core/resume/resume.service.ts:28",{"_index":384,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:39",{"_index":359,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/resume/resume.service.ts:62",{"_index":366,"title":{},"body":{"injectables/ResumeService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":401,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:14",{"_index":416,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:21",{"_index":417,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:28",{"_index":413,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:35",{"_index":409,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:56",{"_index":421,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:64",{"_index":422,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:72",{"_index":418,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:80",{"_index":420,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":425,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:106",{"_index":441,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:32",{"_index":467,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:45",{"_index":433,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:70",{"_index":445,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:79",{"_index":453,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:93",{"_index":447,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/shared/components/download",{"_index":73,"title":{},"body":{"components/DownloadResumeButton.html":{},"coverage.html":{}}}],["src/app/shared/components/language",{"_index":277,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":486,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":564,"title":{},"body":{"index.html":{}}}],["started",{"_index":558,"title":{"index.html":{}},"body":{}}],["state",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":471,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":134,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":32,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["such",{"_index":404,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":614,"title":{},"body":{"index.html":{}}}],["supported",{"_index":122,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":42,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":67,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":288,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":289,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":278,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:31",{"_index":296,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts:47",{"_index":297,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:49",{"_index":492,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:56",{"_index":299,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:58",{"_index":493,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:67",{"_index":302,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:68",{"_index":495,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher/language",{"_index":41,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":46,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":279,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":138,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["temporary",{"_index":372,"title":{},"body":{"injectables/ResumeService.html":{}}}],["test",{"_index":602,"title":{},"body":{"index.html":{}}}],["testing",{"_index":609,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":606,"title":{},"body":{"index.html":{}}}],["tests",{"_index":599,"title":{},"body":{"index.html":{}}}],["theme",{"_index":68,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":419,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":456,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":458,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":463,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":465,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":479,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["theme.geticon",{"_index":503,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getid",{"_index":504,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":444,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":426,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":424,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":28,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":406,"title":{},"body":{"classes/Theme.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":474,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":155,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentresume",{"_index":389,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getfilepath",{"_index":396,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currentresume.getname",{"_index":398,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.currenttheme",{"_index":475,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":472,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":483,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":482,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.filepath",{"_index":347,"title":{},"body":{"classes/Resume.html":{}}}],["this.flag",{"_index":156,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":423,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":153,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":312,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["this.languagecode",{"_index":346,"title":{},"body":{"classes/Resume.html":{}}}],["this.languages",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":316,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":314,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getcode",{"_index":388,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":313,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":315,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":154,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{}}}],["this.resumes.find(resume",{"_index":390,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumes[0",{"_index":392,"title":{},"body":{"injectables/ResumeService.html":{}}}],["this.resumeservice.downloadresume",{"_index":113,"title":{},"body":{"components/DownloadResumeButton.html":{}}}],["this.themes",{"_index":476,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":478,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":455,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":502,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":500,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().geticon",{"_index":499,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":501,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":276,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":275,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":450,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":581,"title":{},"body":{"index.html":{}}}],["track",{"_index":318,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":54,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{}}}],["translate/core",{"_index":38,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["translate/http",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/ThemeSwitcher.html":{}}}],["translateservice",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["triggers",{"_index":370,"title":{},"body":{"injectables/ResumeService.html":{}}}],["true",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":101,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Resume.html":{},"injectables/ResumeService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":76,"title":{},"body":{"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":136,"title":{},"body":{"classes/Language.html":{},"classes/Resume.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":598,"title":{},"body":{"index.html":{}}}],["update",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["use",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":103,"title":{},"body":{"components/DownloadResumeButton.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":282,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["user's",{"_index":83,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{}}}],["using",{"_index":371,"title":{},"body":{"injectables/ResumeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/App.html":{},"components/DownloadResumeButton.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":627,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":81,"title":{},"body":{"components/DownloadResumeButton.html":{},"index.html":{},"properties.html":{}}}],["versions",{"_index":354,"title":{},"body":{"injectables/ResumeService.html":{}}}],["visit",{"_index":621,"title":{},"body":{"index.html":{}}}],["void",{"_index":109,"title":{},"body":{"components/DownloadResumeButton.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ResumeService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":575,"title":{},"body":{"index.html":{}}}],["window",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["zone.js",{"_index":555,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                                DownloadResumeButton\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\nimport { DownloadResumeButton } from \"./shared/components/download-resume-button/download-resume-button\";\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe,\n    TranslateDirective,\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher,\n    DownloadResumeButton\n],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  '\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DownloadResumeButton.html":{"url":"components/DownloadResumeButton.html","title":"component - DownloadResumeButton","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DownloadResumeButton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/download-resume-button/download-resume-button.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI button for downloading the resume PDF.\nWhen clicked, it downloads the version of the resume that matches the\nuser's current language preference.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-download-resume-button\n            \n\n\n            \n                imports\n                \n                            MatButton\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./download-resume-button.html\n            \n\n\n\n            \n                styleUrl\n                ./download-resume-button.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                requestResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeService: ResumeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of DownloadResumeButton.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        resumeService\n                                                  \n                                                        \n                                                                        ResumeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used internally to handle the resume download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestResume\n                        \n                    \n                \n            \n            \n                \n                        \n                    requestResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/download-resume-button/download-resume-button.ts:35\n                        \n                    \n\n\n            \n                \n                        Initiates the download of the resume PDF.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ResumeService } from '../../../core/resume/resume.service';\nimport { MatButton } from '@angular/material/button';\nimport { TranslatePipe } from \"@ngx-translate/core\";\n\n/**\n * Component that provides a UI button for downloading the resume PDF.\n * \n * When clicked, it downloads the version of the resume that matches the \n * user's current language preference.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-download-resume-button',\n  imports: [MatButton, TranslatePipe],\n  templateUrl: './download-resume-button.html',\n  styleUrl: './download-resume-button.scss'\n})\nexport class DownloadResumeButton {\n\n  /**\n   * Creates an instance of DownloadResumeButton.\n   * \n   * @param {ResumeService} resumeService Used internally to handle the resume download.\n   */\n  constructor(private resumeService: ResumeService) {}\n\n  /**\n   * Initiates the download of the resume PDF.\n   * \n   * @returns {void}\n   */\n  public requestResume(): void {\n    this.resumeService.downloadResume();\n  }\n}\n    \n\n    \n        \n{{ 'app.shared.download-resume-button' | translate }}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \\'app.shared.download-resume-button\\' | translate }}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DownloadResumeButton'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Languages Control\" (model domain)\nService to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentLanguage\n                            \n                            \n                                    Private\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Language to apply. An instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:43\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Control Object: \"Languages Control\" (model domain)\n * \n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @private\n   * @type {Language[]}\n   */\n  private languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @private\n   * @type {Language}\n   */\n  private currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 2: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 3: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - The new `Language` to apply. An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                getLanguageList\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available languages from the service.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                An array of Language objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Gets the full list of available languages from the service.\n   *\n   * @returns {Language[]} An array of `Language` objects.\n   */\n  public getLanguageList(): Language[] {\n    return this.languageService.getLanguages();\n  }\n\n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of getLanguageList(); track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of getLanguageList(); track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Resume\" (model domain)\nThis class models the properties of a resume, including its ID, name,\nlanguage code, and file path. It provides public getters to access\nthis information.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filePath\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                languageCode\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFilePath\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getLanguageCode\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, languageCode: string, filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.model.ts:43\n                            \n                        \n\n                \n                    \n                            Creates a new Resume instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Unique identifier for the resume.\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Human-readable name for the resume.\n\n                                                        \n                                                \n                                                \n                                                        languageCode\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Language code of the resume (ISO format).\n\n                                                        \n                                                \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Path to the PDF file for download.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:43\n                        \n                    \n\n            \n                \n                    Path to the PDF file for this resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:19\n                        \n                    \n\n            \n                \n                    Unique identifier for the resume.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:35\n                        \n                    \n\n            \n                \n                    Language code associated with the resume (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.model.ts:27\n                        \n                    \n\n            \n                \n                    Display name of the resume.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFilePath\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFilePath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:92\n                        \n                    \n\n\n            \n                \n                        Gets the file path to the resume PDF.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The file path to the PDF.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:65\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the resume.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The resume's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:83\n                        \n                    \n\n\n            \n                \n                        Gets the language code of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en', 'es').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.model.ts:74\n                        \n                    \n\n\n            \n                \n                        Gets the name of the resume.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The resume's display name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Resume {\n  \n  /**\n   * Unique identifier for the resume.\n   * \n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code associated with the resume (e.g., 'en', 'es').\n   * \n   * @private\n   * @type {string}\n   */\n  private languageCode: string;\n\n  /**\n   * Path to the PDF file for this resume.\n   * \n   * @private\n   * @type {string}\n   */\n  private filePath: string;\n\n  /**\n   * Creates a new Resume instance.\n   * \n   * @param {number} id Unique identifier for the resume.\n   * @param {string} name Human-readable name for the resume.\n   * @param {string} languageCode Language code of the resume (ISO format).\n   * @param {string} filePath Path to the PDF file for download.\n   */\n  constructor(id: number, name: string, languageCode: string, filePath: string) {\n    this.id = id;\n    this.name = name;\n    this.languageCode = languageCode;\n    this.filePath = filePath;\n  }\n\n  /**\n   * Gets the unique ID of the resume.\n   * \n   * @returns {number} The resume's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the name of the resume.\n   * \n   * @returns {string} The resume's display name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the language code of the resume.\n   * \n   * @returns {string} The language code (e.g., 'en', 'es').\n   */\n  public getLanguageCode(): string {\n    return this.languageCode;\n  }\n\n  /**\n   * Gets the file path to the resume PDF.\n   * \n   * @returns {string} The file path to the PDF.\n   */\n  public getFilePath(): string {\n    return this.filePath;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumeService.html":{"url":"injectables/ResumeService.html","title":"injectable - ResumeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/resume/resume.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Resumes Control\" (model domain)\nService for handling multilingual resume file access and downloads.\nThis service provides logic to manage multiple versions of a resume\nin different languages. It integrates with the LanguageService to\nserve the resume matching the user's current language.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentResume\n                            \n                            \n                                    Private\n                                resumes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadResume\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/resume/resume.service.ts:39\n                            \n                        \n\n                \n                    \n                            Constructs the ResumeService.\nInitializes the current resume based on the language code provided by\nthe LanguageService. Falls back to the first resume if no match is found.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that provides the current language code.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        downloadResume\n                        \n                    \n                \n            \n            \n                \ndownloadResume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/resume/resume.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Downloads the resume PDF corresponding to the user's current language.\nThis method re-checks the user's current language, selects the matching\nresume, and triggers a download using a temporary anchor element.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentResume\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Resume\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:39\n                        \n                    \n\n            \n                \n                    The resume currently selected based on the user's language preference.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resumes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/resume/resume.service.ts:28\n                        \n                    \n\n            \n                \n                    Array of available resumes, each associated with a language code.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Resume } from './resume.model';\nimport { LanguageService } from '../language/language.service';\n\n/**\n * Control Object: \"Resumes Control\" (model domain)\n *\n * Service for handling multilingual resume file access and downloads.\n * \n * This service provides logic to manage multiple versions of a resume\n * in different languages. It integrates with the LanguageService to \n * serve the resume matching the user's current language.\n *\n * @export\n * @class ResumeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResumeService {\n\n  /**\n   * Array of available resumes, each associated with a language code.\n   * \n   * @private\n   * @type {Resume[]}\n   */\n  private resumes = [\n    new Resume(1, 'Luis Rodriguez\\'s resume', 'en', '/resume/resume_en.pdf'),\n    new Resume(2, 'El Curriculum de Luis Rodriguez', 'es', '/resume/resume_es.pdf'),\n  ];\n\n  /**\n   * The resume currently selected based on the user's language preference.\n   * \n   * @private\n   * @type {Resume}\n   */\n  private currentResume: Resume;\n\n  /**\n   * Constructs the ResumeService.\n   * \n   * Initializes the current resume based on the language code provided by\n   * the LanguageService. Falls back to the first resume if no match is found.\n   * \n   * @param {LanguageService} languageService Service that provides the current language code.\n   */\n  constructor(private languageService: LanguageService) { \n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n  }\n\n  /**\n   * Downloads the resume PDF corresponding to the user's current language.\n   * \n   * This method re-checks the user's current language, selects the matching\n   * resume, and triggers a download using a temporary anchor element.\n   * \n   * @returns {void}\n   */\n  downloadResume(): void {\n    const lang = this.languageService.getCurrentLanguage().getCode(); // get current language\n    this.currentResume = this.resumes.find(resume => resume.getLanguageCode() === lang) || this.resumes[0];\n    const link = document.createElement('a');\n    link.href = this.currentResume.getFilePath(); // Path to your PDF file\n    link.download = this.currentResume.getName(); // Name of the downloaded file\n    link.click();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Theme\" (model domain)\nRepresents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:35\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (Material icon name or emoji).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:28\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:35\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:14\n                        \n                    \n\n            \n                \n                    Unique identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:21\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:72\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n   /**\n   * Unique identifier for the theme.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   * @private\n   * @type {string}\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Themes Control\" (model domain)\nService to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:45\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:45\n                        \n                    \n\n            \n                \n                    The currently active theme as a Theme object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:32\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Themes Control\" (model domain),\nwhich holds a list of available themes as Entity Objects \"Theme\" (model domain).\nList of available themes for the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Control Object: \"Themes Control\" (model domain)\n * \n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * The attribute of the Control Object \"Themes Control\" (model domain),\n   * which holds a list of available themes as Entity Objects \"Theme\" (model domain).\n   *\n   * List of available themes for the application.\n   * \n   * @private\n   * @type {Theme[]}\n   * \n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme as a Theme object.\n   *\n   * @private\n   * @type {Theme}\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns {Theme[]} A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param {string} code - The code of the theme to retrieve.\n   * @returns {Theme} The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   *\n   * @param {Theme} theme - The new `Theme` to apply. An instance of the Entity Object \"Theme\" (model domain), mapped to the \"theme.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's themes.\nDisplays the current theme and allows the user to select a different one\nfrom the list of available themes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            TranslatePipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:49\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:58\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:68\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TranslatePipe } from '@ngx-translate/core';\n\n/**\n * Component that provides a UI for switching the application's themes.\n * \n * Displays the current theme and allows the user to select a different one\n * from the list of available themes.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, TranslatePipe],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param {ThemeService} themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getIcon();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns {Theme[]} An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param {Theme} theme The selected theme.\n   * @returns {void}\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getIcon();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n\n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ 'app.shared.theme.' + theme.getCode() | translate }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ \\'app.shared.theme.\\' + theme.getCode() | translate }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'DownloadResumeButton', 'selector': 'app-download-resume-button'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.model.ts\n            \n            class\n            Resume\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/resume/resume.service.ts\n            \n            injectable\n            ResumeService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/download-resume-button/download-resume-button.ts\n            \n            component\n            DownloadResumeButton\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
