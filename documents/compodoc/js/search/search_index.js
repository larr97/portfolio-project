var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.654,1,0.833]],["body/components/App.html",[0,1.045,1,1.409,2,1.152,3,0.786,4,0.625,5,1.257,6,1.843,7,1.257,8,0.625,9,1.257,10,0.786,11,2.402,12,1.502,13,2.443,14,2.443,15,2.443,16,1.843,17,2.443,18,2.443,19,1.257,20,2.402,21,1.843,22,2.892,23,2.892,24,2.892,25,1.502,26,2.181,27,2.181,28,2.181,29,2.892,30,1.843,31,2.443,32,1.843,33,2.443,34,0.491,35,0.72,36,1.714,37,2.892,38,1.152,39,1.364,40,2.892,41,0.786,42,1.666,43,2.673,44,2.892,45,3.185,46,1.364,47,2.443,48,1.152,49,0.092,50,1.502,51,0.853,52,1.152,53,2.443,54,1.502,55,1.666,56,3.391,57,0.786,58,1.447,59,0.786,60,0.987,61,3.544,62,2.27,63,1.666,64,0.786,65,0.987,66,0.987,67,1.257,68,1.666,69,0.987,70,1.843,71,1.257,72,1.257,73,1.257,74,1.257,75,1.666,76,1.152,77,0.552,78,1.257,79,1.257,80,2.443,81,1.666,82,1.447,83,2.443,84,3.391,85,1.843,86,1.843,87,1.843,88,1.843,89,1.666,90,1.666,91,1.666,92,1.843,93,1.666,94,0.786,95,1.666,96,1.666,97,1.257,98,0.625,99,0.786,100,1.666,101,1.666,102,1.257,103,1.257,104,1.666,105,1.257,106,1.666,107,3.185,108,3.185,109,3.185,110,2.443,111,2.402,112,2.443,113,2.443,114,1.257,115,1.843,116,1.843,117,1.257,118,2.402,119,1.257,120,1.257,121,0.491,122,0.987,123,1.257,124,0.05,125,0.05]],["title/classes/Language.html",[77,0.502,121,0.654]],["body/classes/Language.html",[3,0.748,4,0.595,8,0.595,10,1.111,12,0.748,34,0.468,35,0.695,38,1.111,39,1.865,41,0.748,46,1.784,48,0.748,49,0.091,50,1.943,51,1.115,52,0.748,54,2.03,57,1.747,76,0.748,77,0.359,82,2.425,94,1.467,121,1.278,124,0.048,125,0.048,126,1.586,127,1.197,128,0.94,129,1.197,130,1.197,131,1.197,132,1.197,133,1.197,134,2.425,135,4.093,136,3.85,137,3.11,138,3.11,139,3.11,140,3.11,141,2.356,142,3.85,143,2.356,144,1.396,145,1.396,146,3.482,147,2.346,148,3.482,149,1.586,150,2.346,151,2.346,152,1.777,153,2.356,154,3.11,155,1.586,156,1.586,157,2.356,158,1.586,159,2.793,160,1.586,161,1.586,162,1.586,163,1.843,164,2.356,165,2.356,166,2.356,167,2.356]],["title/injectables/LanguageService.html",[168,1.047,169,1.047]],["body/injectables/LanguageService.html",[3,0.498,4,0.937,8,0.396,10,1.178,11,0.797,12,1.178,34,0.312,35,0.506,36,1.914,38,0.81,39,1.689,41,0.498,43,2.219,46,1.462,48,1.023,49,0.091,50,1.023,51,0.867,52,1.023,54,1.178,57,1.524,58,1.285,59,1.295,60,1.017,62,1.479,64,0.498,65,1.837,66,0.626,76,0.81,77,0.388,78,1.295,79,1.295,82,0.626,85,1.295,86,1.295,87,1.295,88,1.295,92,1.295,94,1.178,97,0.797,98,1.318,99,0.498,102,0.797,103,1.295,105,2.437,111,2.519,121,1.282,124,0.035,125,0.035,128,1.743,129,2.701,130,2.219,131,2.519,132,1.295,133,1.883,134,2.034,144,1.017,145,1.743,150,1.295,151,1.883,152,1.883,159,1.883,163,1.479,168,0.81,169,1.295,170,1.057,171,0.797,172,2.824,173,1.295,174,2.701,175,1.717,176,1.717,177,1.717,178,1.914,179,1.627,180,1.717,181,1.717,182,2.497,183,1.717,184,3.1,185,3.744,186,2.168,187,2.168,188,2.497,189,1.717,190,2.497,191,1.057,192,2.746,193,2.497,194,1.717,195,1.717,196,2.497,197,3.512,198,2.746,199,2.168,200,2.746,201,1.017,202,2.168,203,1.717,204,1.057,205,1.717,206,1.295,207,1.883,208,1.717,209,1.636,210,0.797,211,2.168,212,2.497,213,1.883,214,1.057,215,1.883,216,1.717,217,1.057,218,1.717,219,1.717,220,1.717,221,1.057,222,1.717,223,1.717,224,1.717,225,1.717,226,1.717,227,1.717,228,1.057,229,1.717,230,2.497,231,1.717,232,1.717,233,1.717,234,1.717,235,0.797,236,1.023,237,1.057,238,0.797,239,3.23,240,1.295,241,1.717,242,2.168,243,1.717,244,2.168,245,1.057,246,1.057,247,1.717,248,1.057,249,1.057,250,1.057,251,1.717,252,1.057,253,1.057,254,1.057,255,1.057,256,1.717,257,1.057,258,1.057,259,1.057,260,2.168,261,1.057,262,1.057,263,1.057,264,1.636,265,1.717,266,1.717,267,0.797,268,0.797,269,1.057,270,1.057,271,1.057,272,1.057,273,1.057]],["title/components/LanguageSwitcher.html",[0,0.654,25,1.047]],["body/components/LanguageSwitcher.html",[0,1,1,1.21,2,1.054,3,0.698,4,0.555,5,1.116,6,1.116,7,1.116,8,0.555,10,1.271,19,1.116,20,2.266,21,1.686,25,1.6,26,2.033,27,2.033,28,2.033,30,1.686,32,1.686,34,0.436,35,0.659,36,2.149,38,1.054,39,1.6,41,0.698,46,1.521,48,1.054,49,0.092,50,1.6,51,1,52,1.054,54,1.271,57,1.6,58,1.597,62,2.087,64,0.698,69,2.01,70,2.033,72,1.116,73,1.116,74,1.116,76,1.054,77,0.334,94,0.698,99,1.054,114,1.116,115,1.686,116,1.686,117,1.116,118,2.266,119,1.116,120,1.116,121,1.271,122,0.876,123,1.116,124,0.046,125,0.046,128,1.325,144,1.325,145,1.325,163,1.325,169,1.71,172,2.266,173,1.686,174,2.735,178,1.911,179,2.01,206,1.686,207,2.266,213,2.266,215,2.266,238,1.116,264,2.266,274,2.559,275,1.116,276,2.236,277,3.003,278,2.236,279,2.236,280,2.236,281,2.236,282,2.236,283,2.236,284,2.695,285,2.236,286,2.236,287,3.712,288,3.225,289,3.003,290,2.236,291,1.479,292,2.236,293,1.479,294,3.626,295,2.236,296,1.479,297,1.686,298,2.236,299,1.479,300,2.236,301,1.479,302,1.479,303,1.479,304,1.479,305,1.479,306,1.479,307,2.236,308,1.479,309,1.479,310,1.479,311,2.695,312,2.236,313,2.236,314,2.236,315,2.236]],["title/coverage.html",[316,2.254]],["body/coverage.html",[0,0.991,1,1.261,8,0.997,9,2.004,25,1.253,49,0.09,51,0.783,69,1.574,77,0.6,98,0.997,121,0.783,124,0.069,125,0.069,127,2.004,147,2.004,168,1.253,169,1.253,171,2.004,274,2.004,275,2.004,316,2.004,317,2.657,318,2.657,319,2.536,320,4.267,321,2.004,322,4.235,323,4.235,324,2.004,325,2.536,326,2.004,327,2.004,328,2.004,329,2.004,330,2.657,331,2.657,332,3.875,333,2.657,334,2.657,335,2.657,336,2.004,337,2.004,338,2.923,339,2.004,340,2.004,341,2.004,342,2.657,343,2.657,344,2.657]],["title/dependencies.html",[345,1.413,346,2.005]],["body/dependencies.html",[49,0.091,64,1.391,65,2.125,66,1.748,67,2.225,71,2.225,124,0.073,125,0.073,235,2.706,236,1.391,346,2.225,347,2.95,348,2.916,349,4.241,350,2.95,351,2.95,352,2.95,353,1.748,354,2.95,355,2.95,356,2.95,357,2.225,358,2.95,359,2.225,360,2.95,361,2.95,362,2.95,363,2.95,364,2.95,365,2.95,366,2.95]],["title/index.html",[34,0.552,367,1.873,368,1.873]],["body/index.html",[0,1.037,2,1.135,4,0.902,12,1.487,16,1.815,49,0.065,59,1.487,98,0.902,99,1.135,122,1.425,124,0.065,125,0.065,134,1.868,178,1.425,179,1.425,201,2.212,209,1.815,210,3,236,1.135,268,1.815,348,1.815,353,2.084,369,2.406,370,3.517,371,2.406,372,3.153,373,2.924,374,1.815,375,3.153,376,2.406,377,2.406,378,3.876,379,3.977,380,2.406,381,3.153,382,2.406,383,2.406,384,2.406,385,2.406,386,2.406,387,2.406,388,2.406,389,2.406,390,3.153,391,2.406,392,2.406,393,2.406,394,3.517,395,2.406,396,2.406,397,2.406,398,2.406,399,2.406,400,2.406,401,2.653,402,2.406,403,2.406,404,2.406,405,2.406,406,2.406,407,2.406,408,2.406,409,2.406,410,2.406,411,3.153,412,3.517,413,2.406,414,2.406,415,2.406,416,2.406,417,2.406,418,3.517,419,2.406,420,3.977,421,2.406,422,3.153,423,2.406,424,2.406,425,2.406,426,2.406,427,2.406,428,2.406,429,2.406,430,2.406,431,2.406,432,2.406,433,2.406,434,2.406,435,2.406,436,1.425,437,2.406,438,2.406]],["title/modules.html",[439,2.254]],["body/modules.html",[49,0.08,124,0.08,125,0.08,439,2.596]],["title/overview.html",[436,1.771]],["body/overview.html",[2,1.593,49,0.08,77,0.763,124,0.08,125,0.08,168,1.593,240,2.932,267,2.548,436,2.002]],["title/properties.html",[35,0.784,345,1.413]],["body/properties.html",[35,1.005,49,0.084,124,0.08,125,0.08,374,2.572,440,3.409]],["title/miscellaneous/variables.html",[441,1.413,442,2.005]],["body/miscellaneous/variables.html",[1,1.165,34,0.693,49,0.091,51,1.09,59,1.971,60,2.476,98,1.165,124,0.064,125,0.064,201,1.392,236,1.108,297,1.772,319,1.772,321,2.622,324,2.622,325,1.772,326,2.341,327,2.622,328,1.772,329,2.341,336,1.772,337,2.341,338,1.772,339,2.341,340,2.341,341,2.341,353,1.392,357,1.772,359,1.772,373,1.772,401,1.772,441,1.772,442,1.772,443,3.698,444,3.104,445,2.349,446,3.104,447,2.349,448,2.349,449,2.349,450,2.349,451,2.349,452,2.349,453,2.349,454,2.349,455,2.349,456,2.349,457,2.349,458,3.104,459,3.104,460,2.349,461,2.349,462,2.349,463,2.349,464,2.349,465,2.349,466,2.349,467,2.349,468,2.349,469,2.349,470,3.104,471,2.349,472,2.349,473,2.349,474,2.349,475,2.349,476,2.349,477,2.349,478,2.349,479,2.349,480,2.349,481,2.349,482,2.349,483,2.349,484,2.349]]],"invertedIndex":[["",{"_index":49,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":322,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":440,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":366,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":323,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["1/1",{"_index":342,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":267,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["2.3.0",{"_index":364,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":348,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["25",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["4",{"_index":256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5",{"_index":271,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":360,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":335,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":362,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":123,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["add",{"_index":97,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["additional",{"_index":429,"title":{},"body":{"index.html":{}}}],["allows",{"_index":280,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":71,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":64,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":72,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/grid",{"_index":304,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":74,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/menu",{"_index":73,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["angular/material/toolbar",{"_index":75,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":67,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":112,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":31,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":33,"title":{},"body":{"components/App.html":{}}}],["app.title",{"_index":110,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"index.html":{}}}],["application's",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["applicationconfig",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["artifacts",{"_index":404,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["automatically",{"_index":385,"title":{},"body":{"index.html":{}}}],["available",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["based",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{}}}],["bootstrap",{"_index":337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":401,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":402,"title":{},"body":{"index.html":{}}}],["button",{"_index":113,"title":{},"body":{"components/App.html":{}}}],["calls",{"_index":257,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":265,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changetheme",{"_index":40,"title":{},"body":{"components/App.html":{}}}],["changetheme(theme",{"_index":53,"title":{},"body":{"components/App.html":{}}}],["check",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choice",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choose",{"_index":426,"title":{},"body":{"index.html":{}}}],["class",{"_index":77,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":126,"title":{},"body":{"classes/Language.html":{}}}],["cli",{"_index":373,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":134,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"index.html":{}}}],["codes",{"_index":252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":424,"title":{},"body":{"index.html":{}}}],["command",{"_index":418,"title":{},"body":{"index.html":{}}}],["compile",{"_index":403,"title":{},"body":{"index.html":{}}}],["complete",{"_index":396,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":119,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":321,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":41,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["constructor(@inject(document",{"_index":81,"title":{},"body":{"components/App.html":{}}}],["constructor(document",{"_index":42,"title":{},"body":{"components/App.html":{}}}],["constructor(id",{"_index":141,"title":{},"body":{"classes/Language.html":{}}}],["constructor(languageservice",{"_index":291,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["constructor(private",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["constructor(translate",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":108,"title":{},"body":{"components/App.html":{}}}],["control",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["core/language/language.model",{"_index":303,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":302,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["corresponding",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{}}}],["coverage",{"_index":316,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":144,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["current",{"_index":264,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["currentlanguage",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["currenttheme",{"_index":37,"title":{},"body":{"components/App.html":{}}}],["dark",{"_index":109,"title":{},"body":{"components/App.html":{}}}],["default",{"_index":59,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":46,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["dependencies",{"_index":346,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["detailed",{"_index":433,"title":{},"body":{"index.html":{}}}],["dev",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":375,"title":{},"body":{"index.html":{}}}],["different",{"_index":283,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["directive",{"_index":117,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["directives",{"_index":122,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["directory",{"_index":406,"title":{},"body":{"index.html":{}}}],["display",{"_index":157,"title":{},"body":{"classes/Language.html":{}}}],["displays",{"_index":279,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["dist",{"_index":405,"title":{},"body":{"index.html":{}}}],["document",{"_index":43,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["documentation",{"_index":317,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["domain",{"_index":131,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["during",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":150,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["e2e",{"_index":421,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":423,"title":{},"body":{"index.html":{}}}],["each",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["element",{"_index":116,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["emoji",{"_index":153,"title":{},"body":{"classes/Language.html":{}}}],["empty",{"_index":315,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["en",{"_index":151,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["end",{"_index":420,"title":{},"body":{"index.html":{}}}],["english",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":128,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["es",{"_index":152,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["español",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["everything",{"_index":91,"title":{},"body":{"components/App.html":{}}}],["example",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["execute",{"_index":413,"title":{},"body":{"index.html":{}}}],["export",{"_index":76,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["express",{"_index":359,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":78,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["files",{"_index":389,"title":{},"body":{"index.html":{}}}],["finds",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{}}}],["firebase",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["flag",{"_index":135,"title":{},"body":{"classes/Language.html":{}}}],["following",{"_index":417,"title":{},"body":{"index.html":{}}}],["framework",{"_index":425,"title":{},"body":{"index.html":{}}}],["functions",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":394,"title":{},"body":{"index.html":{}}}],["generated",{"_index":371,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":289,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getcode",{"_index":137,"title":{},"body":{"classes/Language.html":{}}}],["getcurrentlanguage",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getflag",{"_index":138,"title":{},"body":{"classes/Language.html":{}}}],["getid",{"_index":139,"title":{},"body":{"classes/Language.html":{}}}],["getlanguagebycode",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguages",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":140,"title":{},"body":{"classes/Language.html":{}}}],["gets",{"_index":159,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["getting",{"_index":367,"title":{"index.html":{}},"body":{}}],["handle",{"_index":90,"title":{},"body":{"components/App.html":{}}}],["handler",{"_index":297,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{}}}],["helpbuilding",{"_index":400,"title":{},"body":{"index.html":{}}}],["high",{"_index":107,"title":{},"body":{"components/App.html":{}}}],["holds",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["html",{"_index":115,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["http",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":384,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["i18n",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":136,"title":{},"body":{"classes/Language.html":{}}}],["identifier",{"_index":147,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["import",{"_index":62,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["includes",{"_index":391,"title":{},"body":{"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["information",{"_index":432,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":248,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{}}}],["inject",{"_index":63,"title":{},"body":{"components/App.html":{}}}],["injectable",{"_index":168,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{}}}],["instance",{"_index":145,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["integrate",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{}}}],["internal",{"_index":103,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["invoked",{"_index":298,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["item",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":414,"title":{},"body":{"index.html":{}}}],["label",{"_index":287,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["lang.getcode",{"_index":251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":314,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":313,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":311,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":121,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagecodes",{"_index":249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagelist",{"_index":288,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["languages",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["languageservice",{"_index":169,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":25,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":114,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["light",{"_index":61,"title":{},"body":{"components/App.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["loader",{"_index":357,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":377,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":105,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["localstorage.getitem('lang",{"_index":246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":89,"title":{},"body":{"components/App.html":{}}}],["localstorage.setitem('lang",{"_index":269,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":106,"title":{},"body":{"components/App.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["managing",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{}}}],["mapped",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matbuttonmodule",{"_index":26,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["matches",{"_index":255,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matching",{"_index":125,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matgridlistmodule",{"_index":284,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":28,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["matmenumodule",{"_index":27,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["mattoolbarmodule",{"_index":29,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["method",{"_index":258,"title":{},"body":{"injectables/LanguageService.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["miscellaneous",{"_index":441,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":130,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["modify",{"_index":388,"title":{},"body":{"index.html":{}}}],["modules",{"_index":439,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":431,"title":{},"body":{"index.html":{}}}],["name",{"_index":50,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["namefor",{"_index":395,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":383,"title":{},"body":{"index.html":{}}}],["needed",{"_index":266,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":428,"title":{},"body":{"index.html":{}}}],["new",{"_index":98,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":379,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":65,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["nothing",{"_index":79,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["number",{"_index":142,"title":{},"body":{"classes/Language.html":{}}}],["object",{"_index":129,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["objects",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["old",{"_index":96,"title":{},"body":{"components/App.html":{}}}],["one",{"_index":99,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["open",{"_index":382,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":408,"title":{},"body":{"index.html":{}}}],["optional",{"_index":52,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["overview",{"_index":436,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":345,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":438,"title":{},"body":{"index.html":{}}}],["param",{"_index":163,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["parameters",{"_index":48,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["path",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":409,"title":{},"body":{"index.html":{}}}],["persist",{"_index":104,"title":{},"body":{"components/App.html":{}}}],["persisting",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{}}}],["persists",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":399,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":369,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":392,"title":{},"body":{"index.html":{}}}],["private",{"_index":82,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["production",{"_index":407,"title":{},"body":{"index.html":{}}}],["project",{"_index":370,"title":{},"body":{"index.html":{}}}],["properties",{"_index":35,"title":{"properties.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"properties.html":{}}}],["protected",{"_index":36,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["provide",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["providehttpclient",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":276,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["reference",{"_index":437,"title":{},"body":{"index.html":{}}}],["references",{"_index":434,"title":{},"body":{"index.html":{}}}],["reload",{"_index":386,"title":{},"body":{"index.html":{}}}],["remove",{"_index":95,"title":{},"body":{"components/App.html":{}}}],["renderer",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["renderer2",{"_index":45,"title":{},"body":{"components/App.html":{}}}],["rendermode",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representing",{"_index":154,"title":{},"body":{"classes/Language.html":{}}}],["represents",{"_index":132,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["reqhandler",{"_index":341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":430,"title":{},"body":{"index.html":{}}}],["results",{"_index":124,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":94,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["returns",{"_index":57,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["root'},{'name",{"_index":120,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":378,"title":{},"body":{"index.html":{}}}],["runner",{"_index":416,"title":{},"body":{"index.html":{}}}],["running",{"_index":381,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":263,"title":{},"body":{"injectables/LanguageService.html":{}}}],["savedtheme",{"_index":83,"title":{},"body":{"components/App.html":{}}}],["scaffolding",{"_index":390,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":397,"title":{},"body":{"index.html":{}}}],["search",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":282,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["selected",{"_index":294,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["serveonce",{"_index":380,"title":{},"body":{"index.html":{}}}],["server",{"_index":353,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["set",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":290,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":295,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{}}}],["shared/components/language",{"_index":68,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":300,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":301,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"index.html":{}}}],["speed",{"_index":410,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":325,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/app.ts:36",{"_index":47,"title":{},"body":{"components/App.html":{}}}],["src/app/app.ts:50",{"_index":55,"title":{},"body":{"components/App.html":{}}}],["src/app/core/language/language.model.ts",{"_index":127,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":155,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":156,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":149,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":143,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":161,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":162,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":158,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":160,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:106",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:31",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:41",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:73",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:82",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:92",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/shared/components/language",{"_index":274,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":376,"title":{},"body":{"index.html":{}}}],["started",{"_index":368,"title":{"index.html":{}},"body":{}}],["state",{"_index":92,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["statements",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storage",{"_index":80,"title":{},"body":{"components/App.html":{}}}],["store",{"_index":268,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["styleurl",{"_index":32,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["such",{"_index":398,"title":{},"body":{"index.html":{}}}],["suits",{"_index":427,"title":{},"body":{"index.html":{}}}],["supported",{"_index":133,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":70,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["switcher.html",{"_index":285,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.scss",{"_index":286,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts",{"_index":275,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:31",{"_index":299,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:38",{"_index":292,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:55",{"_index":293,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:66",{"_index":296,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher/language",{"_index":69,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":278,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["symbol",{"_index":148,"title":{},"body":{"classes/Language.html":{}}}],["table",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["test",{"_index":415,"title":{},"body":{"index.html":{}}}],["testing",{"_index":422,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":419,"title":{},"body":{"index.html":{}}}],["tests",{"_index":412,"title":{},"body":{"index.html":{}}}],["theme",{"_index":56,"title":{},"body":{"components/App.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":259,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(savedtheme",{"_index":93,"title":{},"body":{"components/App.html":{}}}],["this.code",{"_index":166,"title":{},"body":{"classes/Language.html":{}}}],["this.currentlanguage",{"_index":260,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currenttheme",{"_index":84,"title":{},"body":{"components/App.html":{}}}],["this.flag",{"_index":167,"title":{},"body":{"classes/Language.html":{}}}],["this.id",{"_index":164,"title":{},"body":{"classes/Language.html":{}}}],["this.label",{"_index":307,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languagelist",{"_index":305,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languages",{"_index":261,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":262,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":310,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":309,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":308,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":306,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":165,"title":{},"body":{"classes/Language.html":{}}}],["this.renderer.addclass(this.document.body",{"_index":101,"title":{},"body":{"components/App.html":{}}}],["this.renderer.removeclass(this.document.body",{"_index":100,"title":{},"body":{"components/App.html":{}}}],["this.titleservice.settitle(title",{"_index":273,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":253,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":272,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":270,"title":{},"body":{"injectables/LanguageService.html":{}}}],["title",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":393,"title":{},"body":{"index.html":{}}}],["track",{"_index":312,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["translate",{"_index":111,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["translate/core",{"_index":66,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["translateservice",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["true",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":363,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":51,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":85,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["ui",{"_index":277,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["undefined",{"_index":87,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["unique",{"_index":146,"title":{},"body":{"classes/Language.html":{}}}],["unit",{"_index":411,"title":{},"body":{"index.html":{}}}],["update",{"_index":102,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["updates",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["updating",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{}}}],["use",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":281,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["user's",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["using",{"_index":372,"title":{},"body":{"index.html":{}}}],["value",{"_index":60,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":118,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{}}}],["variable",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":442,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":374,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":435,"title":{},"body":{"index.html":{}}}],["void",{"_index":58,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["whenever",{"_index":387,"title":{},"body":{"index.html":{}}}],["window",{"_index":86,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["window.localstorage",{"_index":88,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["zone.js",{"_index":365,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                                LanguageSwitcher\n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatToolbarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                currentTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'light'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Renderer2 } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { DOCUMENT } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe, \n    TranslateDirective,\n    RouterOutlet,\n    LanguageSwitcher,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule\n  ],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {\n  \n  protected currentTheme = 'light'; // fallback if nothing in storage\n\n  constructor(@Inject(DOCUMENT) private document: Document, private renderer: Renderer2) {\n    \n    let savedTheme = this.currentTheme;\n\n    if (typeof window !== 'undefined' && window.localStorage) {\n      savedTheme = localStorage.getItem('theme') || this.currentTheme;\n    }\n\n    // Let changeTheme handle everything (DOM + state + storage)\n    this.changeTheme(savedTheme);\n  }\n\n  public changeTheme(theme: string): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old class, add new one\n    this.renderer.removeClass(this.document.body, this.currentTheme);\n    this.renderer.addClass(this.document.body, theme);\n\n    // Update internal state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme);\n    }\n  }\n}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n  \n  \n    \n  \n  \n    \n      \n      Light\n    \n    \n      \n      Light High Contrast\n    \n    \n      \n      Dark\n    \n    \n      \n      Dark High Contrast\n    \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  Button\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Light                    Light High Contrast                    Dark                    Dark High Contrast        {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  Button'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                currentLanguage\n                            \n                            \n                                    Protected\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:106\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:92\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:41\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:31\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @protected\n   * @type {Language[]}\n   */\n  protected languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @protected\n   * @type {Language}\n   */\n  protected currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 3: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 4: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                            \n                                    Protected\n                                languageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:55\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:66\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        languageList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:38\n                        \n                    \n\n            \n                \n                    List of available languages.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * List of available languages.\n   * @protected\n   * @type {Language[]}\n   */\n  protected languageList: Language[];\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.languageList = this.languageService.getLanguages();\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of languageList; track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of languageList; track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
