var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/App.html",[0,0.599,1,0.881]],["body/components/App.html",[0,1.084,1,1.67,2,1.513,3,0.795,4,0.652,5,1.67,6,1.381,7,1.67,8,0.652,9,2.056,10,0.795,11,2.604,12,1.497,13,3.473,14,3.473,15,3.473,16,2.702,17,3.473,18,3.473,19,1.381,20,2.705,21,2.195,22,3.879,23,3.879,24,3.879,25,2.452,26,3.879,27,1.795,28,1.795,29,2.195,30,3.473,31,2.195,32,3.473,33,1.952,34,0.073,35,0.96,36,1.67,37,1.67,38,2.056,39,2.642,40,1.67,41,2.452,42,1.67,43,2.642,44,2.642,45,1.67,46,1.045,47,0.409,48,3.473,49,3.206,50,3.473,51,3.473,52,1.67,53,2.195,54,2.195,55,1.67,56,2.604,57,1.67,58,1.045,59,1.67,60,0.795,61,1.67,62,0.795,63,1.381,64,1.67,65,0.051,66,0.051]],["title/classes/Language.html",[47,0.376,60,0.731]],["body/classes/Language.html",[3,0.596,4,0.488,8,0.488,10,0.857,12,0.719,34,0.073,46,0.596,47,0.307,58,1.397,60,1.458,65,0.042,66,0.042,67,1.252,68,1.541,69,0.863,70,0.863,71,1.035,72,1.035,73,1.252,74,1.541,75,0.488,76,0.702,77,2.414,78,2.011,79,4.616,80,3.411,81,1.034,82,1.628,83,2.837,84,3.646,85,2.837,86,2.837,87,0.719,88,2.216,89,3.411,90,1.749,91,1.568,92,2.847,93,1.8,94,1.241,95,0.719,96,1.065,97,0.719,98,2.542,99,2.304,100,3.129,101,1.98,102,2.304,103,2.837,104,2.216,105,2.216,106,2.837,107,1.98,108,1.98,109,1.8,110,1.98,111,1.54,112,1.54,113,1.98,114,1.98,115,1.98,116,1.324,117,2.216,118,2.216,119,2.216,120,2.847,121,1.324]],["title/injectables/LanguageService.html",[122,1.057,123,1.269]],["body/injectables/LanguageService.html",[3,0.404,4,0.738,8,0.331,10,0.901,11,0.849,12,1.087,33,1.304,34,0.073,35,0.488,36,2.293,37,0.849,46,0.639,47,0.329,49,3.013,58,0.792,60,1.463,65,0.031,66,0.031,69,1.51,70,1.842,71,1.967,72,2.115,73,1.342,74,2.328,75,0.331,76,0.524,77,2.025,78,1.728,81,0.771,82,1.494,87,0.488,90,1.087,91,1.318,93,1.342,94,1.51,95,0.956,96,0.855,97,0.956,102,1.342,103,2.328,104,2.328,111,1.087,112,1.366,116,1.087,121,1.087,122,0.925,123,1.704,124,0.849,125,1.045,126,2.927,127,3.29,128,2.235,129,1.342,130,2.123,131,1.652,132,1.652,133,1.639,134,1.42,135,1.652,136,1.652,137,2.328,138,2.927,139,1.652,140,3.628,141,2.696,142,4.275,143,2.632,144,2.632,145,2.992,146,2.123,147,2.992,148,1.343,149,3.259,150,2.992,151,2.123,152,1.342,153,2.992,154,2.557,155,3.259,156,2.632,157,3.259,158,1.342,159,2.632,160,2.123,161,1.343,162,1.652,163,1.342,164,1.891,165,1.342,166,1.342,167,2.123,168,2.048,169,1.257,170,0.849,171,2.048,172,2.992,173,2.328,174,1.652,175,1.376,176,1.343,177,1.564,178,2.123,179,1.343,180,1.652,181,2.123,182,2.123,183,1.343,184,1.342,185,2.123,186,1.704,187,1.342,188,2.123,189,2.123,190,2.123,191,2.123,192,1.343,193,1.652,194,1.652,195,1.11,196,2.123,197,2.123,198,1.045,199,1.376,200,1.045,201,0.849,202,3.762,203,2.123,204,2.123,205,2.632,206,2.123,207,2.632,208,1.343,209,1.652,210,1.652,211,1.652,212,1.652,213,1.343,214,2.123,215,2.123,216,1.652,217,1.343,218,1.343,219,1.343,220,2.123,221,1.343,222,1.343,223,1.343,224,1.343,225,1.343,226,1.652,227,1.343,228,1.045,229,1.343,230,2.632,231,1.343,232,1.343,233,1.343,234,1.376,235,0.585,236,2.123,237,2.123,238,1.045,239,1.045,240,1.343,241,1.343,242,1.343,243,1.343,244,1.343,245,1.343]],["title/components/LanguageSwitcher.html",[0,0.599,27,1.057]],["body/components/LanguageSwitcher.html",[0,0.962,1,1.417,2,1.165,3,0.546,4,0.448,5,1.147,6,0.949,7,1.147,8,0.448,10,0.955,19,0.949,20,2.357,21,1.689,25,2.005,27,1.7,28,0.791,29,1.689,31,1.689,33,1.758,34,0.073,35,0.659,40,2.466,41,2.005,42,1.147,46,0.805,47,0.281,52,1.147,53,1.689,54,1.689,55,1.147,56,2.212,57,1.147,58,1.174,59,1.147,60,1.453,61,1.147,62,0.546,63,0.949,64,1.147,65,0.039,66,0.039,69,1.165,75,0.448,76,0.659,81,0.971,82,1.534,87,0.659,90,1.152,91,1.355,93,1.689,94,1.165,95,0.971,96,0.863,97,0.971,111,0.971,112,1.503,116,0.971,121,0.971,123,2.164,127,3.221,128,2.04,129,1.689,133,1.625,134,1.7,163,1.689,164,2.212,173,2.723,175,1.659,177,1.83,184,1.689,195,1.398,201,1.147,234,1.83,235,1.165,246,3.036,247,1.147,248,2.08,249,2.212,250,2.08,251,2.08,252,2.08,253,2.08,254,2.08,255,2.08,256,2.469,257,2.469,258,3.172,259,2.08,260,2.08,261,2.723,262,3.288,263,3.499,264,3.902,265,2.673,266,1.815,267,2.673,268,1.815,269,2.616,270,1.815,271,2.08,272,2.673,273,1.413,274,2.08,275,2.673,276,2.673,277,1.815,278,1.815,279,1.815,280,1.413,281,1.413,282,1.815,283,2.08,284,1.815,285,1.815,286,1.815,287,1.815,288,3.172,289,2.08,290,2.673,291,2.673,292,2.08]],["title/classes/Theme.html",[47,0.376,62,0.731]],["body/classes/Theme.html",[3,0.56,4,0.459,8,0.459,10,0.82,12,0.676,19,0.974,34,0.073,46,0.56,47,0.288,58,1.423,62,1.442,65,0.04,66,0.04,67,1.177,69,0.811,70,0.811,71,0.974,72,0.974,73,1.177,75,0.459,76,0.672,77,2.392,78,2.004,80,3.481,81,0.989,82,1.609,83,2.756,85,2.756,86,2.756,87,0.676,88,2.119,89,3.244,90,1.726,91,1.544,94,1.186,95,0.676,96,1.049,97,0.676,98,2.635,99,2.239,100,2.119,102,2.488,105,2.756,106,2.119,109,2.382,111,1.514,112,1.514,116,1.286,117,2.119,118,2.119,119,2.119,121,1.286,165,1.721,169,0.82,249,1.177,293,1.449,294,1.862,295,2.488,296,1.862,297,1.449,298,4.682,299,1.862,300,1.862,301,3.542,302,2.723,303,2.119,304,2.723,305,3.542,306,3.542,307,1.862,308,2.756,309,2.756,310,3.542,311,1.862,312,1.862,313,2.723,314,2.723,315,1.862,316,4.169,317,1.862,318,1.862,319,1.862,320,2.723]],["title/injectables/ThemeService.html",[122,1.057,321,1.269]],["body/injectables/ThemeService.html",[3,0.442,4,0.775,6,1.643,8,0.362,10,0.946,11,0.929,12,1.409,33,1.216,34,0.073,35,0.534,46,0.686,47,0.527,58,0.84,62,1.461,65,0.034,66,0.053,69,1.369,70,1.833,71,2.028,72,2.167,75,0.362,76,0.562,77,2.082,78,1.879,81,0.827,82,1.528,87,0.534,90,1.307,91,1.363,94,0.993,95,1.013,96,0.888,97,1.013,98,1.44,111,1.141,112,1.409,116,1.013,121,1.141,122,0.993,124,0.929,126,3.018,128,1.643,129,1.44,131,2.445,132,1.773,133,1.773,134,1.879,135,1.773,136,1.773,137,1.773,138,2.921,139,1.773,141,3.099,152,1.44,154,2.274,162,1.773,165,1.44,166,1.763,169,1.247,170,0.929,171,2.171,174,2.171,175,1.459,177,1.881,180,1.773,186,1.191,187,1.44,193,1.773,194,1.773,195,1.191,200,1.143,209,1.773,210,1.773,211,1.773,212,1.773,228,1.773,234,0.768,235,0.64,238,1.143,269,1.986,308,3.018,309,3.018,321,1.778,322,1.143,323,3.446,324,2.79,325,3.143,326,3.143,327,2.278,328,3.143,329,1.469,330,2.278,331,2.278,332,2.278,333,1.773,334,2.278,335,2.278,336,1.773,337,2.278,338,1.469,339,2.278,340,2.278,341,3.143,342,1.469,343,2.278,344,1.469,345,2.278,346,2.278,347,2.278,348,2.278,349,2.278,350,2.278,351,2.278,352,1.469,353,2.278,354,2.278,355,2.278,356,2.278,357,2.278,358,3.143,359,3.143,360,3.143,361,2.278,362,2.278,363,2.278,364,2.278,365,2.278,366,1.469,367,1.469,368,1.143,369,1.469,370,2.278,371,2.278,372,1.469,373,1.469,374,2.79,375,1.469,376,1.469,377,1.469,378,2.278,379,1.469,380,1.469,381,1.469,382,1.469,383,1.469,384,1.469]],["title/components/ThemeSwitcher.html",[0,0.599,28,1.057]],["body/components/ThemeSwitcher.html",[0,1.02,1,1.415,2,1.162,3,0.545,4,0.446,5,1.143,6,0.946,7,1.143,8,0.446,10,0.953,19,0.946,20,2.354,21,1.685,25,2.001,27,0.788,28,1.522,29,1.685,31,1.685,33,1.698,34,0.073,35,0.657,41,2.354,42,1.143,45,2.463,46,0.803,47,0.28,52,1.143,53,1.685,54,1.685,55,1.143,56,2.208,57,1.143,58,1.052,59,1.143,60,0.545,61,1.143,62,1.465,63,0.946,64,1.143,65,0.039,66,0.039,70,1.162,75,0.446,76,0.658,81,0.968,82,1.533,87,0.657,90,1.15,91,1.353,95,0.968,96,0.862,97,0.968,109,2.208,111,1.269,112,1.415,116,0.968,121,0.968,128,2.037,133,1.522,134,1.698,152,1.685,154,2.613,163,1.685,164,1.685,166,1.685,169,0.803,175,1.655,177,2.162,184,1.685,195,1.394,201,1.143,234,1.394,235,1.162,247,1.143,248,2.074,249,1.685,250,2.718,251,2.074,252,2.074,253,2.074,254,2.074,255,2.074,256,2.464,257,2.464,259,2.074,260,2.074,261,2.718,262,3.285,269,2.463,271,2.074,273,1.408,280,1.408,281,1.408,283,2.074,289,2.074,292,2.074,295,1.685,303,2.074,321,2.162,323,3.218,333,2.074,385,3.032,386,3.493,387,3.897,388,2.666,389,1.809,390,2.666,391,2.074,392,2.666,393,2.666,394,1.809,395,1.809,396,2.666,397,2.666,398,1.809,399,1.809,400,1.809,401,1.809,402,1.809,403,1.809,404,3.166,405,2.666]],["title/coverage.html",[406,2.553]],["body/coverage.html",[0,1.013,1,1.362,8,0.734,9,2.317,27,1.297,28,1.297,34,0.072,40,1.882,45,1.882,47,0.581,60,0.896,62,0.896,65,0.055,66,0.055,68,2.317,96,0.734,99,1.882,122,1.634,123,1.557,125,2.317,169,0.896,246,2.317,247,2.37,293,2.317,321,1.557,322,2.317,385,2.317,406,2.317,407,2.977,408,2.977,409,2.918,410,4.734,411,2.317,412,4.699,413,4.699,414,2.317,415,2.918,416,2.317,417,2.317,418,2.317,419,2.317,420,4.657,421,3.75,422,3.75,423,3.75,424,3.75,425,2.317,426,2.317,427,3.354,428,2.317,429,2.317,430,2.317,431,2.977,432,2.977]],["title/dependencies.html",[433,1.589,434,2.265]],["body/dependencies.html",[34,0.073,35,1.227,36,2.562,37,2.136,38,2.629,65,0.06,66,0.06,198,3.155,199,1.767,368,2.629,434,2.629,435,3.379,436,3.38,437,4.729,438,3.379,439,3.379,440,3.379,441,2.136,442,3.379,443,3.379,444,3.379,445,2.629,446,3.379,447,2.629,448,3.379,449,3.379,450,3.379,451,3.379,452,3.379,453,3.379,454,3.379]],["title/index.html",[75,0.504,455,2.042,456,2.042]],["body/index.html",[0,0.992,2,1.241,4,0.703,12,1.325,16,2.217,34,0.054,63,1.49,65,0.054,66,0.054,78,1.589,133,1.241,134,1.241,158,2.68,168,2.217,169,0.858,170,2.834,186,1.907,199,1.49,235,1.241,239,2.217,297,2.217,336,2.217,391,2.838,436,2.217,441,2.542,457,2.849,458,4.023,459,2.849,460,3.411,461,2.217,462,3.647,463,2.849,464,2.849,465,4.384,466,4.484,467,2.849,468,3.647,469,2.849,470,2.849,471,2.849,472,2.849,473,2.849,474,2.849,475,2.849,476,2.849,477,3.647,478,2.849,479,2.849,480,2.849,481,4.023,482,2.849,483,2.849,484,2.849,485,2.849,486,2.849,487,3.13,488,2.849,489,2.849,490,2.849,491,2.849,492,2.849,493,2.849,494,2.849,495,2.849,496,2.849,497,3.647,498,4.023,499,2.849,500,2.849,501,2.849,502,2.849,503,2.849,504,4.023,505,2.849,506,4.484,507,2.849,508,3.647,509,2.849,510,2.849,511,2.849,512,2.849,513,2.849,514,2.849,515,2.849,516,2.849,517,2.849,518,2.849,519,2.849,520,2.849,521,2.849,522,1.801,523,2.849]],["title/modules.html",[524,2.553]],["body/modules.html",[34,0.064,65,0.064,66,0.064,524,2.979]],["title/overview.html",[522,2.074]],["body/overview.html",[2,1.643,34,0.064,65,0.064,66,0.064,67,2.384,124,2.384,216,3.365,226,2.935,522,2.384]],["title/properties.html",[76,0.718,433,1.589]],["body/properties.html",[34,0.067,65,0.064,66,0.064,76,0.937,461,2.957,525,3.8]],["title/miscellaneous/variables.html",[526,1.589,527,2.265]],["body/miscellaneous/variables.html",[1,1.307,34,0.073,65,0.053,66,0.053,75,0.689,96,1.038,158,1.764,169,1.084,186,2.449,187,2.961,199,1.46,274,2.172,295,1.764,409,2.172,411,3.1,414,3.1,415,2.172,416,2.801,417,3.1,418,2.172,419,2.801,425,2.172,426,2.801,427,2.172,428,2.801,429,2.801,430,2.801,441,1.764,445,2.172,447,2.172,460,2.172,487,2.172,526,2.172,527,2.172,528,4.209,529,3.6,530,2.792,531,3.6,532,2.792,533,2.792,534,2.792,535,2.792,536,2.792,537,2.792,538,2.792,539,2.792,540,2.792,541,2.792,542,3.6,543,3.6,544,2.792,545,2.792,546,2.792,547,2.792,548,2.792,549,2.792,550,2.792,551,2.792,552,2.792,553,2.792,554,3.6,555,2.792,556,2.792,557,2.792,558,2.792,559,2.792,560,2.792,561,2.792,562,2.792,563,2.792,564,2.792,565,2.792,566,2.792,567,2.792,568,2.792]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":525,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":203,"title":{},"body":{"injectables/LanguageService.html":{}}}],["1/1",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["16.0.1",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":216,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["2.3.0",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["20.0.3",{"_index":436,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["3",{"_index":226,"title":{},"body":{"injectables/LanguageService.html":{},"overview.html":{}}}],["4",{"_index":241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5",{"_index":243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["5.1.0",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["7.8.0",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["active",{"_index":154,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["acts",{"_index":13,"title":{},"body":{"components/App.html":{}}}],["actual_component",{"_index":64,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["add",{"_index":223,"title":{},"body":{"injectables/LanguageService.html":{}}}],["additional",{"_index":515,"title":{},"body":{"index.html":{}}}],["allows",{"_index":252,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["always",{"_index":346,"title":{},"body":{"injectables/ThemeService.html":{}}}],["angular",{"_index":158,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/cdk",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":368,"title":{},"body":{"injectables/ThemeService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":42,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/grid",{"_index":282,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["angular/material/icon",{"_index":281,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/menu",{"_index":280,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["angular/material/toolbar",{"_index":43,"title":{},"body":{"components/App.html":{}}}],["angular/platform",{"_index":198,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":38,"title":{},"body":{"components/App.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":428,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":1,"title":{"components/App.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.hello",{"_index":50,"title":{},"body":{"components/App.html":{}}}],["app.html",{"_index":30,"title":{},"body":{"components/App.html":{}}}],["app.scss",{"_index":32,"title":{},"body":{"components/App.html":{}}}],["app.title",{"_index":48,"title":{},"body":{"components/App.html":{}}}],["appconfig",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["application's",{"_index":163,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["applicationconfig",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":333,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["apply",{"_index":174,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["array",{"_index":184,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["artifacts",{"_index":490,"title":{},"body":{"index.html":{}}}],["associated",{"_index":310,"title":{},"body":{"classes/Theme.html":{}}}],["assumes",{"_index":345,"title":{},"body":{"injectables/ThemeService.html":{}}}],["attribute",{"_index":193,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["automatically",{"_index":472,"title":{},"body":{"index.html":{}}}],["available",{"_index":134,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["based",{"_index":155,"title":{},"body":{"injectables/LanguageService.html":{}}}],["body",{"_index":339,"title":{},"body":{"injectables/ThemeService.html":{}}}],["bootstrap",{"_index":426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(app",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brightness_1",{"_index":365,"title":{},"body":{"injectables/ThemeService.html":{}}}],["browser",{"_index":199,"title":{},"body":{"injectables/LanguageService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":487,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["buildthis",{"_index":488,"title":{},"body":{"index.html":{}}}],["button",{"_index":51,"title":{},"body":{"components/App.html":{}}}],["calls",{"_index":227,"title":{},"body":{"injectables/LanguageService.html":{}}}],["change",{"_index":236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage",{"_index":144,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":160,"title":{},"body":{"injectables/LanguageService.html":{}}}],["changes",{"_index":162,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["changetheme",{"_index":325,"title":{},"body":{"injectables/ThemeService.html":{}}}],["changetheme(theme",{"_index":337,"title":{},"body":{"injectables/ThemeService.html":{}}}],["check",{"_index":204,"title":{},"body":{"injectables/LanguageService.html":{}}}],["choice",{"_index":137,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["choose",{"_index":512,"title":{},"body":{"index.html":{}}}],["class",{"_index":47,"title":{"classes/Language.html":{},"classes/Theme.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["classes",{"_index":67,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"overview.html":{}}}],["cli",{"_index":460,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":78,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["codes",{"_index":221,"title":{},"body":{"injectables/LanguageService.html":{}}}],["come",{"_index":510,"title":{},"body":{"index.html":{}}}],["command",{"_index":504,"title":{},"body":{"index.html":{}}}],["compile",{"_index":489,"title":{},"body":{"index.html":{}}}],["complete",{"_index":483,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":57,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{},"overview.html":{}}}],["config",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":353,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(@inject(document",{"_index":369,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(document",{"_index":329,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(id",{"_index":88,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["constructor(languageservice",{"_index":266,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["constructor(private",{"_index":201,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["constructor(themeservice",{"_index":389,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["constructor(translate",{"_index":148,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructs",{"_index":303,"title":{},"body":{"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["container",{"_index":15,"title":{},"body":{"components/App.html":{}}}],["contrast",{"_index":359,"title":{},"body":{"injectables/ThemeService.html":{}}}],["control",{"_index":126,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["core/language/language.model",{"_index":279,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/language/language.service",{"_index":278,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["core/theming/theme.model",{"_index":398,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["core/theming/theme.service",{"_index":399,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["corresponding",{"_index":182,"title":{},"body":{"injectables/LanguageService.html":{}}}],["coverage",{"_index":406,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createnoderequesthandler(app",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":93,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["current",{"_index":234,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currentlanguage",{"_index":143,"title":{},"body":{"injectables/LanguageService.html":{}}}],["currently",{"_index":177,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["currenttheme",{"_index":324,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dark",{"_index":309,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["dark_mode",{"_index":363,"title":{},"body":{"injectables/ThemeService.html":{}}}],["default",{"_index":186,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":156,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defined",{"_index":91,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["delegating",{"_index":334,"title":{},"body":{"injectables/ThemeService.html":{}}}],["dependencies",{"_index":434,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["detailed",{"_index":519,"title":{},"body":{"index.html":{}}}],["dev",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":462,"title":{},"body":{"index.html":{}}}],["different",{"_index":255,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directive",{"_index":55,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["directives",{"_index":63,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["directory",{"_index":492,"title":{},"body":{"index.html":{}}}],["display",{"_index":109,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["displays",{"_index":251,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["dist",{"_index":491,"title":{},"body":{"index.html":{}}}],["document",{"_index":141,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["documentation",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["domain",{"_index":72,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["during",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.g",{"_index":102,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["e2e",{"_index":507,"title":{},"body":{"index.html":{}}}],["e2eangular",{"_index":509,"title":{},"body":{"index.html":{}}}],["each",{"_index":196,"title":{},"body":{"injectables/LanguageService.html":{}}}],["element",{"_index":54,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["emoji",{"_index":105,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["empty",{"_index":292,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["en",{"_index":103,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["encapsulates",{"_index":296,"title":{},"body":{"classes/Theme.html":{}}}],["end",{"_index":506,"title":{},"body":{"index.html":{}}}],["english",{"_index":157,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entities",{"_index":185,"title":{},"body":{"injectables/LanguageService.html":{}}}],["entity",{"_index":69,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["es",{"_index":104,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["español",{"_index":191,"title":{},"body":{"injectables/LanguageService.html":{}}}],["eventcoalescing",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":170,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"index.html":{}}}],["execute",{"_index":499,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["express",{"_index":447,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["fallback",{"_index":214,"title":{},"body":{"injectables/LanguageService.html":{}}}],["features",{"_index":18,"title":{},"body":{"components/App.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["files",{"_index":476,"title":{},"body":{"index.html":{}}}],["finds",{"_index":180,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["firebase",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":208,"title":{},"body":{"injectables/LanguageService.html":{}}}],["flag",{"_index":79,"title":{},"body":{"classes/Language.html":{}}}],["flare",{"_index":356,"title":{},"body":{"injectables/ThemeService.html":{}}}],["following",{"_index":503,"title":{},"body":{"index.html":{}}}],["found",{"_index":348,"title":{},"body":{"injectables/ThemeService.html":{}}}],["framework",{"_index":511,"title":{},"body":{"index.html":{}}}],["full",{"_index":271,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["functions",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":481,"title":{},"body":{"index.html":{}}}],["generated",{"_index":459,"title":{},"body":{"index.html":{}}}],["getactivelanguage",{"_index":263,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getactivetheme",{"_index":386,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getcode",{"_index":83,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getcurrentlanguage",{"_index":145,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrenttheme",{"_index":326,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getflag",{"_index":84,"title":{},"body":{"classes/Language.html":{}}}],["geticon",{"_index":301,"title":{},"body":{"classes/Theme.html":{}}}],["getid",{"_index":85,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["getlanguagebycode",{"_index":146,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagebycode(code",{"_index":178,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getlanguagelist",{"_index":264,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["getlanguages",{"_index":147,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getname",{"_index":86,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["gets",{"_index":111,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["getthemebycode",{"_index":327,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemebycode(code",{"_index":343,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getthemelist",{"_index":387,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["getthemes",{"_index":328,"title":{},"body":{"injectables/ThemeService.html":{}}}],["getting",{"_index":455,"title":{"index.html":{}},"body":{}}],["handler",{"_index":274,"title":{},"body":{"components/LanguageSwitcher.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":131,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["hc",{"_index":360,"title":{},"body":{"injectables/ThemeService.html":{}}}],["helpbuilding",{"_index":486,"title":{},"body":{"index.html":{}}}],["high",{"_index":358,"title":{},"body":{"injectables/ThemeService.html":{}}}],["holds",{"_index":194,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["html",{"_index":53,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["http",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":471,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["human",{"_index":313,"title":{},"body":{"classes/Theme.html":{}}}],["i18n",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":298,"title":{},"body":{"classes/Theme.html":{}}}],["id",{"_index":80,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["identifier",{"_index":99,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"coverage.html":{}}}],["identify",{"_index":305,"title":{},"body":{"classes/Theme.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["imports",{"_index":21,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["includes",{"_index":478,"title":{},"body":{"index.html":{}}}],["including",{"_index":16,"title":{},"body":{"components/App.html":{},"index.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["information",{"_index":518,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":217,"title":{},"body":{"injectables/LanguageService.html":{}}}],["initializes",{"_index":152,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["inject",{"_index":367,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":122,"title":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["injectables",{"_index":124,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"overview.html":{}}}],["injected",{"_index":335,"title":{},"body":{"injectables/ThemeService.html":{}}}],["instance",{"_index":94,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["integrate",{"_index":130,"title":{},"body":{"injectables/LanguageService.html":{}}}],["internal",{"_index":165,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["invoked",{"_index":275,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["item",{"_index":197,"title":{},"body":{"injectables/LanguageService.html":{}}}],["join(import.meta.dirname",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":500,"title":{},"body":{"index.html":{}}}],["label",{"_index":262,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["lang",{"_index":173,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["lang.getcode",{"_index":220,"title":{},"body":{"injectables/LanguageService.html":{}}}],["lang.getflag",{"_index":291,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getid",{"_index":290,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["lang.getname",{"_index":288,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["language",{"_index":60,"title":{"classes/Language.html":{}},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["language(1",{"_index":189,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language(2",{"_index":190,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language.model",{"_index":172,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languagecodes",{"_index":218,"title":{},"body":{"injectables/LanguageService.html":{}}}],["languages",{"_index":127,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{}}}],["languageservice",{"_index":123,"title":{"injectables/LanguageService.html":{}},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["languageswitcher",{"_index":27,"title":{"components/LanguageSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["legend",{"_index":52,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["light",{"_index":308,"title":{},"body":{"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["light_mode",{"_index":361,"title":{},"body":{"injectables/ThemeService.html":{}}}],["list",{"_index":133,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["loader",{"_index":445,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":331,"title":{},"body":{"injectables/ThemeService.html":{}}}],["local",{"_index":464,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":138,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["localstorage.getitem('lang",{"_index":213,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem('theme",{"_index":372,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('lang",{"_index":240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem('theme",{"_index":384,"title":{},"body":{"injectables/ThemeService.html":{}}}],["logic",{"_index":393,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["main",{"_index":14,"title":{},"body":{"components/App.html":{}}}],["manage",{"_index":129,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{}}}],["manages",{"_index":392,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["managing",{"_index":132,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["mapped",{"_index":171,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["matbuttonmodule",{"_index":25,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["match",{"_index":347,"title":{},"body":{"injectables/ThemeService.html":{}}}],["matches",{"_index":225,"title":{},"body":{"injectables/LanguageService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":306,"title":{},"body":{"classes/Theme.html":{}}}],["matgridlistmodule",{"_index":258,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["maticonmodule",{"_index":257,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["matmenumodule",{"_index":256,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["mattoolbarmodule",{"_index":26,"title":{},"body":{"components/App.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":19,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["method",{"_index":228,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["methods",{"_index":81,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["miscellaneous",{"_index":526,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":71,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["modify",{"_index":475,"title":{},"body":{"index.html":{}}}],["modules",{"_index":524,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":517,"title":{},"body":{"index.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["namefor",{"_index":482,"title":{},"body":{"index.html":{}}}],["navigate",{"_index":470,"title":{},"body":{"index.html":{}}}],["needed",{"_index":237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["needs",{"_index":514,"title":{},"body":{"index.html":{}}}],["new",{"_index":169,"title":{},"body":{"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":466,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["nothing",{"_index":215,"title":{},"body":{"injectables/LanguageService.html":{}}}],["number",{"_index":89,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["numeric",{"_index":304,"title":{},"body":{"classes/Theme.html":{}}}],["object",{"_index":70,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["objects",{"_index":195,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["old",{"_index":380,"title":{},"body":{"injectables/ThemeService.html":{}}}],["one",{"_index":235,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["open",{"_index":469,"title":{},"body":{"index.html":{}}}],["optimizes",{"_index":494,"title":{},"body":{"index.html":{}}}],["option",{"_index":294,"title":{},"body":{"classes/Theme.html":{}}}],["optional",{"_index":97,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["overview",{"_index":522,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":433,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":523,"title":{},"body":{"index.html":{}}}],["param",{"_index":116,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["parameters",{"_index":95,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["path",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":495,"title":{},"body":{"index.html":{}}}],["persist",{"_index":383,"title":{},"body":{"injectables/ThemeService.html":{}}}],["persisting",{"_index":135,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["persists",{"_index":167,"title":{},"body":{"injectables/LanguageService.html":{}}}],["pipes",{"_index":485,"title":{},"body":{"index.html":{}}}],["portfolioweb",{"_index":457,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":479,"title":{},"body":{"index.html":{}}}],["private",{"_index":77,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["production",{"_index":493,"title":{},"body":{"index.html":{}}}],["project",{"_index":458,"title":{},"body":{"index.html":{}}}],["properties",{"_index":76,"title":{"properties.html":{}},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"properties.html":{}}}],["protected",{"_index":261,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provide",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providebrowserglobalerrorlisteners",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration(witheventreplay",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":200,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["providehttpclient",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":248,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["provideserverrendering(withroutes(serverroutes",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providetranslateservice",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":82,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["readable",{"_index":314,"title":{},"body":{"classes/Theme.html":{}}}],["reference",{"_index":336,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["references",{"_index":520,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":397,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["reload",{"_index":473,"title":{},"body":{"index.html":{}}}],["remarks",{"_index":376,"title":{},"body":{"injectables/ThemeService.html":{}}}],["remove",{"_index":379,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendermode",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representation",{"_index":300,"title":{},"body":{"classes/Theme.html":{}}}],["representing",{"_index":106,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["represents",{"_index":73,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"classes/Theme.html":{}}}],["reqhandler",{"_index":430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resources",{"_index":516,"title":{},"body":{"index.html":{}}}],["results",{"_index":65,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":351,"title":{},"body":{"injectables/ThemeService.html":{}}}],["return",{"_index":121,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["returns",{"_index":112,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["root'},{'name",{"_index":59,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["routeroutlet",{"_index":24,"title":{},"body":{"components/App.html":{}}}],["routing",{"_index":17,"title":{},"body":{"components/App.html":{}}}],["run",{"_index":465,"title":{},"body":{"index.html":{}}}],["runner",{"_index":502,"title":{},"body":{"index.html":{}}}],["running",{"_index":468,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":350,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rxjs",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["saved",{"_index":332,"title":{},"body":{"injectables/ThemeService.html":{}}}],["saving",{"_index":340,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scaffolding",{"_index":477,"title":{},"body":{"index.html":{}}}],["schematics",{"_index":484,"title":{},"body":{"index.html":{}}}],["search",{"_index":181,"title":{},"body":{"injectables/LanguageService.html":{}}}],["select",{"_index":254,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["selected",{"_index":269,"title":{},"body":{"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["selector",{"_index":20,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["serveonce",{"_index":467,"title":{},"body":{"index.html":{}}}],["server",{"_index":441,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":419,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":128,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["set",{"_index":159,"title":{},"body":{"injectables/LanguageService.html":{}}}],["setlanguage",{"_index":265,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["setlanguage(lang",{"_index":272,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["sets",{"_index":153,"title":{},"body":{"injectables/LanguageService.html":{}}}],["settheme",{"_index":388,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["settheme(theme",{"_index":396,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["shared/components/language",{"_index":39,"title":{},"body":{"components/App.html":{}}}],["shared/components/theme",{"_index":44,"title":{},"body":{"components/App.html":{}}}],["showing",{"_index":276,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["signal",{"_index":277,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/App.html":{},"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"index.html":{}}}],["speed",{"_index":496,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.config.server.ts",{"_index":409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":418,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.ts",{"_index":9,"title":{},"body":{"components/App.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts",{"_index":68,"title":{},"body":{"classes/Language.html":{},"coverage.html":{}}}],["src/app/core/language/language.model.ts:16",{"_index":107,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:23",{"_index":108,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:30",{"_index":101,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:37",{"_index":92,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:59",{"_index":114,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:66",{"_index":115,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:73",{"_index":110,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.model.ts:80",{"_index":113,"title":{},"body":{"classes/Language.html":{}}}],["src/app/core/language/language.service.ts",{"_index":125,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/language/language.service.ts:108",{"_index":161,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:33",{"_index":192,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:43",{"_index":151,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:75",{"_index":176,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:84",{"_index":183,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/language/language.service.ts:94",{"_index":179,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/theming/theme.model.ts",{"_index":293,"title":{},"body":{"classes/Theme.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.model.ts:14",{"_index":311,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:21",{"_index":312,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:28",{"_index":307,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:35",{"_index":302,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:56",{"_index":318,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:64",{"_index":319,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:72",{"_index":315,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.model.ts:80",{"_index":317,"title":{},"body":{"classes/Theme.html":{}}}],["src/app/core/theming/theme.service.ts",{"_index":322,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/theming/theme.service.ts:108",{"_index":338,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:33",{"_index":366,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:46",{"_index":330,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:71",{"_index":342,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:80",{"_index":352,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/theming/theme.service.ts:94",{"_index":344,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/shared/components/language",{"_index":246,"title":{},"body":{"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["src/app/shared/components/theme",{"_index":385,"title":{},"body":{"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":425,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":463,"title":{},"body":{"index.html":{}}}],["started",{"_index":456,"title":{"index.html":{}},"body":{}}],["state",{"_index":166,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["statements",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":202,"title":{},"body":{"injectables/LanguageService.html":{}}}],["store",{"_index":239,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["stored",{"_index":205,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedlang",{"_index":206,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storedtheme",{"_index":370,"title":{},"body":{"injectables/ThemeService.html":{}}}],["string",{"_index":90,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["styleurl",{"_index":31,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["such",{"_index":297,"title":{},"body":{"classes/Theme.html":{},"index.html":{}}}],["suits",{"_index":513,"title":{},"body":{"index.html":{}}}],["supported",{"_index":74,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{}}}],["switcher",{"_index":41,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher'},{'name",{"_index":61,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.html",{"_index":259,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.scss",{"_index":260,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher.ts",{"_index":247,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switcher.ts:30",{"_index":390,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:31",{"_index":267,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:47",{"_index":268,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:48",{"_index":394,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:56",{"_index":270,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["switcher.ts:57",{"_index":395,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["switcher.ts:67",{"_index":273,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["switcher/language",{"_index":40,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"coverage.html":{}}}],["switcher/theme",{"_index":45,"title":{},"body":{"components/App.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["switching",{"_index":250,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["symbol",{"_index":100,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["table",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["templateurl",{"_index":29,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["test",{"_index":501,"title":{},"body":{"index.html":{}}}],["testing",{"_index":508,"title":{},"body":{"index.html":{}}}],["testrunning",{"_index":505,"title":{},"body":{"index.html":{}}}],["tests",{"_index":498,"title":{},"body":{"index.html":{}}}],["theme",{"_index":62,"title":{"classes/Theme.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theme's",{"_index":316,"title":{},"body":{"classes/Theme.html":{}}}],["theme(1",{"_index":355,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(2",{"_index":357,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(3",{"_index":362,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme(4",{"_index":364,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getcode",{"_index":378,"title":{},"body":{"injectables/ThemeService.html":{}}}],["theme.getid",{"_index":405,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.getname",{"_index":404,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["theme.model",{"_index":341,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themes",{"_index":323,"title":{},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["themeservice",{"_index":321,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["themeswitcher",{"_index":28,"title":{"components/ThemeSwitcher.html":{}},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{}}}],["theming",{"_index":299,"title":{},"body":{"classes/Theme.html":{}}}],["this.changelanguage(this.getlanguagebycode(storedlang",{"_index":229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changetheme(this.getthemebycode(storedtheme",{"_index":373,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.code",{"_index":119,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.currentlanguage",{"_index":230,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currentlanguage.getcode",{"_index":207,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.currenttheme",{"_index":374,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.currenttheme.getcode",{"_index":371,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.add(theme.getcode",{"_index":382,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.document.body.classlist.remove(this.currenttheme.getcode",{"_index":381,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.flag",{"_index":120,"title":{},"body":{"classes/Language.html":{}}}],["this.icon",{"_index":320,"title":{},"body":{"classes/Theme.html":{}}}],["this.id",{"_index":117,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.label",{"_index":283,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["this.languages",{"_index":231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.find(lang",{"_index":232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages.map(lang",{"_index":219,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languages[0",{"_index":188,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":287,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage",{"_index":285,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getcurrentlanguage().getname",{"_index":284,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.languageservice.getlanguages",{"_index":286,"title":{},"body":{"components/LanguageSwitcher.html":{}}}],["this.name",{"_index":118,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{}}}],["this.themes",{"_index":375,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes.find(theme",{"_index":377,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themes[0",{"_index":354,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.changetheme(theme",{"_index":403,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme",{"_index":401,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getcurrenttheme().getname",{"_index":400,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.themeservice.getthemes",{"_index":402,"title":{},"body":{"components/ThemeSwitcher.html":{}}}],["this.titleservice.settitle(title",{"_index":245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.addlangs(languagecodes",{"_index":222,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.instant('app.title",{"_index":244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.setdefaultlang('en",{"_index":224,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.use(this.currentlanguage.getcode",{"_index":242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["throw",{"_index":349,"title":{},"body":{"injectables/ThemeService.html":{}}}],["title",{"_index":142,"title":{},"body":{"injectables/LanguageService.html":{}}}],["titleservice",{"_index":150,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tools",{"_index":480,"title":{},"body":{"index.html":{}}}],["track",{"_index":289,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["translate",{"_index":49,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/App.html":{},"injectables/LanguageService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["translatedirective",{"_index":23,"title":{},"body":{"components/App.html":{}}}],["translatehttploader",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatehttploader(http",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateloader",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatepipe",{"_index":22,"title":{},"body":{"components/App.html":{}}}],["translateservice",{"_index":149,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translation",{"_index":140,"title":{},"body":{"injectables/LanguageService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["true",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":451,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":96,"title":{},"body":{"classes/Language.html":{},"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":209,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["ui",{"_index":249,"title":{},"body":{"components/LanguageSwitcher.html":{},"classes/Theme.html":{},"components/ThemeSwitcher.html":{}}}],["undefined",{"_index":211,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["unique",{"_index":98,"title":{},"body":{"classes/Language.html":{},"classes/Theme.html":{},"injectables/ThemeService.html":{}}}],["unit",{"_index":497,"title":{},"body":{"index.html":{}}}],["update",{"_index":238,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["updates",{"_index":164,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["updating",{"_index":139,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["use",{"_index":168,"title":{},"body":{"injectables/LanguageService.html":{},"index.html":{}}}],["used",{"_index":295,"title":{},"body":{"classes/Theme.html":{},"components/ThemeSwitcher.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":253,"title":{},"body":{"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["user's",{"_index":136,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["using",{"_index":391,"title":{},"body":{"components/ThemeSwitcher.html":{},"index.html":{}}}],["value",{"_index":187,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/App.html":{},"components/LanguageSwitcher.html":{},"components/ThemeSwitcher.html":{}}}],["variable",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":527,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":461,"title":{},"body":{"index.html":{},"properties.html":{}}}],["visit",{"_index":521,"title":{},"body":{"index.html":{}}}],["void",{"_index":175,"title":{},"body":{"injectables/LanguageService.html":{},"components/LanguageSwitcher.html":{},"injectables/ThemeService.html":{},"components/ThemeSwitcher.html":{}}}],["whenever",{"_index":474,"title":{},"body":{"index.html":{}}}],["window",{"_index":210,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["window.localstorage",{"_index":212,"title":{},"body":{"injectables/LanguageService.html":{},"injectables/ThemeService.html":{}}}],["zone.js",{"_index":453,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/App.html":{"url":"components/App.html","title":"component - App","body":"\n                   \n\n\n\n\n\n  Components\n  \n  App\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\nActs as the main container including routing and other application features.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n            \n                imports\n                \n                            TranslatePipe\n                            TranslateDirective\n                            RouterOutlet\n                            MatButtonModule\n                            MatToolbarModule\n                                LanguageSwitcher\n                                ThemeSwitcher\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.html\n            \n\n\n\n            \n                styleUrl\n                ./app.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslatePipe, TranslateDirective } from \"@ngx-translate/core\";\nimport { RouterOutlet } from '@angular/router';\nimport { LanguageSwitcher } from './shared/components/language-switcher/language-switcher';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ThemeSwitcher } from './shared/components/theme-switcher/theme-switcher';\n\n/**\n * The root component of the application.\n *\n * Acts as the main container including routing and other application features.\n * \n * @export\n * @component\n */\n@Component({\n  selector: 'app-root',\n  imports: [\n    TranslatePipe, \n    TranslateDirective,\n    RouterOutlet,\n    MatButtonModule,\n    MatToolbarModule,\n    LanguageSwitcher,\n    ThemeSwitcher\n  ],\n  templateUrl: './app.html',\n  styleUrl: './app.scss'\n})\nexport class App {}\n    \n\n    \n        \n\n\n\n\n\n\n\n\n\n  \n  \n  \n  \n\n\n\n\n  {{ 'app.title' | translate }}\n  {{ 'app.hello' | translate }}\n  Button\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ \\'app.title\\' | translate }}  {{ \\'app.hello\\' | translate }}  Button'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'App'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Language.html":{"url":"classes/Language.html","title":"class - Language","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Language\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Language\" (model domain)\nRepresents a language supported by the application.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                flag\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getFlag\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, flag: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.model.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of Language.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique identifier.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nName of the language.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nLanguage code.\n\n\n                                                        \n                                                \n                                                \n                                                        flag\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFlag symbol.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:30\n                        \n                    \n\n            \n                \n                    Language code (e.g., 'en', 'es').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:37\n                        \n                    \n\n            \n                \n                    Flag emoji or symbol representing the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:16\n                        \n                    \n\n            \n                \n                    Unique identifier for the language.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.model.ts:23\n                        \n                    \n\n            \n                \n                    Display name of the language.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:73\n                        \n                    \n\n\n            \n                \n                        Gets the language code.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The language code (e.g., 'en').\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getFlag\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFlag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the language flag symbol.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The flag representing the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:59\n                        \n                    \n\n\n            \n                \n                        Gets the language ID.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The unique ID of the language.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.model.ts:66\n                        \n                    \n\n\n            \n                \n                        Gets the language name.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The name of the language.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Language {\n    \n  /**\n   * Unique identifier for the language.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Display name of the language.\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Language code (e.g., 'en', 'es').\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Flag emoji or symbol representing the language.\n   * @private\n   * @type {string}\n   */\n  private flag: string;\n\n  /**\n   * Creates an instance of Language.\n   *\n   * @param {number} id - Unique identifier.\n   * @param {string} name - Name of the language.\n   * @param {string} code - Language code.\n   * @param {string} flag - Flag symbol.\n   */\n  constructor(id: number, name: string, code: string, flag: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.flag = flag;\n}\n\n  /**\n   * Gets the language ID.\n   *\n   * @returns {number} The unique ID of the language.\n   */\n  public getId(): number { return this.id; }\n\n  /**\n   * Gets the language name.\n   *\n   * @returns {string} The name of the language.\n   */\n  public getName(): string { return this.name; }\n\n  /**\n   * Gets the language code.\n   *\n   * @returns {string} The language code (e.g., 'en').\n   */\n  public getCode(): string { return this.code; }\n\n  /**\n   * Gets the language flag symbol.\n   *\n   * @returns {string} The flag representing the language.\n   */\n  public getFlag(): string { return this.flag; }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language/language.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Languages Control\" (model domain)\nService to manage application languages and integrate with ngx-translate.\nThis service handles:\n\nManaging the list of available languages.\nPersisting the user's language choice in localStorage.\nUpdating the translation service and document title.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentLanguage\n                            \n                            \n                                    Private\n                                languages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                getCurrentLanguage\n                            \n                            \n                                    Public\n                                getLanguageByCode\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language/language.service.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageService.\nInitializes translation service and sets the active language based on\nlocalStorage or defaults to English.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ngx-translate service instance.\n\n\n                                                        \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Angular Title service to set the document title.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the application's active language.\nUpdates internal state, persists choice to localStorage,\nupdates ngx-translate to use the new language,\nand sets the document title based on the new language.\nExample :                     mapped to the \"language.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Language to apply. An instance of the Entity Object \"Language\" (model domain),\nmapped to the \"language.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:75\n                        \n                    \n\n\n            \n                \n                        Gets the currently active Language object.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The active language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Finds the Language object by its code (e.g., 'en', 'es').\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe language code to search for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Language\n\n                        \n                            \n                                The corresponding Language object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguages\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/language/language.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Gets the list of supported languages.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                Array of Language entities.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.languages[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:43\n                        \n                    \n\n            \n                \n                    The currently active language as a Language object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language[]\n\n                    \n                \n                \n                    \n                        Default value : [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/language/language.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Language Control\" (model domain),\nwhich holds a list of available languages as Entity Objects \"Language\" (model domain).\nEach item represents a language supported by the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { Language } from './language.model';\nimport { Title } from '@angular/platform-browser';\n\n/**\n * Control Object: \"Languages Control\" (model domain)\n * \n * Service to manage application languages and integrate with ngx-translate.\n *\n * This service handles:\n * - Managing the list of available languages.\n * - Persisting the user's language choice in localStorage.\n * - Updating the translation service and document title.\n *\n * @export\n * @class LanguageService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  \n  /**\n   * The attribute of the Control Object \"Language Control\" (model domain),\n   * which holds a list of available languages as Entity Objects \"Language\" (model domain).\n   *\n   * Each item represents a language supported by the application.\n   *\n   * @private\n   * @type {Language[]}\n   */\n  private languages: Language[] = [  \n    new Language(1, 'English', 'en', '🇺🇸'),\n    new Language(2, 'Español', 'es', '🇪🇸')\n  ];\n  \n  /**\n   * The currently active language as a Language object.\n   * @private\n   * @type {Language}\n   */\n  private currentLanguage = this.languages[0];       // The active language\n\n  /**\n   * Creates an instance of LanguageService.\n   * Initializes translation service and sets the active language based on\n   * localStorage or defaults to English.\n   * \n   * @param {TranslateService} translate - The ngx-translate service instance.\n   * @param {Title} titleService - The Angular Title service to set the document title.\n   */\n  constructor(private translate: TranslateService, private titleService: Title) {\n      \n    // Step 1: Check if a language is stored in localStorage\n    let storedLang = this.currentLanguage.getCode(); // Default to the first language in the list\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedLang = localStorage.getItem('lang') || this.currentLanguage.getCode(); // Fallback to the default language if nothing is stored\n    }\n\n    // Step 2: Initialize the translation service\n    let languageCodes = this.languages.map(lang => lang.getCode());   // List of language codes\n    this.translate.addLangs(languageCodes);                           // Add available languages to the translation service\n    this.translate.setDefaultLang('en');                              // Default language, fallback if nothing else matches\n\n    // Step 3: Calls the changeLanguage method with the stored language or defaults to English\n    this.changeLanguage(this.getLanguageByCode(storedLang));\n  }\n\n  /**\n   * Gets the currently active Language object.\n   *\n   * @returns {Language} The active language entity.\n   */\n  public getCurrentLanguage(): Language {\n    return this.currentLanguage;\n  }\n\n  /**\n   * Gets the list of supported languages.\n   *\n   * @returns {Language[]} Array of Language entities.\n   */\n  public getLanguages(): Language[] {\n    return this.languages;\n  }\n\n  /**\n   * Finds the Language object by its code (e.g., 'en', 'es').\n   *\n   * @param {string} code - The language code to search for.\n   * @returns {Language} The corresponding Language object.\n   */\n  public getLanguageByCode(code: string): Language {\n    return this.languages.find(lang => lang.getCode() === code)!;\n  }\n\n  /**\n   * Changes the application's active language.\n   * Updates internal state, persists choice to localStorage, \n   * updates ngx-translate to use the new language,\n   * and sets the document title based on the new language.\n   *\n   * @param {Language} lang - The new `Language` to apply. An instance of the Entity Object \"Language\" (model domain),\n   *                          mapped to the \"language.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeLanguage(lang: Language): void {\n\n    // Step 1: Check if the new language is the same as the current one. If so, no change needed\n    if (this.currentLanguage === lang) return; // No change needed\n\n    // Step 2: Update the current language\n    this.currentLanguage = lang;\n\n    // Step 3: Store the new language in localStorage (only in browser)\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('lang', this.currentLanguage.getCode());\n    }\n    \n    // Step 4: Use the new language in the translation service\n    this.translate.use(this.currentLanguage.getCode());\n\n    // Step 5: Set the browser title based on the current language\n    let title = this.translate.instant('app.title');\n    this.titleService.setTitle(title);\n\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSwitcher.html":{"url":"components/LanguageSwitcher.html","title":"component - LanguageSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LanguageSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/language-switcher/language-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's language.\nDisplays the current language and allows the user to select a different one\nfrom the list of available languages.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-language-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                            MatGridListModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./language-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./language-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveLanguage\n                            \n                            \n                                    Public\n                                getLanguageList\n                            \n                            \n                                    Public\n                                setLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of LanguageSwitcher.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService to manage languages.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:47\n                        \n                    \n\n\n            \n                \n                        Returns the currently selected language.\n\n\n                        \n                            Returns :         Language\n\n                        \n                            \n                                The current language entity.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getLanguageList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLanguageList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available languages from the service.\n\n\n                        \n                            Returns :         Language[]\n\n                        \n                            \n                                An array of Language objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setLanguage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setLanguage(lang: Language)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/language-switcher/language-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Handler invoked when a language is selected from the UI.\nUpdates the language in the service and updates the label.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected language.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/language-switcher/language-switcher.ts:31\n                        \n                    \n\n            \n                \n                    Label showing the name of the currently selected language.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal } from '@angular/core';\nimport { LanguageService } from '../../../core/language/language.service';\nimport { Language } from '../../../core/language/language.model';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/**\n * Component that provides a UI for switching the application's language.\n * \n * Displays the current language and allows the user to select a different one\n * from the list of available languages.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-language-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule, MatGridListModule],\n  templateUrl: './language-switcher.html',\n  styleUrl: './language-switcher.scss'\n})\nexport class LanguageSwitcher {\n\n  /**\n   * Label showing the name of the currently selected language.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Creates an instance of LanguageSwitcher.\n   *\n   * @param {LanguageService} languageService - Service to manage languages.\n   */\n  constructor(private languageService: LanguageService) {\n    this.label = this.languageService.getCurrentLanguage().getName();\n  }\n  \n  /**\n   * Returns the currently selected language.\n   *\n   * @returns {Language} The current language entity.\n   */\n  public getActiveLanguage(): Language {\n    return this.languageService.getCurrentLanguage();\n  }\n  \n  /**\n   * Gets the full list of available languages from the service.\n   *\n   * @returns {Language[]} An array of `Language` objects.\n   */\n  public getLanguageList(): Language[] {\n    return this.languageService.getLanguages();\n  }\n\n  /**\n   * Handler invoked when a language is selected from the UI.\n   * Updates the language in the service and updates the label.\n   *\n   * @param {Language} lang The selected language.\n   * @returns {void}\n   */\n  public setLanguage(lang: Language): void {\n    this.languageService.changeLanguage(lang);\n    this.label = lang.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n  {{ label }}\n\n\n\n  @for (lang of getLanguageList(); track lang.getId()) {\n    \n      \n        {{ lang.getFlag() }}\n        {{ lang.getName() }}\n      \n    \n  } @empty {\n    No languages available\n  }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}  @for (lang of getLanguageList(); track lang.getId()) {                  {{ lang.getFlag() }}        {{ lang.getName() }}            } @empty {    No languages available  }'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theme.html":{"url":"classes/Theme.html","title":"class - Theme","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theme\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity Object: \"Theme\" (model domain)\nRepresents a theme option used in the application.\nIt encapsulates metadata such as ID, display name, code, and icon used for theming and UI representation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                code\n                            \n                            \n                                    Private\n                                icon\n                            \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCode\n                            \n                            \n                                    Public\n                                getIcon\n                            \n                            \n                                    Public\n                                getId\n                            \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string, code: string, icon: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.model.ts:35\n                            \n                        \n\n                \n                    \n                            Constructs a new Theme instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUnique numeric ID for the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nDisplay name of the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInternal code used to identify the theme.\n\n\n                                                        \n                                                \n                                                \n                                                        icon\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIcon representing the theme (Material icon name or emoji).\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:28\n                        \n                    \n\n            \n                \n                    Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:35\n                        \n                    \n\n            \n                \n                    Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:14\n                        \n                    \n\n            \n                \n                    Unique identifier for the theme.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.model.ts:21\n                        \n                    \n\n            \n                \n                    Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:72\n                        \n                    \n\n\n            \n                \n                        Gets the code identifier of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    getIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the icon associated with the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:56\n                        \n                    \n\n\n            \n                \n                        Gets the unique ID of the theme.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The theme's ID.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getName\n                        \n                    \n                \n            \n            \n                \n                        \n                    getName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.model.ts:64\n                        \n                    \n\n\n            \n                \n                        Gets the display name of the theme.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The theme's name.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Theme {\n\n   /**\n   * Unique identifier for the theme.\n   * @private\n   * @type {number}\n   */\n  private id: number;\n\n  /**\n   * Human-readable name of the theme (e.g., \"Light\", \"Dark\").\n   * @private\n   * @type {string}\n   */\n  private name: string;\n\n  /**\n   * Unique string code used to identify the theme (e.g., \"light\", \"dark\").\n   * @private\n   * @type {string}\n   */\n  private code: string;\n\n  /**\n   * Icon name or symbol associated with the theme (e.g., Material icon name or emoji).\n   * @private\n   * @type {string}\n   */\n  private icon: string;\n\n  /**\n   * Constructs a new Theme instance.\n   * \n   * @param id - Unique numeric ID for the theme.\n   * @param name - Display name of the theme.\n   * @param code - Internal code used to identify the theme.\n   * @param icon - Icon representing the theme (Material icon name or emoji).\n   */\n  constructor(id: number, name: string, code: string, icon: string) {\n    this.id = id;\n    this.name = name;\n    this.code = code;\n    this.icon = icon;\n  }\n\n  /**\n   * Gets the unique ID of the theme.\n   * @returns The theme's ID.\n   */\n  public getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Gets the display name of the theme.\n   * @returns The theme's name.\n   */\n  public getName(): string {\n    return this.name;\n  }\n\n  /**\n   * Gets the code identifier of the theme.\n   * @returns The theme's code.\n   */\n  public getCode(): string {\n    return this.code;\n  }\n\n  /**\n   * Gets the icon associated with the theme.\n   * @returns The theme's icon.\n   */\n  public getIcon(): string {\n    return this.icon;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/theming/theme.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Control Object: \"Themes Control\" (model domain)\nService to manage application theme\nThis service handles:\n\nManaging the list of available themes.\nPersisting the user's theme choice in localStorage.\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentTheme\n                            \n                            \n                                    Private\n                                themes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeTheme\n                            \n                            \n                                    Public\n                                getCurrentTheme\n                            \n                            \n                                    Public\n                                getThemeByCode\n                            \n                            \n                                    Public\n                                getThemes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/theming/theme.service.ts:46\n                            \n                        \n\n                \n                    \n                            Initializes the ThemeService.\nLoads the saved theme from localStorage if available and applies it\nby delegating to changeTheme().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected reference to the DOM document object.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:108\n                        \n                    \n\n\n            \n                \n                        Changes the active theme of the application.\nHandles updating the DOM body class, internal state, and saving\nthe selected theme to localStorage.\nExample :                     mapped to the \"theme.model\" (source code domain).\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new Theme to apply. An instance of the Entity Object \"Theme\" (model domain),\n  mapped to the \"theme.model\" (source code domain).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCurrentTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Finds a theme by its unique string code.\nAssumes a matching theme code is always available.\nIf no match is found, this method will throw at runtime.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe code of the theme to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The Theme matching the code.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemes\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/theming/theme.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Gets the list of all available themes.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                A list of all available themes configured in the application.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentTheme\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.themes[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:46\n                        \n                    \n\n            \n                \n                    The currently active theme as a Theme object.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theme[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/theming/theme.service.ts:33\n                        \n                    \n\n            \n                \n                    The attribute of the Control Object \"Themes Control\" (model domain),\nwhich holds a list of available themes as Entity Objects \"Theme\" (model domain).\nList of available themes for the application.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Theme } from './theme.model';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Control Object: \"Themes Control\" (model domain)\n * \n * Service to manage application theme\n *\n * This service handles:\n * - Managing the list of available themes.\n * - Persisting the user's theme choice in localStorage.\n\n *\n * @export\n * @class ThemeService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  /**\n   * The attribute of the Control Object \"Themes Control\" (model domain),\n   * which holds a list of available themes as Entity Objects \"Theme\" (model domain).\n   *\n   * List of available themes for the application.\n   * \n   * @private\n   * @type {Theme[]}\n   * \n   */\n  private themes: Theme[] = [\n    new Theme(1, 'Light', 'light', 'flare'),\n    new Theme(2, 'Light High Contrast', 'hc-light', 'light_mode'),\n    new Theme(3, 'Dark', 'dark', 'dark_mode'),\n    new Theme(4, 'Dark High Contrast', 'hc-dark', 'brightness_1')\n  ];\n\n  /**\n   * The currently active theme as a Theme object.\n   *\n   * @private\n   * @type {Theme}\n   */\n  private currentTheme = this.themes[0];\n\n  /**\n   * Initializes the `ThemeService`.\n   * \n   * Loads the saved theme from localStorage if available and applies it\n   * by delegating to `changeTheme()`.\n   *\n   * @param document - Injected reference to the DOM `document` object.\n   */\n  constructor(@Inject(DOCUMENT) private document: Document) {\n\n    let storedTheme = this.currentTheme.getCode();\n    if (typeof window !== 'undefined' && window.localStorage) {\n      storedTheme = localStorage.getItem('theme') || this.currentTheme.getCode();\n    }\n\n    this.changeTheme(this.getThemeByCode(storedTheme));\n  }\n\n  /**\n   * Gets the currently active theme.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getCurrentTheme(): Theme {\n    return this.currentTheme;\n  } \n\n  /**\n   * Gets the list of all available themes.\n   * \n   * @returns {Theme[]} A list of all available themes configured in the application.\n   */\n  public getThemes(): Theme[] {\n    return this.themes;\n  }\n\n  /**\n   * Finds a theme by its unique string code.\n   * \n   * @param {string} code - The code of the theme to retrieve.\n   * @returns {Theme} The `Theme` matching the code.\n   * \n   * @remarks\n   * Assumes a matching theme code is always available.\n   * If no match is found, this method will throw at runtime.\n   */\n  public getThemeByCode(code: string): Theme {\n    return this.themes.find(theme => theme.getCode() === code)!;\n  }\n\n  /**\n   * Changes the active theme of the application.\n   * \n   * Handles updating the DOM body class, internal state, and saving\n   * the selected theme to localStorage.\n   *\n   * @param {Theme} theme - The new `Theme` to apply. An instance of the Entity Object \"Theme\" (model domain),\n   *                          mapped to the \"theme.model\" (source code domain).\n   * @returns {void}\n   */\n  public changeTheme(theme: Theme): void {\n    if (this.currentTheme === theme) return;\n\n    // Remove old theme class and apply new one\n    this.document.body.classList.remove(this.currentTheme.getCode());\n    this.document.body.classList.add(theme.getCode());\n\n    // Update current theme state\n    this.currentTheme = theme;\n\n    // Persist to localStorage\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.setItem('theme', theme.getCode());\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThemeSwitcher.html":{"url":"components/ThemeSwitcher.html","title":"component - ThemeSwitcher","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThemeSwitcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/theme-switcher/theme-switcher.ts\n\n\n\n    \n        Description\n    \n    \n        Component that provides a UI for switching the application's themes.\nDisplays the current theme and allows the user to select a different one\nfrom the list of available themes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-theme-switcher\n            \n\n\n            \n                imports\n                \n                            MatButtonModule\n                            MatMenuModule\n                            MatIconModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./theme-switcher.html\n            \n\n\n\n            \n                styleUrl\n                ./theme-switcher.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getActiveTheme\n                            \n                            \n                                    Public\n                                getThemeList\n                            \n                            \n                                    Public\n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:30\n                            \n                        \n\n                \n                    \n                            Constructs the theme switcher component.\nInitializes the display label using the currently active theme.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService that manages theme state and switching logic.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getActiveTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    getActiveTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:48\n                        \n                    \n\n\n            \n                \n                        Gets the currently active theme from the service.\n\n\n                        \n                            Returns :         Theme\n\n                        \n                            \n                                The currently selected Theme object.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getThemeList\n                        \n                    \n                \n            \n            \n                \n                        \n                    getThemeList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:57\n                        \n                    \n\n\n            \n                \n                        Gets the full list of available themes from the service.\n\n\n                        \n                            Returns :         Theme[]\n\n                        \n                            \n                                An array of Theme objects.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme(theme: Theme)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:67\n                        \n                    \n\n\n            \n                \n                        Applies the selected theme and updates the label to reflect the new active theme.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            Theme\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected theme.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        label\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/theme-switcher/theme-switcher.ts:30\n                        \n                    \n\n            \n                \n                    Label used to display the currently active theme.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Theme } from '../../../core/theming/theme.model';\nimport { ThemeService } from '../../../core/theming/theme.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\n\n/**\n * Component that provides a UI for switching the application's themes.\n * \n * Displays the current theme and allows the user to select a different one\n * from the list of available themes.\n *\n * @export\n * @component\n */\n@Component({\n  selector: 'app-theme-switcher',\n  imports: [MatButtonModule, MatMenuModule, MatIconModule],\n  templateUrl: './theme-switcher.html',\n  styleUrl: './theme-switcher.scss'\n})\nexport class ThemeSwitcher {\n\n  /**\n   * Label used to display the currently active theme.\n   * @protected\n   * @type {string}\n   */\n  protected label: string;\n\n  /**\n   * Constructs the theme switcher component.\n   * \n   * Initializes the display label using the currently active theme.\n   * \n   * @param {ThemeService} themeService - Service that manages theme state and switching logic.\n   */\n  constructor(private themeService: ThemeService) {\n    this.label = this.themeService.getCurrentTheme().getName();\n  }\n\n  /**\n   * Gets the currently active theme from the service.\n   * \n   * @returns {Theme} The currently selected `Theme` object.\n   */\n  public getActiveTheme(): Theme {\n    return this.themeService.getCurrentTheme();\n  }\n\n  /**\n   * Gets the full list of available themes from the service.\n   * \n   * @returns {Theme[]} An array of `Theme` objects.\n   */\n  public getThemeList(): Theme[] {\n    return this.themeService.getThemes();\n  }\n\n  /**\n   * Applies the selected theme and updates the label to reflect the new active theme.\n   * \n   * @param {Theme} theme The selected theme.\n   * @returns {void}\n   */\n  public setTheme(theme: Theme): void {\n    this.themeService.changeTheme(theme);\n    this.label = theme.getName();\n  }\n\n}\n    \n\n    \n        \n\n\n  \n\n\n\n  @for (theme of getThemeList(); track theme.getId()) {\n    \n      \n      {{ theme.getName() }}\n    \n  } @empty {\n    No themes available\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @for (theme of getThemeList(); track theme.getId()) {                {{ theme.getName() }}      } @empty {    No themes available}'\n    var COMPONENTS = [{'name': 'App', 'selector': 'app-root'},{'name': 'LanguageSwitcher', 'selector': 'app-language-switcher'},{'name': 'ThemeSwitcher', 'selector': 'app-theme-switcher'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThemeSwitcher'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            httpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.ts\n            \n            component\n            App\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/language/language.model.ts\n            \n            class\n            Language\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/language/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.model.ts\n            \n            class\n            Theme\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/theming/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/shared/components/language-switcher/language-switcher.ts\n            \n            component\n            LanguageSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/theme-switcher/theme-switcher.ts\n            \n            component\n            ThemeSwitcher\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/cdk : ^20.0.3\n        \n            @angular/common : ^20.0.0\n        \n            @angular/compiler : ^20.0.0\n        \n            @angular/core : ^20.0.0\n        \n            @angular/forms : ^20.0.0\n        \n            @angular/material : ^20.0.3\n        \n            @angular/platform-browser : ^20.0.0\n        \n            @angular/platform-server : ^20.0.0\n        \n            @angular/router : ^20.0.0\n        \n            @angular/ssr : ^20.0.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            express : ^5.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPortfolioWeb\nThis project was generated using Angular CLI version 20.0.3.\nDevelopment server\nTo start a local development server, run:\nExample :ng serveOnce the server is running, open your browser and navigate to http://localhost:4200/. The application will automatically reload whenever you modify any of the source files.\nCode scaffolding\nAngular CLI includes powerful code scaffolding tools. To generate a new component, run:\nExample :ng generate component component-nameFor a complete list of available schematics (such as components, directives, or pipes), run:\nExample :ng generate --helpBuilding\nTo build the project run:\nExample :ng buildThis will compile your project and store the build artifacts in the dist/ directory. By default, the production build optimizes your application for performance and speed.\nRunning unit tests\nTo execute unit tests with the Karma test runner, use the following command:\nExample :ng testRunning end-to-end tests\nFor end-to-end (e2e) testing, run:\nExample :ng e2eAngular CLI does not come with an end-to-end testing framework by default. You can choose one that suits your needs.\nAdditional Resources\nFor more information on using the Angular CLI, including detailed command references, visit the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            httpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : join(import.meta.dirname, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideHttpClient(),\n    provideTranslateService({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    provideRouter(routes), \n    provideClientHydration(withEventReplay())\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateHttpLoader\n\n                    \n                \n                \n                    \n                        Default value : (http: HttpClient) =>\n    new TranslateHttpLoader(http, './i18n/', '.json')\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(App, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(withRoutes(serverRoutes))\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
